{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":0,"renderable":0},{"_id":"source/images/lofter.png","path":"images/lofter.png","modified":0,"renderable":0},{"_id":"themes/yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"source/CV/resume/resume.html","path":"CV/resume/resume.html","modified":1,"renderable":0},{"_id":"themes/yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/AcFun.png","path":"img/AcFun.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/CSDN.png","path":"img/CSDN.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/LOFTER.png","path":"img/LOFTER.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Coding.png","path":"img/Coding.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Quora.png","path":"img/Quora.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Plunker.png","path":"img/Plunker.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/bilibili.png","path":"img/bilibili.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/niconico.png","path":"img/niconico.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/博客园.png","path":"img/博客园.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/知乎.png","path":"img/知乎.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/简书.png","path":"img/简书.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"source/CV/resume/500k.jpg","path":"CV/resume/500k.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/CV/resume/resume.md","path":"CV/resume/resume.md","modified":1,"renderable":0},{"_id":"source/CV/resume/resume.pdf","path":"CV/resume/resume.pdf","modified":1,"renderable":0}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581339010863},{"_id":"themes/yelee/.gitignore","hash":"79b4a9ac435bc5833a0bc461ebacb10908b34ed3","modified":1581339011517},{"_id":"themes/yelee/README.md","hash":"12bc9cdb68f51df81bcc36a5263e0a6c5860f646","modified":1581339011522},{"_id":"themes/yelee/_config.yml","hash":"cfa9215996f100c4775613ddee7b933dcf798c1f","modified":1581339011522},{"_id":"themes/yelee/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1581339011591},{"_id":"source/_posts/01_如何搭建个人博客.md","hash":"b8acd1cd502dc599236639f32e2d0207bda1d031","modified":1581339010863},{"_id":"source/_posts/02_git常用命令.md","hash":"a6142e0fc38c7fadf9e75b2d67085a0842350251","modified":1581339010863},{"_id":"source/_posts/03_冒泡排序算法.md","hash":"c5c332c009374da39aedf183eb21a03bc88b3f86","modified":1581339010880},{"_id":"source/_posts/04_GBK和UTF-8的区别.md","hash":"c206271def5b1d3aa42969811ac10db660cb6186","modified":1581339010882},{"_id":"source/_posts/05_一个简单的备忘录app.md","hash":"02d01957d061c7bdaba4067c1f0de9664b70655e","modified":1581339010882},{"_id":"source/_posts/06_百日囚徒问题.md","hash":"7cde4b98016db696940ba585f12c7eb115b2800e","modified":1581339010889},{"_id":"source/_posts/07_Markdown的使用.md","hash":"89bab1ba0b022126713241551ceb26cdf22092cf","modified":1581339010889},{"_id":"source/_posts/08_使用selenium-wget实现自动下载图片.md","hash":"4159a10d7fdefa95660dfc50ea2bf00438a073b5","modified":1581339010889},{"_id":"source/_posts/09_ADB常用命令.md","hash":"228dc412f299d6e251378047ecfa726d425ab558","modified":1581339010889},{"_id":"source/_posts/10_安卓客户端取日志脚本.md","hash":"e032ea4852dc2bfb5a613723379eeca43748ff96","modified":1581339010889},{"_id":"source/hiden/东方之门.md","hash":"6692cdaf8c781106464920b01649bb6d25178fca","modified":1581339010889},{"_id":"source/hiden/人生逆旅.md","hash":"c7529d74ed4ce3935c5f1785c0edc9b8fae4958e","modified":1581339010889},{"_id":"source/hiden/在盐城.md","hash":"3838a637f6f328d63961879f0d87bb9eb36e40a7","modified":1581339010889},{"_id":"source/hiden/夜色褪红妆.md","hash":"db3d7c275a0ced9422828ae17e05d91a1332e209","modified":1581339010889},{"_id":"source/hiden/我是一个什么样的人.md","hash":"b42e0e61851fe4a6ee21e1b4a7e3435a7b1b42f4","modified":1581339010906},{"_id":"source/hiden/看见时光.md","hash":"e9e1460945f043572ef4e88cc0be95dcdda362e5","modified":1581339010907},{"_id":"source/hiden/你好，2017——再见，2017.md","hash":"06ef39e71815fc5152d7829f17d0a7b3ad4d0d21","modified":1581339010889},{"_id":"source/_posts/15_测试工作的一些总结.md","hash":"69cc0d62aa37015b16576883702d6a101b93079e","modified":1581339010889},{"_id":"source/hiden/亲人，愿望，时光，记忆.md","hash":"a29847b10a1fdccc1e98e460069e6001405f4718","modified":1581339010889},{"_id":"source/_posts/11_让你的Hexo支持mermaid.md","hash":"638390cd186b3a37a14c5ffa533918fdfdd98f54","modified":1581339010889},{"_id":"source/images/lofter.png","hash":"90e8b1967b57f27c009fd0aebf00ae18715c7f76","modified":1581339010948},{"_id":"source/tags/index.md","hash":"674adae3ec5f6c96f2092da48f9491dd03bb31e0","modified":1581339010952},{"_id":"themes/yelee/.github/ISSUE_TEMPLATE.md","hash":"ce083abf397c12747893a23e901d46558b53e0ad","modified":1581339011517},{"_id":"themes/yelee/languages/default.yml","hash":"3bdad891c90029447b4fbaedbbb11b8a59d06418","modified":1581339011527},{"_id":"themes/yelee/languages/en.yml","hash":"ff991c2c80d9ab69c984acb1c40480c8b98be2bc","modified":1581339011527},{"_id":"themes/yelee/languages/zh-Hans.yml","hash":"4fa4068a65089810e7dd95692f9157eb80c2e8de","modified":1581339011527},{"_id":"themes/yelee/languages/zh-Hant-HK.yml","hash":"bbc73dcd9170fe9efaab6fbbe1571886e0b8aa89","modified":1581339011527},{"_id":"themes/yelee/languages/zh-Hant-TW.yml","hash":"88b4678bba940bc270c7aea2debbf869ecf6cc18","modified":1581339011527},{"_id":"themes/yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1581339011591},{"_id":"themes/yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1581339011591},{"_id":"themes/yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1581339011591},{"_id":"themes/yelee/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1581339011591},{"_id":"themes/yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1581339011591},{"_id":"themes/yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1581339011591},{"_id":"themes/yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1581339011591},{"_id":"themes/yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1581339011591},{"_id":"source/CV/resume/resume.html","hash":"ac4ecdfb43c2d543aab8b60550abfdcdfa2ab963","modified":1594309633522},{"_id":"themes/yelee/layout/_partial/after-footer.ejs","hash":"748391b89b661fa1ed7da0b15ed6870981ec4dc3","modified":1581339011527},{"_id":"themes/yelee/layout/_partial/article.ejs","hash":"afd85b362d732fa9b439af7dc44b657d0d1aae3d","modified":1581339011545},{"_id":"themes/yelee/layout/_partial/archive-post.ejs","hash":"0ecc2ad07b4abad80f564ac1858c50bcbdff34f8","modified":1581339011543},{"_id":"themes/yelee/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1581339011545},{"_id":"themes/yelee/layout/_partial/background.ejs","hash":"aeef39abef66ee0bd6c9efe856eaeb1b81416d41","modified":1581339011545},{"_id":"themes/yelee/layout/_partial/footer.ejs","hash":"6ac1cc03a15f3eb0ba143306aed836c52ae2d43a","modified":1581339011559},{"_id":"themes/yelee/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1581339011559},{"_id":"themes/yelee/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1581339011564},{"_id":"themes/yelee/layout/_partial/ie-updater.ejs","hash":"8d1e1f3953efbcf5ec84a451439a62a1c95b55d7","modified":1581339011564},{"_id":"themes/yelee/layout/_partial/head.ejs","hash":"55e90c3d5de6d7ffcfe26c4dc22189a7a27b6651","modified":1581339011564},{"_id":"themes/yelee/layout/_partial/left-col.ejs","hash":"90fd7c763faf8d64d58612f592cbacbefdaea161","modified":1581339011569},{"_id":"themes/yelee/layout/_partial/mobile-nav.ejs","hash":"306be982577b0ef968f855d0dfeaab6b180b8a50","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/mathjax.ejs","hash":"ce868f8b2b5b377cadc270e3a5bb5826f8bf0dee","modified":1581339011569},{"_id":"themes/yelee/layout/_partial/open-in-new-tab.ejs","hash":"a59d4c768009dd621e741a29cf6446ebc2668fe9","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/page.ejs","hash":"cfce60062cdb60893baeda7fa0266ae4086c2bc8","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/scrolling-button.ejs","hash":"c5e1c3a8e1e6b0d927ac25a7fb8720ee7ac83ad8","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/post-nav-button.ejs","hash":"0a98bffdd14f6677721841c0ac4487a86c77266c","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/tab-title-change.ejs","hash":"7c4a7177e0c77de2d7607ca29fc395abebd34db7","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/tag-cloud-page.ejs","hash":"c7b25ef136e129c948ac37d6ff19e8815ab9fee6","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/toc.ejs","hash":"7ee88b1a98eea5cbd44c0f9a11b86b46aa2d6752","modified":1581339011590},{"_id":"themes/yelee/source/background/bg-2.jpg","hash":"3bc593c1f7d329dfa5a481aa56a04acff5074410","modified":1581339011608},{"_id":"themes/yelee/source/background/bg-1.jpg","hash":"a0e916a1d6d42e9de467f590273bf48eab2cbff4","modified":1581339011591},{"_id":"themes/yelee/source/background/bg-3.jpg","hash":"dd681609670a00fc3a6f5556f8018f274455b190","modified":1581339011610},{"_id":"themes/yelee/source/background/bg-4.jpg","hash":"d450f587ce2bcd761eff18ae463155cd2d2536e5","modified":1581339011612},{"_id":"themes/yelee/source/background/bg-5.jpg","hash":"2a74546e53f71d00d398a47978ed033a46071349","modified":1581339011614},{"_id":"themes/yelee/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1581339011616},{"_id":"themes/yelee/source/css/style.styl","hash":"b285f9a75abd09c7d06fe89e70f9e1819eac27dd","modified":1581339011652},{"_id":"themes/yelee/source/css/_variables.styl","hash":"f429eb9bc9f0a270ec68c4f4c63903250746a01c","modified":1581339011652},{"_id":"themes/yelee/source/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1581339011656},{"_id":"themes/yelee/source/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1581339011656},{"_id":"themes/yelee/source/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1581339011656},{"_id":"themes/yelee/source/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1581339011656},{"_id":"themes/yelee/source/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1581339011656},{"_id":"themes/yelee/source/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1581339011656},{"_id":"themes/yelee/source/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1581339011656},{"_id":"themes/yelee/source/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1581339011656},{"_id":"themes/yelee/source/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1581339011656},{"_id":"themes/yelee/source/img/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1581339011656},{"_id":"themes/yelee/source/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1581339011656},{"_id":"themes/yelee/source/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1581339011656},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1581339011656},{"_id":"themes/yelee/source/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1581339011672},{"_id":"themes/yelee/source/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1581339011672},{"_id":"themes/yelee/source/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1581339011672},{"_id":"themes/yelee/source/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1581339011672},{"_id":"themes/yelee/source/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1581339011679},{"_id":"themes/yelee/source/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1581339011680},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","hash":"5fb1bf6cf973062771ddf275ceeca5bc69c81c77","modified":1581339011680},{"_id":"themes/yelee/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1581339011680},{"_id":"themes/yelee/source/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1581339011672},{"_id":"themes/yelee/source/js/main.js","hash":"369774a7ff45a2e5117a796330a04aeb50a61fdf","modified":1581339011680},{"_id":"themes/yelee/source/js/mobile.js","hash":"8abc32d18f16db56f51caad607cffb6ca756eca9","modified":1581339011680},{"_id":"themes/yelee/source/js/pc.js","hash":"bc289c5dc610e2a34d308daeb9adea96d01f7788","modified":1581339011680},{"_id":"themes/yelee/source/js/search.js","hash":"001e324844e63f3bfb6f60d173b9c6954127be0b","modified":1581339011680},{"_id":"themes/yelee/source/js/toc.js","hash":"973c1a4e2c9de8f4f662b99623027658fe6d94c2","modified":1581339011680},{"_id":"themes/yelee/layout/_partial/comments/click2show.ejs","hash":"ecc4d3ca997c6fd127e00fa2edf0158b925d1d3e","modified":1581339011553},{"_id":"themes/yelee/layout/_partial/comments/count-comment.ejs","hash":"ada2032e401b73b312c50b75bdbb8ee71d5a291e","modified":1581339011554},{"_id":"themes/yelee/layout/_partial/comments/disqus.ejs","hash":"df7ee469b648b12b5ee3104ef513d54cbb7418af","modified":1581339011555},{"_id":"themes/yelee/layout/_partial/comments/duoshuo.ejs","hash":"e7f12f1246a67a5b556c2d5b37dc78733f1cf15a","modified":1581339011555},{"_id":"themes/yelee/layout/_partial/comments/youyan.ejs","hash":"d150085faee4809ba50f69c55d904605699040cb","modified":1581339011555},{"_id":"themes/yelee/layout/_partial/post/category.ejs","hash":"08c8d98bc6a73d3f72a3b0b30521ff28e1b657a7","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/post/tag.ejs","hash":"7d2693a1162bf26e4b1ae9b789e0b2a2637ddbd5","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/post/date.ejs","hash":"329ed372296a86bce73ff8936af5601723fdd70a","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/post/nav.ejs","hash":"6f531dbc9cc7ae42d2486d6707f826cfe7d9d8bc","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1581339011573},{"_id":"themes/yelee/layout/_partial/post/share.ejs","hash":"58c2db54a9867aaafe68a7f052b04701c7c3df0f","modified":1581339011573},{"_id":"themes/yelee/source/css/_partial/archive.styl","hash":"102c23dbb6cde3cbfca3b151c742e0d77911186e","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/article.styl","hash":"190828c822096bb3098a7d14c3340eb004057aa0","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/footer.styl","hash":"a419108f1b820c59fcc56d218bfaaa4ffc4f1d4d","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1581339011632},{"_id":"themes/yelee/source/css/_partial/highlight.styl","hash":"4e34bf9340ce9b15d2d59fc4ea761d1d110927cf","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/instagram.styl","hash":"a093443add2f529396d6b6bdef1675bc3acf3958","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/main.styl","hash":"405db411896f3c7de9e7dd27e58c920fb90b9834","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/mobile-slider.styl","hash":"39db458d4e9f6973afc1390b4d3fc0291fff4c40","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/page.styl","hash":"ca3f871adf8fdb296e4394070605dded53d93cb2","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/scroll.styl","hash":"f32deb9192568a2ea789d77a23a08d07f4e57d59","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/search.styl","hash":"688ff535a6005be02d947be75d22cfe1f8ce72cd","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/mobile.styl","hash":"dfb20f2515a26d75e42fe09741e91cc889426b11","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/share.styl","hash":"88c1277397b71eb1f3473a94d9542314f983cd09","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/tagcloud.styl","hash":"b38b275728bfe11809defe1077b03cb423c3c92f","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/toc.styl","hash":"8f2a057dc072285093e37f1f645e9cb53608642f","modified":1581339011634},{"_id":"themes/yelee/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1581339011634},{"_id":"themes/yelee/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1581339011634},{"_id":"themes/yelee/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1581339011650},{"_id":"themes/yelee/source/css/_partial/customise/blockquote.styl","hash":"5e6edb9ad49288743ed550a2bd8c9a3c8e208455","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/customise/code-block.styl","hash":"4db1a992a06fd92b779f0afc9bb8bb3667bdb101","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/customise/color-scheme.styl","hash":"b58262a9f8903e75df431291745e19ccd8ff243a","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/customise/heading.styl","hash":"c29799f09ebd87767fd9cc3b1fa795db44a94670","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/customise/inline-code.styl","hash":"a15292b2b3541ea022c0fb7441875192dee5ad9d","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/customise/list.styl","hash":"7db683e2837a078ad7817fb88914535588e49cfa","modified":1581339011616},{"_id":"themes/yelee/source/css/_partial/customise/social-icon.styl","hash":"bfa5c863d474266f32a570e34a0effda964f7f40","modified":1581339011616},{"_id":"source/CV/resume/500k.jpg","hash":"3d9efb918cb85be3dc21c14473afccbb78734f1d","modified":1581339010855},{"_id":"source/images/avatar.png","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1581339010930},{"_id":"source/images/avatar.jpg","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1581339010924},{"_id":"source/CV/resume/resume.md","hash":"c8f24c556aca3f2afae45ff20818239d9e027d83","modified":1594309031589},{"_id":"source/CV/resume/resume.pdf","hash":"142f210e609b41b165a562bc1700fd432cfd89ba","modified":1594309640449}],"Category":[],"Data":[],"Page":[{"title":"东方之门","date":"2017-01-13T15:03:25.000Z","tags":"摄影","_content":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n\n<img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\">\n","source":"hiden/东方之门.md","raw":"---\ntitle: 东方之门\ndate: 2017-01-13 23:03:25\ntags: 摄影\n---\n<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n\n<img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\">\n","updated":"2020-02-10T12:50:10.889Z","path":"hiden/东方之门.html","comments":1,"layout":"page","_id":"ckcdl2wpc0001fkujxa526shk","content":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n<p><img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\"></p>\n","excerpt":"","more":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n<p><img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\"></p>\n"},{"title":"人生逆旅","date":"2017-01-13T15:21:41.000Z","tags":"摄影","_content":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n\n<img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\">","source":"hiden/人生逆旅.md","raw":"---\ntitle: 人生逆旅\ndate: 2017-01-13 23:21:41\ntags: 摄影\n---\n<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n\n<img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\">","updated":"2020-02-10T12:50:10.889Z","path":"hiden/人生逆旅.html","comments":1,"layout":"page","_id":"ckcdl2wpj0003fkujhhl3z2qt","content":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n<p><img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\"></p>\n","excerpt":"","more":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n<p><img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\"></p>\n"},{"title":"夜色褪红妆","date":"2017-01-13T15:25:11.000Z","tags":"摄影","_content":"\n<img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\">\n","source":"hiden/夜色褪红妆.md","raw":"---\ntitle: 夜色褪红妆\ndate: 2017-01-13 23:25:11\ntags: 摄影\n---\n\n<img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\">\n","updated":"2020-02-10T12:50:10.889Z","path":"hiden/夜色褪红妆.html","comments":1,"layout":"page","_id":"ckcdl2wrl000wfkuj8kh6j01f","content":"<p><img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\"></p>\n","excerpt":"","more":"<p><img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\"></p>\n"},{"title":"在盐城","date":"2017-01-13T15:19:27.000Z","tags":"摄影","_content":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n\n<img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\">","source":"hiden/在盐城.md","raw":"---\ntitle: 在盐城\ndate: 2017-01-13 23:19:27\ntags: 摄影\n---\n<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n\n<img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\">","updated":"2020-02-10T12:50:10.889Z","path":"hiden/在盐城.html","comments":1,"layout":"page","_id":"ckcdl2wrr000yfkuj1tkkbk2i","content":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n<p><img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\"></p>\n","excerpt":"","more":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n<p><img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\"></p>\n"},{"noDate":true,"top":null,"title":"我是一个什么样的人","date":"2017-01-08T16:00:00.000Z","tags":"随笔","_content":"我是一个什么样的人，我还能变成一个什么样的人？\n这将是一个伴随我10年的问题。\n\n<!--more-->\n\n刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。\n\n大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。\n\n大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。\n\n......","source":"hiden/我是一个什么样的人.md","raw":"---\nnoDate: true\ntop: \ntitle: 我是一个什么样的人\ndate: 2017-01-09 00:00:00\ntags: 随笔\n---\n我是一个什么样的人，我还能变成一个什么样的人？\n这将是一个伴随我10年的问题。\n\n<!--more-->\n\n刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。\n\n大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。\n\n大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。\n\n......","updated":"2020-02-10T12:50:10.906Z","path":"hiden/我是一个什么样的人.html","comments":1,"layout":"page","_id":"ckcdl2wry0011fkujgxv3wshe","content":"<p>我是一个什么样的人，我还能变成一个什么样的人？<br>这将是一个伴随我10年的问题。</p>\n<a id=\"more\"></a>\n<p>刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。</p>\n<p>大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。</p>\n<p>大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。</p>\n<p>……</p>\n","excerpt":"<p>我是一个什么样的人，我还能变成一个什么样的人？<br>这将是一个伴随我10年的问题。</p>","more":"<p>刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。</p>\n<p>大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。</p>\n<p>大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。</p>\n<p>……</p>"},{"title":"看见时光","date":"2017-01-13T15:28:39.000Z","tags":"摄影","_content":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n\n<img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\">","source":"hiden/看见时光.md","raw":"---\ntitle: 看见时光\ndate: 2017-01-13 23:28:39\ntags: 摄影\n---\n<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n\n<img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\">","updated":"2020-02-10T12:50:10.907Z","path":"hiden/看见时光.html","comments":1,"layout":"page","_id":"ckcdl2ws20013fkujc1hu8z3g","content":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n<p><img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\"></p>\n","excerpt":"","more":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n<p><img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\"></p>\n"},{"title":"你好，2017 —— 再见，2017","<!-- date":"2017-01-10 19:04:41 -->","date":"2017-12-30T16:00:00.000Z","tags":"随笔","_content":"你好，2017\n\n大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。\n\n坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿\n\n<!--more-->\n我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿\n\n“有的人忙着死，有的人忙着活。”﻿﻿\n\n丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿\n\n新的一年里希望自己能高效地完成每一步规划。﻿﻿\n\n----\n\n#### 1月18日\t南邮三牌楼\n\n一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。\n\n#### 2月1日\t益林三里\n\n二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。\n\n#### 2月8日\t盐城医院\n\n在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。\n\n#### 3月10日\t入职培训\n\n接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。\n\n#### 3月11日\t南京老门东\n\n许久不见的朋友来玩\n\n#### 5月10日\t南邮毕设\n\n还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。\n\n#### 6月22日\t毕业\n\n除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。\n\n#### 789月\t试用、测试、webtest、devicetest\n到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。\n\n#### 10月\t转正\n\n转正可以领全份的工资，虽然还是月欠。。。\n\n转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。\n\n#### 11月5日\t上海\n\n带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。\n\n#### 11月11日\t益林三里\n\n外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。\n\n\n#### 12月\t江宁\n\n女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？\n\n\n这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。\n\n只有拼尽全力，才能毫不费力。这句话送给明年的自己。\n\n再见，2017\n\n","source":"hiden/你好，2017——再见，2017.md","raw":"---\ntitle: 你好，2017 —— 再见，2017\n<!-- date: 2017-01-10 19:04:41 -->\ndate: 2017-12-31 00:00:00\ntags: 随笔\n---\n你好，2017\n\n大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。\n\n坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿\n\n<!--more-->\n我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿\n\n“有的人忙着死，有的人忙着活。”﻿﻿\n\n丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿\n\n新的一年里希望自己能高效地完成每一步规划。﻿﻿\n\n----\n\n#### 1月18日\t南邮三牌楼\n\n一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。\n\n#### 2月1日\t益林三里\n\n二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。\n\n#### 2月8日\t盐城医院\n\n在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。\n\n#### 3月10日\t入职培训\n\n接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。\n\n#### 3月11日\t南京老门东\n\n许久不见的朋友来玩\n\n#### 5月10日\t南邮毕设\n\n还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。\n\n#### 6月22日\t毕业\n\n除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。\n\n#### 789月\t试用、测试、webtest、devicetest\n到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。\n\n#### 10月\t转正\n\n转正可以领全份的工资，虽然还是月欠。。。\n\n转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。\n\n#### 11月5日\t上海\n\n带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。\n\n#### 11月11日\t益林三里\n\n外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。\n\n\n#### 12月\t江宁\n\n女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？\n\n\n这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。\n\n只有拼尽全力，才能毫不费力。这句话送给明年的自己。\n\n再见，2017\n\n","updated":"2020-02-10T12:50:10.889Z","path":"hiden/你好，2017——再见，2017.html","comments":1,"layout":"page","_id":"ckcdl2ws70014fkujukt8oj4g","content":"<p>你好，2017</p>\n<p>大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。</p>\n<p>坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿</p>\n<a id=\"more\"></a>\n<p>我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿</p>\n<p>“有的人忙着死，有的人忙着活。”﻿﻿</p>\n<p>丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿</p>\n<p>新的一年里希望自己能高效地完成每一步规划。﻿﻿</p>\n<hr>\n<h4 id=\"1月18日-南邮三牌楼\"><a href=\"#1月18日-南邮三牌楼\" class=\"headerlink\" title=\"1月18日    南邮三牌楼\"></a>1月18日    南邮三牌楼</h4><p>一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。</p>\n<h4 id=\"2月1日-益林三里\"><a href=\"#2月1日-益林三里\" class=\"headerlink\" title=\"2月1日    益林三里\"></a>2月1日    益林三里</h4><p>二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。</p>\n<h4 id=\"2月8日-盐城医院\"><a href=\"#2月8日-盐城医院\" class=\"headerlink\" title=\"2月8日    盐城医院\"></a>2月8日    盐城医院</h4><p>在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。</p>\n<h4 id=\"3月10日-入职培训\"><a href=\"#3月10日-入职培训\" class=\"headerlink\" title=\"3月10日    入职培训\"></a>3月10日    入职培训</h4><p>接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。</p>\n<h4 id=\"3月11日-南京老门东\"><a href=\"#3月11日-南京老门东\" class=\"headerlink\" title=\"3月11日    南京老门东\"></a>3月11日    南京老门东</h4><p>许久不见的朋友来玩</p>\n<h4 id=\"5月10日-南邮毕设\"><a href=\"#5月10日-南邮毕设\" class=\"headerlink\" title=\"5月10日    南邮毕设\"></a>5月10日    南邮毕设</h4><p>还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。</p>\n<h4 id=\"6月22日-毕业\"><a href=\"#6月22日-毕业\" class=\"headerlink\" title=\"6月22日    毕业\"></a>6月22日    毕业</h4><p>除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。</p>\n<h4 id=\"789月-试用、测试、webtest、devicetest\"><a href=\"#789月-试用、测试、webtest、devicetest\" class=\"headerlink\" title=\"789月    试用、测试、webtest、devicetest\"></a>789月    试用、测试、webtest、devicetest</h4><p>到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。</p>\n<h4 id=\"10月-转正\"><a href=\"#10月-转正\" class=\"headerlink\" title=\"10月    转正\"></a>10月    转正</h4><p>转正可以领全份的工资，虽然还是月欠。。。</p>\n<p>转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。</p>\n<h4 id=\"11月5日-上海\"><a href=\"#11月5日-上海\" class=\"headerlink\" title=\"11月5日    上海\"></a>11月5日    上海</h4><p>带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。</p>\n<h4 id=\"11月11日-益林三里\"><a href=\"#11月11日-益林三里\" class=\"headerlink\" title=\"11月11日    益林三里\"></a>11月11日    益林三里</h4><p>外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。</p>\n<h4 id=\"12月-江宁\"><a href=\"#12月-江宁\" class=\"headerlink\" title=\"12月    江宁\"></a>12月    江宁</h4><p>女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？</p>\n<p>这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。</p>\n<p>只有拼尽全力，才能毫不费力。这句话送给明年的自己。</p>\n<p>再见，2017</p>\n","excerpt":"<p>你好，2017</p>\n<p>大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。</p>\n<p>坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿</p>","more":"<p>我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿</p>\n<p>“有的人忙着死，有的人忙着活。”﻿﻿</p>\n<p>丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿</p>\n<p>新的一年里希望自己能高效地完成每一步规划。﻿﻿</p>\n<hr>\n<h4 id=\"1月18日-南邮三牌楼\"><a href=\"#1月18日-南邮三牌楼\" class=\"headerlink\" title=\"1月18日    南邮三牌楼\"></a>1月18日    南邮三牌楼</h4><p>一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。</p>\n<h4 id=\"2月1日-益林三里\"><a href=\"#2月1日-益林三里\" class=\"headerlink\" title=\"2月1日    益林三里\"></a>2月1日    益林三里</h4><p>二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。</p>\n<h4 id=\"2月8日-盐城医院\"><a href=\"#2月8日-盐城医院\" class=\"headerlink\" title=\"2月8日    盐城医院\"></a>2月8日    盐城医院</h4><p>在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。</p>\n<h4 id=\"3月10日-入职培训\"><a href=\"#3月10日-入职培训\" class=\"headerlink\" title=\"3月10日    入职培训\"></a>3月10日    入职培训</h4><p>接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。</p>\n<h4 id=\"3月11日-南京老门东\"><a href=\"#3月11日-南京老门东\" class=\"headerlink\" title=\"3月11日    南京老门东\"></a>3月11日    南京老门东</h4><p>许久不见的朋友来玩</p>\n<h4 id=\"5月10日-南邮毕设\"><a href=\"#5月10日-南邮毕设\" class=\"headerlink\" title=\"5月10日    南邮毕设\"></a>5月10日    南邮毕设</h4><p>还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。</p>\n<h4 id=\"6月22日-毕业\"><a href=\"#6月22日-毕业\" class=\"headerlink\" title=\"6月22日    毕业\"></a>6月22日    毕业</h4><p>除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。</p>\n<h4 id=\"789月-试用、测试、webtest、devicetest\"><a href=\"#789月-试用、测试、webtest、devicetest\" class=\"headerlink\" title=\"789月    试用、测试、webtest、devicetest\"></a>789月    试用、测试、webtest、devicetest</h4><p>到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。</p>\n<h4 id=\"10月-转正\"><a href=\"#10月-转正\" class=\"headerlink\" title=\"10月    转正\"></a>10月    转正</h4><p>转正可以领全份的工资，虽然还是月欠。。。</p>\n<p>转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。</p>\n<h4 id=\"11月5日-上海\"><a href=\"#11月5日-上海\" class=\"headerlink\" title=\"11月5日    上海\"></a>11月5日    上海</h4><p>带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。</p>\n<h4 id=\"11月11日-益林三里\"><a href=\"#11月11日-益林三里\" class=\"headerlink\" title=\"11月11日    益林三里\"></a>11月11日    益林三里</h4><p>外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。</p>\n<h4 id=\"12月-江宁\"><a href=\"#12月-江宁\" class=\"headerlink\" title=\"12月    江宁\"></a>12月    江宁</h4><p>女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？</p>\n<p>这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。</p>\n<p>只有拼尽全力，才能毫不费力。这句话送给明年的自己。</p>\n<p>再见，2017</p>"},{"title":"亲人，愿望，时光，记忆","date":"2017-02-27T14:22:44.000Z","tags":"随笔","_content":"每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。\n\n我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。\n\n四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。\n\n若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。\n","source":"hiden/亲人，愿望，时光，记忆.md","raw":"---\ntitle: 亲人，愿望，时光，记忆\ndate: 2017-02-27 22:22:44\ntags: 随笔\n---\n每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。\n\n我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。\n\n四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。\n\n若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。\n","updated":"2020-02-10T12:50:10.889Z","path":"hiden/亲人，愿望，时光，记忆.html","comments":1,"layout":"page","_id":"ckcdl2wsa0016fkujrq9v2r9d","content":"<p>每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。</p>\n<p>我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。</p>\n<p>四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。</p>\n<p>若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。</p>\n","excerpt":"","more":"<p>每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。</p>\n<p>我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。</p>\n<p>四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。</p>\n<p>若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。</p>\n"},{"title":"tags","date":"2017-03-01T11:46:44.000Z","type":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-03-01 19:46:44\ntype: \n---\n","updated":"2020-02-10T12:50:10.952Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckcdl2wse0017fkujxjt0zdih","content":"","excerpt":"","more":""}],"Post":[{"title":"如何搭建个人博客","date":"2017-01-09T14:27:45.000Z","_content":"\n搭建个人主页的步骤如下：\n- 先将我们写的文章或者照片生成静态页面(hexo)\n- 并将这些静态页面部署到支持静态页面的服务器(github或coding)\n- 这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)\n\n<!--more-->\n\n下面是操作步骤：\n\n#### 准备环境：\n\n- node.js（npm）的安装\n\t\n\t1、hexo 是基于 node.js 来生成页面的\n\t2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令\n\n- hexo 的安装和初始化\n\n\t1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果\n\t2、常用的几条命令如下：\n\t\thexo n p '文章标题'\t//新建文章\n\t\thexo g\t\t\t\t//生成页面\n\t\thexo s\t\t\t\t//本地预览\n\t\thexo d\t\t\t\t//提交页面\n\n- git 的安装和配置\n\n\t1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器\n\t2、上一条的提交页面命令`hexo d`其实就是通过git将页面提交到配置文件中填写的github仓库的\n\n- github 的注册和配置\n\n\t1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件\n\t2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中\n\n\n具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：[手把手教你用Hexo+Github 搭建属于自己的博客](http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&fps=1)\n\n#### 配置主题\n\n跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme\n\n配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置\n\n#### 提交页面\n\n假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件`_config.yml`中\n\t\n\t# Deployment\n\tdeploy:\n\t  type: git\n\t  repo: \n\t    github: git@github.com:reGeorge/regeorge.github.io.git,master\t//github仓库\n\t    coding: git@git.coding.net:reGeorge/reGeorge.git,master\t\t//coding仓库\n\t  branch: master\n\n这里我配置了两个地址，执行`hexo d`命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）\n\t\n\thttps://regeorge.github.io/\n\thttp://regeorge.coding.me/\n\n\n\n\n\n\n","source":"_posts/01_如何搭建个人博客.md","raw":"---\ntitle: 如何搭建个人博客\ndate: 2017-01-09 22:27:45\ntags: hexo\n---\n\n搭建个人主页的步骤如下：\n- 先将我们写的文章或者照片生成静态页面(hexo)\n- 并将这些静态页面部署到支持静态页面的服务器(github或coding)\n- 这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)\n\n<!--more-->\n\n下面是操作步骤：\n\n#### 准备环境：\n\n- node.js（npm）的安装\n\t\n\t1、hexo 是基于 node.js 来生成页面的\n\t2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令\n\n- hexo 的安装和初始化\n\n\t1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果\n\t2、常用的几条命令如下：\n\t\thexo n p '文章标题'\t//新建文章\n\t\thexo g\t\t\t\t//生成页面\n\t\thexo s\t\t\t\t//本地预览\n\t\thexo d\t\t\t\t//提交页面\n\n- git 的安装和配置\n\n\t1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器\n\t2、上一条的提交页面命令`hexo d`其实就是通过git将页面提交到配置文件中填写的github仓库的\n\n- github 的注册和配置\n\n\t1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件\n\t2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中\n\n\n具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：[手把手教你用Hexo+Github 搭建属于自己的博客](http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&fps=1)\n\n#### 配置主题\n\n跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme\n\n配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置\n\n#### 提交页面\n\n假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件`_config.yml`中\n\t\n\t# Deployment\n\tdeploy:\n\t  type: git\n\t  repo: \n\t    github: git@github.com:reGeorge/regeorge.github.io.git,master\t//github仓库\n\t    coding: git@git.coding.net:reGeorge/reGeorge.git,master\t\t//coding仓库\n\t  branch: master\n\n这里我配置了两个地址，执行`hexo d`命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）\n\t\n\thttps://regeorge.github.io/\n\thttp://regeorge.coding.me/\n\n\n\n\n\n\n","slug":"01_如何搭建个人博客","published":1,"updated":"2020-02-10T12:50:10.863Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wp10000fkuju3xovy3s","content":"<p>搭建个人主页的步骤如下：</p>\n<ul>\n<li>先将我们写的文章或者照片生成静态页面(hexo)</li>\n<li>并将这些静态页面部署到支持静态页面的服务器(github或coding)</li>\n<li>这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)</li>\n</ul>\n<a id=\"more\"></a>\n<p>下面是操作步骤：</p>\n<h4 id=\"准备环境：\"><a href=\"#准备环境：\" class=\"headerlink\" title=\"准备环境：\"></a>准备环境：</h4><ul>\n<li><p>node.js（npm）的安装</p>\n<p>  1、hexo 是基于 node.js 来生成页面的<br>  2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令</p>\n</li>\n<li><p>hexo 的安装和初始化</p>\n<p>  1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果<br>  2、常用的几条命令如下：</p>\n<pre><code>hexo n p &apos;文章标题&apos;    //新建文章\nhexo g                //生成页面\nhexo s                //本地预览\nhexo d                //提交页面\n</code></pre></li>\n<li><p>git 的安装和配置</p>\n<p>  1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器<br>  2、上一条的提交页面命令<code>hexo d</code>其实就是通过git将页面提交到配置文件中填写的github仓库的</p>\n</li>\n<li><p>github 的注册和配置</p>\n<p>  1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件<br>  2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中</p>\n</li>\n</ul>\n<p>具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：<a href=\"http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&amp;fps=1\">手把手教你用Hexo+Github 搭建属于自己的博客</a></p>\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme</p>\n<p>配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置</p>\n<h4 id=\"提交页面\"><a href=\"#提交页面\" class=\"headerlink\" title=\"提交页面\"></a>提交页面</h4><p>假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件<code>_config.yml</code>中</p>\n<pre><code># Deployment\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:reGeorge/regeorge.github.io.git,master    //github仓库\n    coding: git@git.coding.net:reGeorge/reGeorge.git,master        //coding仓库\n  branch: master\n</code></pre><p>这里我配置了两个地址，执行<code>hexo d</code>命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）</p>\n<pre><code>https://regeorge.github.io/\nhttp://regeorge.coding.me/\n</code></pre>","excerpt":"<p>搭建个人主页的步骤如下：</p>\n<ul>\n<li>先将我们写的文章或者照片生成静态页面(hexo)</li>\n<li>并将这些静态页面部署到支持静态页面的服务器(github或coding)</li>\n<li>这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)</li>\n</ul>","more":"<p>下面是操作步骤：</p>\n<h4 id=\"准备环境：\"><a href=\"#准备环境：\" class=\"headerlink\" title=\"准备环境：\"></a>准备环境：</h4><ul>\n<li><p>node.js（npm）的安装</p>\n<p>  1、hexo 是基于 node.js 来生成页面的<br>  2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令</p>\n</li>\n<li><p>hexo 的安装和初始化</p>\n<p>  1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果<br>  2、常用的几条命令如下：</p>\n<pre><code>hexo n p &apos;文章标题&apos;    //新建文章\nhexo g                //生成页面\nhexo s                //本地预览\nhexo d                //提交页面\n</code></pre></li>\n<li><p>git 的安装和配置</p>\n<p>  1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器<br>  2、上一条的提交页面命令<code>hexo d</code>其实就是通过git将页面提交到配置文件中填写的github仓库的</p>\n</li>\n<li><p>github 的注册和配置</p>\n<p>  1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件<br>  2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中</p>\n</li>\n</ul>\n<p>具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：<a href=\"http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&amp;fps=1\">手把手教你用Hexo+Github 搭建属于自己的博客</a></p>\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme</p>\n<p>配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置</p>\n<h4 id=\"提交页面\"><a href=\"#提交页面\" class=\"headerlink\" title=\"提交页面\"></a>提交页面</h4><p>假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件<code>_config.yml</code>中</p>\n<pre><code># Deployment\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:reGeorge/regeorge.github.io.git,master    //github仓库\n    coding: git@git.coding.net:reGeorge/reGeorge.git,master        //coding仓库\n  branch: master\n</code></pre><p>这里我配置了两个地址，执行<code>hexo d</code>命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）</p>\n<pre><code>https://regeorge.github.io/\nhttp://regeorge.coding.me/\n</code></pre>"},{"title":"git常用命令","date":"2017-01-13T17:21:22.000Z","_content":"\n#### 创建本地仓库\n\n`git init`\n.git所在文件夹便是git对应的一个本地仓库\n\n<!--more-->\n\n#### 创建本地分支\n    git branch master\n\n#### 查看本地分支\n    git branch\n\n#### 设置远程仓库地址\n\tgit remote add github git@github.com:regeorge/blog.git\n\n#### 查看已配置的远程仓库\n    git remote\n\n#### 从远程仓库更新到本地分支\n\tgit pull github master\n\n#### 在未加入缓存区时回滚\n    git checkout -- .\n\n#### 将本文件夹内所有改动加入缓存区\n\tgit add .\n\n#### 在加入缓存区时回滚\n    git reset HEAD\n\n#### 将暂存区的改动提交到本地仓库\n\tgit commit -m \"add all files\"\n\n#### 在提交仓库后回滚\n    git log #查看提交记录（带有唯一标识commitid）\n    git revert %commitid%\n\n#### 将本地分支推送到远程仓库\n\tgit push github master\n\n#### .gitignore文件中写入不需要同步的文件夹路径\n\n#### hexo deploy 命令\n在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的\n\n#### FAQ\n\n- Q1：在github上创建仓库，在本地新建仓库并push产生冲突\n\t\n\n- A1：先pull后push\n\t\tgit push -u origin master -f\n\n参考：http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\n\t  http://blog.csdn.net/shiren1118/article/details/7761203","source":"_posts/02_git常用命令.md","raw":"---\ntitle: git常用命令\ndate: 2017-01-14 01:21:22\ntags: git\n---\n\n#### 创建本地仓库\n\n`git init`\n.git所在文件夹便是git对应的一个本地仓库\n\n<!--more-->\n\n#### 创建本地分支\n    git branch master\n\n#### 查看本地分支\n    git branch\n\n#### 设置远程仓库地址\n\tgit remote add github git@github.com:regeorge/blog.git\n\n#### 查看已配置的远程仓库\n    git remote\n\n#### 从远程仓库更新到本地分支\n\tgit pull github master\n\n#### 在未加入缓存区时回滚\n    git checkout -- .\n\n#### 将本文件夹内所有改动加入缓存区\n\tgit add .\n\n#### 在加入缓存区时回滚\n    git reset HEAD\n\n#### 将暂存区的改动提交到本地仓库\n\tgit commit -m \"add all files\"\n\n#### 在提交仓库后回滚\n    git log #查看提交记录（带有唯一标识commitid）\n    git revert %commitid%\n\n#### 将本地分支推送到远程仓库\n\tgit push github master\n\n#### .gitignore文件中写入不需要同步的文件夹路径\n\n#### hexo deploy 命令\n在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的\n\n#### FAQ\n\n- Q1：在github上创建仓库，在本地新建仓库并push产生冲突\n\t\n\n- A1：先pull后push\n\t\tgit push -u origin master -f\n\n参考：http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\n\t  http://blog.csdn.net/shiren1118/article/details/7761203","slug":"02_git常用命令","published":1,"updated":"2020-02-10T12:50:10.863Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wpf0002fkujvrxz2tf0","content":"<h4 id=\"创建本地仓库\"><a href=\"#创建本地仓库\" class=\"headerlink\" title=\"创建本地仓库\"></a>创建本地仓库</h4><p><code>git init</code><br>.git所在文件夹便是git对应的一个本地仓库</p>\n<a id=\"more\"></a>\n<h4 id=\"创建本地分支\"><a href=\"#创建本地分支\" class=\"headerlink\" title=\"创建本地分支\"></a>创建本地分支</h4><pre><code>git branch master\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"设置远程仓库地址\"><a href=\"#设置远程仓库地址\" class=\"headerlink\" title=\"设置远程仓库地址\"></a>设置远程仓库地址</h4><pre><code>git remote add github git@github.com:regeorge/blog.git\n</code></pre><h4 id=\"查看已配置的远程仓库\"><a href=\"#查看已配置的远程仓库\" class=\"headerlink\" title=\"查看已配置的远程仓库\"></a>查看已配置的远程仓库</h4><pre><code>git remote\n</code></pre><h4 id=\"从远程仓库更新到本地分支\"><a href=\"#从远程仓库更新到本地分支\" class=\"headerlink\" title=\"从远程仓库更新到本地分支\"></a>从远程仓库更新到本地分支</h4><pre><code>git pull github master\n</code></pre><h4 id=\"在未加入缓存区时回滚\"><a href=\"#在未加入缓存区时回滚\" class=\"headerlink\" title=\"在未加入缓存区时回滚\"></a>在未加入缓存区时回滚</h4><pre><code>git checkout -- .\n</code></pre><h4 id=\"将本文件夹内所有改动加入缓存区\"><a href=\"#将本文件夹内所有改动加入缓存区\" class=\"headerlink\" title=\"将本文件夹内所有改动加入缓存区\"></a>将本文件夹内所有改动加入缓存区</h4><pre><code>git add .\n</code></pre><h4 id=\"在加入缓存区时回滚\"><a href=\"#在加入缓存区时回滚\" class=\"headerlink\" title=\"在加入缓存区时回滚\"></a>在加入缓存区时回滚</h4><pre><code>git reset HEAD\n</code></pre><h4 id=\"将暂存区的改动提交到本地仓库\"><a href=\"#将暂存区的改动提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的改动提交到本地仓库\"></a>将暂存区的改动提交到本地仓库</h4><pre><code>git commit -m &quot;add all files&quot;\n</code></pre><h4 id=\"在提交仓库后回滚\"><a href=\"#在提交仓库后回滚\" class=\"headerlink\" title=\"在提交仓库后回滚\"></a>在提交仓库后回滚</h4><pre><code>git log #查看提交记录（带有唯一标识commitid）\ngit revert %commitid%\n</code></pre><h4 id=\"将本地分支推送到远程仓库\"><a href=\"#将本地分支推送到远程仓库\" class=\"headerlink\" title=\"将本地分支推送到远程仓库\"></a>将本地分支推送到远程仓库</h4><pre><code>git push github master\n</code></pre><h4 id=\"gitignore文件中写入不需要同步的文件夹路径\"><a href=\"#gitignore文件中写入不需要同步的文件夹路径\" class=\"headerlink\" title=\".gitignore文件中写入不需要同步的文件夹路径\"></a>.gitignore文件中写入不需要同步的文件夹路径</h4><h4 id=\"hexo-deploy-命令\"><a href=\"#hexo-deploy-命令\" class=\"headerlink\" title=\"hexo deploy 命令\"></a>hexo deploy 命令</h4><p>在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的</p>\n<h4 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h4><ul>\n<li>Q1：在github上创建仓库，在本地新建仓库并push产生冲突</li>\n</ul>\n<ul>\n<li>A1：先pull后push<pre><code>git push -u origin master -f\n</code></pre></li>\n</ul>\n<p>参考：<a href=\"http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\">http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/</a><br>      <a href=\"http://blog.csdn.net/shiren1118/article/details/7761203\">http://blog.csdn.net/shiren1118/article/details/7761203</a></p>\n","excerpt":"<h4 id=\"创建本地仓库\"><a href=\"#创建本地仓库\" class=\"headerlink\" title=\"创建本地仓库\"></a>创建本地仓库</h4><p><code>git init</code><br>.git所在文件夹便是git对应的一个本地仓库</p>","more":"<h4 id=\"创建本地分支\"><a href=\"#创建本地分支\" class=\"headerlink\" title=\"创建本地分支\"></a>创建本地分支</h4><pre><code>git branch master\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"设置远程仓库地址\"><a href=\"#设置远程仓库地址\" class=\"headerlink\" title=\"设置远程仓库地址\"></a>设置远程仓库地址</h4><pre><code>git remote add github git@github.com:regeorge/blog.git\n</code></pre><h4 id=\"查看已配置的远程仓库\"><a href=\"#查看已配置的远程仓库\" class=\"headerlink\" title=\"查看已配置的远程仓库\"></a>查看已配置的远程仓库</h4><pre><code>git remote\n</code></pre><h4 id=\"从远程仓库更新到本地分支\"><a href=\"#从远程仓库更新到本地分支\" class=\"headerlink\" title=\"从远程仓库更新到本地分支\"></a>从远程仓库更新到本地分支</h4><pre><code>git pull github master\n</code></pre><h4 id=\"在未加入缓存区时回滚\"><a href=\"#在未加入缓存区时回滚\" class=\"headerlink\" title=\"在未加入缓存区时回滚\"></a>在未加入缓存区时回滚</h4><pre><code>git checkout -- .\n</code></pre><h4 id=\"将本文件夹内所有改动加入缓存区\"><a href=\"#将本文件夹内所有改动加入缓存区\" class=\"headerlink\" title=\"将本文件夹内所有改动加入缓存区\"></a>将本文件夹内所有改动加入缓存区</h4><pre><code>git add .\n</code></pre><h4 id=\"在加入缓存区时回滚\"><a href=\"#在加入缓存区时回滚\" class=\"headerlink\" title=\"在加入缓存区时回滚\"></a>在加入缓存区时回滚</h4><pre><code>git reset HEAD\n</code></pre><h4 id=\"将暂存区的改动提交到本地仓库\"><a href=\"#将暂存区的改动提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的改动提交到本地仓库\"></a>将暂存区的改动提交到本地仓库</h4><pre><code>git commit -m &quot;add all files&quot;\n</code></pre><h4 id=\"在提交仓库后回滚\"><a href=\"#在提交仓库后回滚\" class=\"headerlink\" title=\"在提交仓库后回滚\"></a>在提交仓库后回滚</h4><pre><code>git log #查看提交记录（带有唯一标识commitid）\ngit revert %commitid%\n</code></pre><h4 id=\"将本地分支推送到远程仓库\"><a href=\"#将本地分支推送到远程仓库\" class=\"headerlink\" title=\"将本地分支推送到远程仓库\"></a>将本地分支推送到远程仓库</h4><pre><code>git push github master\n</code></pre><h4 id=\"gitignore文件中写入不需要同步的文件夹路径\"><a href=\"#gitignore文件中写入不需要同步的文件夹路径\" class=\"headerlink\" title=\".gitignore文件中写入不需要同步的文件夹路径\"></a>.gitignore文件中写入不需要同步的文件夹路径</h4><h4 id=\"hexo-deploy-命令\"><a href=\"#hexo-deploy-命令\" class=\"headerlink\" title=\"hexo deploy 命令\"></a>hexo deploy 命令</h4><p>在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的</p>\n<h4 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h4><ul>\n<li>Q1：在github上创建仓库，在本地新建仓库并push产生冲突</li>\n</ul>\n<ul>\n<li>A1：先pull后push<pre><code>git push -u origin master -f\n</code></pre></li>\n</ul>\n<p>参考：<a href=\"http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\">http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/</a><br>      <a href=\"http://blog.csdn.net/shiren1118/article/details/7761203\">http://blog.csdn.net/shiren1118/article/details/7761203</a></p>"},{"title":"冒泡排序算法","date":"2017-03-26T15:56:26.000Z","_content":"(对 n 个数降序)冒泡排序的思路是：\n\n1、最多进行 (n-1) 次排序\n\n2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）\n   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断\n\n<!--more-->\n\n关于复杂度的概念还未与其他排序算法比较\n\n代码如下：\n```\npublic class MyBubbleSort {\n\tpublic static void main(String[] args)\n\t{\n\t\tint[] arr = {2,6,3,9,4,5,1,2,5,8};\n\t\tint len = arr.length;\n\t\tfor (int i=0;i<len-1;i++)\n\t\t{\n\t\t\tfor (int j=0;j<len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的\n\t\t\t{\n\t\t\t\tif(arr[j]<arr[j+1])\n\t\t\t\t{\t\n\t\t\t\t\tint temp = 0;\n\t\t\t\t\ttemp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"第\"+(i+1)+\"次排序结果:\");\t\n\t\t\tfor(int a = 0; a <len;a++)\n\t\t\t{\n\t\t\t\tSystem.out.print(arr[a] + \"\\t\");\n            }\n            System.out.println(\"\");\n\t\t}\n\t\tSystem.out.print(\"最终排序结果为：\");\n\t\tfor(int a = 0; a <len;a++)\n\t\t{\n\t\t\tSystem.out.print(arr[a] + \"\\t\");\n        }\n        System.out.println(\"\");\n\t}\n}\n```","source":"_posts/03_冒泡排序算法.md","raw":"---\ntitle: 冒泡排序算法\ndate: 2017-03-26 23:56:26\ntags: 算法\n---\n(对 n 个数降序)冒泡排序的思路是：\n\n1、最多进行 (n-1) 次排序\n\n2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）\n   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断\n\n<!--more-->\n\n关于复杂度的概念还未与其他排序算法比较\n\n代码如下：\n```\npublic class MyBubbleSort {\n\tpublic static void main(String[] args)\n\t{\n\t\tint[] arr = {2,6,3,9,4,5,1,2,5,8};\n\t\tint len = arr.length;\n\t\tfor (int i=0;i<len-1;i++)\n\t\t{\n\t\t\tfor (int j=0;j<len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的\n\t\t\t{\n\t\t\t\tif(arr[j]<arr[j+1])\n\t\t\t\t{\t\n\t\t\t\t\tint temp = 0;\n\t\t\t\t\ttemp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"第\"+(i+1)+\"次排序结果:\");\t\n\t\t\tfor(int a = 0; a <len;a++)\n\t\t\t{\n\t\t\t\tSystem.out.print(arr[a] + \"\\t\");\n            }\n            System.out.println(\"\");\n\t\t}\n\t\tSystem.out.print(\"最终排序结果为：\");\n\t\tfor(int a = 0; a <len;a++)\n\t\t{\n\t\t\tSystem.out.print(arr[a] + \"\\t\");\n        }\n        System.out.println(\"\");\n\t}\n}\n```","slug":"03_冒泡排序算法","published":1,"updated":"2020-02-10T12:50:10.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wpq0005fkujshwqr59q","content":"<p>(对 n 个数降序)冒泡排序的思路是：</p>\n<p>1、最多进行 (n-1) 次排序</p>\n<p>2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）<br>   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断</p>\n<a id=\"more\"></a>\n<p>关于复杂度的概念还未与其他排序算法比较</p>\n<p>代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class MyBubbleSort &#123;</div><div class=\"line\">\tpublic static void main(String[] args)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tint[] arr = &#123;2,6,3,9,4,5,1,2,5,8&#125;;</div><div class=\"line\">\t\tint len = arr.length;</div><div class=\"line\">\t\tfor (int i=0;i&lt;len-1;i++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tfor (int j=0;j&lt;len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tif(arr[j]&lt;arr[j+1])</div><div class=\"line\">\t\t\t\t&#123;\t</div><div class=\"line\">\t\t\t\t\tint temp = 0;</div><div class=\"line\">\t\t\t\t\ttemp = arr[j];</div><div class=\"line\">\t\t\t\t\tarr[j] = arr[j+1];</div><div class=\"line\">\t\t\t\t\tarr[j+1] = temp;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tSystem.out.print(&quot;第&quot;+(i+1)+&quot;次排序结果:&quot;);\t</div><div class=\"line\">\t\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            System.out.println(&quot;&quot;);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.print(&quot;最终排序结果为：&quot;);</div><div class=\"line\">\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        System.out.println(&quot;&quot;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>(对 n 个数降序)冒泡排序的思路是：</p>\n<p>1、最多进行 (n-1) 次排序</p>\n<p>2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）<br>   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断</p>","more":"<p>关于复杂度的概念还未与其他排序算法比较</p>\n<p>代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class MyBubbleSort &#123;</div><div class=\"line\">\tpublic static void main(String[] args)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tint[] arr = &#123;2,6,3,9,4,5,1,2,5,8&#125;;</div><div class=\"line\">\t\tint len = arr.length;</div><div class=\"line\">\t\tfor (int i=0;i&lt;len-1;i++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tfor (int j=0;j&lt;len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tif(arr[j]&lt;arr[j+1])</div><div class=\"line\">\t\t\t\t&#123;\t</div><div class=\"line\">\t\t\t\t\tint temp = 0;</div><div class=\"line\">\t\t\t\t\ttemp = arr[j];</div><div class=\"line\">\t\t\t\t\tarr[j] = arr[j+1];</div><div class=\"line\">\t\t\t\t\tarr[j+1] = temp;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tSystem.out.print(&quot;第&quot;+(i+1)+&quot;次排序结果:&quot;);\t</div><div class=\"line\">\t\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            System.out.println(&quot;&quot;);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.print(&quot;最终排序结果为：&quot;);</div><div class=\"line\">\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        System.out.println(&quot;&quot;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"遇到乱码问题的解决方案","date":"2017-03-29T14:25:23.000Z","_content":"\n#### 编码的概念\n\n- GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。\n\n- UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。\n\n<!--more-->\n\n#### GBK和UTF8有什么区别？\n\n- UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。\n\n- GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。\n\n#### 如何在sublime中添加对中文的支持\n\n- 首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n- 然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)\n\nPS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。\n\n- 稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。\n\n#### Tips：\n  \n- 养成将手敲的代码存为 UTF-8 编码格式的习惯\n- 遇到乱码首先尝试转 UTF-8\n- 切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了","source":"_posts/04_GBK和UTF-8的区别.md","raw":"---\ntitle: 遇到乱码问题的解决方案\ndate: 2017-03-29 22:25:23\ntags: java\n---\n\n#### 编码的概念\n\n- GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。\n\n- UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。\n\n<!--more-->\n\n#### GBK和UTF8有什么区别？\n\n- UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。\n\n- GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。\n\n#### 如何在sublime中添加对中文的支持\n\n- 首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n- 然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)\n\nPS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。\n\n- 稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。\n\n#### Tips：\n  \n- 养成将手敲的代码存为 UTF-8 编码格式的习惯\n- 遇到乱码首先尝试转 UTF-8\n- 切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了","slug":"04_GBK和UTF-8的区别","published":1,"updated":"2020-02-10T12:50:10.882Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wps0006fkujpzhpxgnt","content":"<h4 id=\"编码的概念\"><a href=\"#编码的概念\" class=\"headerlink\" title=\"编码的概念\"></a>编码的概念</h4><ul>\n<li><p>GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。</p>\n</li>\n<li><p>UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h4 id=\"GBK和UTF8有什么区别？\"><a href=\"#GBK和UTF8有什么区别？\" class=\"headerlink\" title=\"GBK和UTF8有什么区别？\"></a>GBK和UTF8有什么区别？</h4><ul>\n<li><p>UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。</p>\n</li>\n<li><p>GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。</p>\n</li>\n</ul>\n<h4 id=\"如何在sublime中添加对中文的支持\"><a href=\"#如何在sublime中添加对中文的支持\" class=\"headerlink\" title=\"如何在sublime中添加对中文的支持\"></a>如何在sublime中添加对中文的支持</h4><ul>\n<li>首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>\n<ul>\n<li>然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)</li>\n</ul>\n<p>PS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。</p>\n<ul>\n<li>稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。</li>\n</ul>\n<h4 id=\"Tips：\"><a href=\"#Tips：\" class=\"headerlink\" title=\"Tips：\"></a>Tips：</h4><ul>\n<li>养成将手敲的代码存为 UTF-8 编码格式的习惯</li>\n<li>遇到乱码首先尝试转 UTF-8</li>\n<li>切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了</li>\n</ul>\n","excerpt":"<h4 id=\"编码的概念\"><a href=\"#编码的概念\" class=\"headerlink\" title=\"编码的概念\"></a>编码的概念</h4><ul>\n<li><p>GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。</p>\n</li>\n<li><p>UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。</p>\n</li>\n</ul>","more":"<h4 id=\"GBK和UTF8有什么区别？\"><a href=\"#GBK和UTF8有什么区别？\" class=\"headerlink\" title=\"GBK和UTF8有什么区别？\"></a>GBK和UTF8有什么区别？</h4><ul>\n<li><p>UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。</p>\n</li>\n<li><p>GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。</p>\n</li>\n</ul>\n<h4 id=\"如何在sublime中添加对中文的支持\"><a href=\"#如何在sublime中添加对中文的支持\" class=\"headerlink\" title=\"如何在sublime中添加对中文的支持\"></a>如何在sublime中添加对中文的支持</h4><ul>\n<li>首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>\n<ul>\n<li>然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)</li>\n</ul>\n<p>PS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。</p>\n<ul>\n<li>稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。</li>\n</ul>\n<h4 id=\"Tips：\"><a href=\"#Tips：\" class=\"headerlink\" title=\"Tips：\"></a>Tips：</h4><ul>\n<li>养成将手敲的代码存为 UTF-8 编码格式的习惯</li>\n<li>遇到乱码首先尝试转 UTF-8</li>\n<li>切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了</li>\n</ul>"},{"title":"一个简单的备忘录app","date":"2017-05-20T12:13:59.000Z","_content":"\n\n### 增删查改的实现\n\n#### 创建主活动及布局文件\n\n+ 主活动是整个app的入口，还原一下用户的使用场景：\n\n<!--more-->\n\n\t点击新增按钮：进入AddContent活动\n\t点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n\n+ 布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。\n\n+ 在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。\n\n\t- 对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:\n\n\t\t\tnewbtn.setOnClickListener(new View.OnClickListener() {\n\t\t\t        @Override\n\t\t\t        public void onClick(View v) {\n\t\t\t           Intent i = new Intent(MainActivity.this, AddContent.class);\n\t\t\t           startActivity(i);\n\t\t\t        }\n\t\t\t);\n\n\t- 对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：\n\n\t\t\tlv.setOnItemClickListener(this);\n\t\t\t@Override\n\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position,\n\t\t\t\t\t\tlong id) {\n\t\t\t    \tcursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n\t\t\t     \t\t\tnull, null, null);\n\t\t\t\t\tcursor.moveToPosition(position);\n\t\t\t    \tIntent j = new Intent(MainActivity.this,ShowContent.class);\n\t\t\t    \tj.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n\t\t\t    \tj.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n\t\t\t    \tj.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n\t\t\t    \tstartActivity(j);\t\t\n\t\t\t\t}\n\n#### 创建数据库\n\n+ 重写了两个方法，分别是创建数据库和更新数据库。\n  - 其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。\n\n\t\t@Override\n\t\tpublic void onCreate(SQLiteDatabase db) {\n\t\t\t\tdb.execSQL(\"CREATE TABLE \" + TABLE_NAME + \"(\" \n\t\t\t\t\t    + ID +\" INTEGER PRIMARY KEY AUTOINCREMENT,\" \n\t\t\t\t\t\t+ CONTENT + \" TEXT NOT NULL,\"\n\t\t\t\t\t\t+ TIME + \" TEXT NOT NULL)\");//最后的括号不能忘\n\t\t\t}\n\n\t\t@Override\n\t\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\t\n\t\t\t}\n\n#### 创建添加备忘的活动及布局文件 \n+ 用户的使用场景：\n\n\t进入AddContent活动输入文字\n\t点击取消按钮：返回MainActivity界面\n\t点击保存按钮：输入的文字和当前日期时间被存入数据库\n\n+ 布局包括一个输入文字的EditText和两个Button分别用于保存和取消。\n+ 在活动中为两个按钮设置点击监听事件重写点击方法：\n  - 取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加`android:launchMode=\"singleTask\"`的声明。\n  - 保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。\n+ ContentValue和数据库的写入方法如下：\n\n\t\tpublic void addDB() {\n\t\t\t\tContentValues cv = new ContentValues();\n\t\t\t\tcv.put(NotesDB.CONTENT,edtext.getText().toString());\n\t\t\t\tcv.put(NotesDB.TIME, getTime());\n\t\t\t\tdbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n\t\t\t}\n\t\t\n\t\tprivate String getTime() {\n\t\t\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\t\t\t\tDate date = new Date();\n\t\t\t\tString str = format.format(date);\n\t\t\t\treturn str;\n\t\t\t}\n\n#### 创建查看备忘的活动及布局文件\n\n+ 用户的使用场景：\n\n```\n进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步\n```\n\n+ 布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。\n+  活动中两个按钮的点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 删除按钮的`onClick`方法中的删除数据库记录的代码如下：\n\n```\npublic void deleteData() {\n\tdbWriter.delete(NotesDB.TABLE_NAME,\n                       \"_id=\"+getIntent().getIntExtra(NotesDB.ID, 0), null);\n}\n```\n+ 活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。\n\n```\ns_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\ns_edtxt. setCursorVisible ( false ) ; \ns_edtxt.setFocusable(false); \ns_edtxt.clearFocus();\n```\n\n#### 创建修改备忘的活动及布局文件\n\n- 用户的使用场景：\n\n```\n进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录\n```\n\n+ 布局包括EditText和两个Button\n+活动中为两个按钮设置点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 保存按钮同新增按钮中的保存按钮\n+ 活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：\n\n```\nu_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\nu_edtxt. setCursorVisible (true) ;\nu_edtxt.setFocusable(true);\nu_edtxt.setSelection(u_edtxt.getText().toString().length());\n```\n\n#### 在Manifest文件中注册活动：\n\n```\n<application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_note_white\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme.NoActionBar\">\n        <activity\n            android:name=\".activity.MainActivity\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".activity.AddContent\"\n            android:label=\"新增日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n        <activity\n            android:name=\".activity.ShowContent\"\n            android:label=\"查看日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\n        <activity\n            android:name=\".activity.UpdateContent\"\n            android:label=\"修改日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n      \n    </application>\n```\n\n+ 至此，备忘录的增删改查功能已经添加完毕。","source":"_posts/05_一个简单的备忘录app.md","raw":"---\ntitle: 一个简单的备忘录app\ndate: 2017-05-20 20:13:59\ntags: android\n---\n\n\n### 增删查改的实现\n\n#### 创建主活动及布局文件\n\n+ 主活动是整个app的入口，还原一下用户的使用场景：\n\n<!--more-->\n\n\t点击新增按钮：进入AddContent活动\n\t点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n\n+ 布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。\n\n+ 在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。\n\n\t- 对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:\n\n\t\t\tnewbtn.setOnClickListener(new View.OnClickListener() {\n\t\t\t        @Override\n\t\t\t        public void onClick(View v) {\n\t\t\t           Intent i = new Intent(MainActivity.this, AddContent.class);\n\t\t\t           startActivity(i);\n\t\t\t        }\n\t\t\t);\n\n\t- 对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：\n\n\t\t\tlv.setOnItemClickListener(this);\n\t\t\t@Override\n\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position,\n\t\t\t\t\t\tlong id) {\n\t\t\t    \tcursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n\t\t\t     \t\t\tnull, null, null);\n\t\t\t\t\tcursor.moveToPosition(position);\n\t\t\t    \tIntent j = new Intent(MainActivity.this,ShowContent.class);\n\t\t\t    \tj.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n\t\t\t    \tj.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n\t\t\t    \tj.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n\t\t\t    \tstartActivity(j);\t\t\n\t\t\t\t}\n\n#### 创建数据库\n\n+ 重写了两个方法，分别是创建数据库和更新数据库。\n  - 其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。\n\n\t\t@Override\n\t\tpublic void onCreate(SQLiteDatabase db) {\n\t\t\t\tdb.execSQL(\"CREATE TABLE \" + TABLE_NAME + \"(\" \n\t\t\t\t\t    + ID +\" INTEGER PRIMARY KEY AUTOINCREMENT,\" \n\t\t\t\t\t\t+ CONTENT + \" TEXT NOT NULL,\"\n\t\t\t\t\t\t+ TIME + \" TEXT NOT NULL)\");//最后的括号不能忘\n\t\t\t}\n\n\t\t@Override\n\t\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\t\n\t\t\t}\n\n#### 创建添加备忘的活动及布局文件 \n+ 用户的使用场景：\n\n\t进入AddContent活动输入文字\n\t点击取消按钮：返回MainActivity界面\n\t点击保存按钮：输入的文字和当前日期时间被存入数据库\n\n+ 布局包括一个输入文字的EditText和两个Button分别用于保存和取消。\n+ 在活动中为两个按钮设置点击监听事件重写点击方法：\n  - 取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加`android:launchMode=\"singleTask\"`的声明。\n  - 保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。\n+ ContentValue和数据库的写入方法如下：\n\n\t\tpublic void addDB() {\n\t\t\t\tContentValues cv = new ContentValues();\n\t\t\t\tcv.put(NotesDB.CONTENT,edtext.getText().toString());\n\t\t\t\tcv.put(NotesDB.TIME, getTime());\n\t\t\t\tdbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n\t\t\t}\n\t\t\n\t\tprivate String getTime() {\n\t\t\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\t\t\t\tDate date = new Date();\n\t\t\t\tString str = format.format(date);\n\t\t\t\treturn str;\n\t\t\t}\n\n#### 创建查看备忘的活动及布局文件\n\n+ 用户的使用场景：\n\n```\n进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步\n```\n\n+ 布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。\n+  活动中两个按钮的点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 删除按钮的`onClick`方法中的删除数据库记录的代码如下：\n\n```\npublic void deleteData() {\n\tdbWriter.delete(NotesDB.TABLE_NAME,\n                       \"_id=\"+getIntent().getIntExtra(NotesDB.ID, 0), null);\n}\n```\n+ 活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。\n\n```\ns_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\ns_edtxt. setCursorVisible ( false ) ; \ns_edtxt.setFocusable(false); \ns_edtxt.clearFocus();\n```\n\n#### 创建修改备忘的活动及布局文件\n\n- 用户的使用场景：\n\n```\n进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录\n```\n\n+ 布局包括EditText和两个Button\n+活动中为两个按钮设置点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 保存按钮同新增按钮中的保存按钮\n+ 活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：\n\n```\nu_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\nu_edtxt. setCursorVisible (true) ;\nu_edtxt.setFocusable(true);\nu_edtxt.setSelection(u_edtxt.getText().toString().length());\n```\n\n#### 在Manifest文件中注册活动：\n\n```\n<application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_note_white\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme.NoActionBar\">\n        <activity\n            android:name=\".activity.MainActivity\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".activity.AddContent\"\n            android:label=\"新增日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n        <activity\n            android:name=\".activity.ShowContent\"\n            android:label=\"查看日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\n        <activity\n            android:name=\".activity.UpdateContent\"\n            android:label=\"修改日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n      \n    </application>\n```\n\n+ 至此，备忘录的增删改查功能已经添加完毕。","slug":"05_一个简单的备忘录app","published":1,"updated":"2020-02-10T12:50:10.882Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wpv0007fkujn41zf7ee","content":"<h3 id=\"增删查改的实现\"><a href=\"#增删查改的实现\" class=\"headerlink\" title=\"增删查改的实现\"></a>增删查改的实现</h3><h4 id=\"创建主活动及布局文件\"><a href=\"#创建主活动及布局文件\" class=\"headerlink\" title=\"创建主活动及布局文件\"></a>创建主活动及布局文件</h4><ul>\n<li>主活动是整个app的入口，还原一下用户的使用场景：</li>\n</ul>\n<a id=\"more\"></a>\n<pre><code>点击新增按钮：进入AddContent活动\n点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n</code></pre><ul>\n<li><p>布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。</p>\n</li>\n<li><p>在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。</p>\n<ul>\n<li><p>对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:</p>\n<pre><code>newbtn.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n           Intent i = new Intent(MainActivity.this, AddContent.class);\n           startActivity(i);\n        }\n);\n</code></pre></li>\n<li><p>对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：</p>\n<pre><code>lv.setOnItemClickListener(this);\n@Override\n    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,\n            long id) {\n        cursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n                 null, null, null);\n        cursor.moveToPosition(position);\n        Intent j = new Intent(MainActivity.this,ShowContent.class);\n        j.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n        j.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n        j.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n        startActivity(j);        \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><ul>\n<li><p>重写了两个方法，分别是创建数据库和更新数据库。</p>\n<ul>\n<li><p>其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。</p>\n<pre><code>@Override\npublic void onCreate(SQLiteDatabase db) {\n        db.execSQL(&quot;CREATE TABLE &quot; + TABLE_NAME + &quot;(&quot; \n                + ID +&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot; \n                + CONTENT + &quot; TEXT NOT NULL,&quot;\n                + TIME + &quot; TEXT NOT NULL)&quot;);//最后的括号不能忘\n    }\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {    \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建添加备忘的活动及布局文件\"><a href=\"#创建添加备忘的活动及布局文件\" class=\"headerlink\" title=\"创建添加备忘的活动及布局文件\"></a>创建添加备忘的活动及布局文件</h4><ul>\n<li><p>用户的使用场景：</p>\n<p>  进入AddContent活动输入文字<br>  点击取消按钮：返回MainActivity界面<br>  点击保存按钮：输入的文字和当前日期时间被存入数据库</p>\n</li>\n<li><p>布局包括一个输入文字的EditText和两个Button分别用于保存和取消。</p>\n</li>\n<li>在活动中为两个按钮设置点击监听事件重写点击方法：<ul>\n<li>取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加<code>android:launchMode=&quot;singleTask&quot;</code>的声明。</li>\n<li>保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。</li>\n</ul>\n</li>\n<li><p>ContentValue和数据库的写入方法如下：</p>\n<pre><code>public void addDB() {\n        ContentValues cv = new ContentValues();\n        cv.put(NotesDB.CONTENT,edtext.getText().toString());\n        cv.put(NotesDB.TIME, getTime());\n        dbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n    }\n\nprivate String getTime() {\n        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\n        Date date = new Date();\n        String str = format.format(date);\n        return str;\n    }\n</code></pre></li>\n</ul>\n<h4 id=\"创建查看备忘的活动及布局文件\"><a href=\"#创建查看备忘的活动及布局文件\" class=\"headerlink\" title=\"创建查看备忘的活动及布局文件\"></a>创建查看备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。</li>\n<li>活动中两个按钮的点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>删除按钮的<code>onClick</code>方法中的删除数据库记录的代码如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void deleteData() &#123;</div><div class=\"line\">\tdbWriter.delete(NotesDB.TABLE_NAME,</div><div class=\"line\">                       &quot;_id=&quot;+getIntent().getIntExtra(NotesDB.ID, 0), null);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">s_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">s_edtxt. setCursorVisible ( false ) ; </div><div class=\"line\">s_edtxt.setFocusable(false); </div><div class=\"line\">s_edtxt.clearFocus();</div></pre></td></tr></table></figure>\n<h4 id=\"创建修改备忘的活动及布局文件\"><a href=\"#创建修改备忘的活动及布局文件\" class=\"headerlink\" title=\"创建修改备忘的活动及布局文件\"></a>创建修改备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括EditText和两个Button<br>+活动中为两个按钮设置点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>保存按钮同新增按钮中的保存按钮</li>\n</ul>\n</li>\n<li>活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">u_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">u_edtxt. setCursorVisible (true) ;</div><div class=\"line\">u_edtxt.setFocusable(true);</div><div class=\"line\">u_edtxt.setSelection(u_edtxt.getText().toString().length());</div></pre></td></tr></table></figure>\n<h4 id=\"在Manifest文件中注册活动：\"><a href=\"#在Manifest文件中注册活动：\" class=\"headerlink\" title=\"在Manifest文件中注册活动：\"></a>在Manifest文件中注册活动：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;application</div><div class=\"line\">        android:allowBackup=&quot;true&quot;</div><div class=\"line\">        android:icon=&quot;@mipmap/ic_note_white&quot;</div><div class=\"line\">        android:label=&quot;@string/app_name&quot;</div><div class=\"line\">        android:supportsRtl=&quot;true&quot;</div><div class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.MainActivity&quot;</div><div class=\"line\">            android:label=&quot;@string/app_name&quot;</div><div class=\"line\">            android:launchMode=&quot;singleTask&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">            &lt;intent-filter&gt;</div><div class=\"line\">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class=\"line\">            &lt;/intent-filter&gt;</div><div class=\"line\">        &lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.AddContent&quot;</div><div class=\"line\">            android:label=&quot;新增日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.ShowContent&quot;</div><div class=\"line\">            android:label=&quot;查看日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.UpdateContent&quot;</div><div class=\"line\">            android:label=&quot;修改日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">      </div><div class=\"line\">    &lt;/application&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>至此，备忘录的增删改查功能已经添加完毕。</li>\n</ul>\n","excerpt":"<h3 id=\"增删查改的实现\"><a href=\"#增删查改的实现\" class=\"headerlink\" title=\"增删查改的实现\"></a>增删查改的实现</h3><h4 id=\"创建主活动及布局文件\"><a href=\"#创建主活动及布局文件\" class=\"headerlink\" title=\"创建主活动及布局文件\"></a>创建主活动及布局文件</h4><ul>\n<li>主活动是整个app的入口，还原一下用户的使用场景：</li>\n</ul>","more":"<pre><code>点击新增按钮：进入AddContent活动\n点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n</code></pre><ul>\n<li><p>布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。</p>\n</li>\n<li><p>在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。</p>\n<ul>\n<li><p>对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:</p>\n<pre><code>newbtn.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n           Intent i = new Intent(MainActivity.this, AddContent.class);\n           startActivity(i);\n        }\n);\n</code></pre></li>\n<li><p>对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：</p>\n<pre><code>lv.setOnItemClickListener(this);\n@Override\n    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,\n            long id) {\n        cursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n                 null, null, null);\n        cursor.moveToPosition(position);\n        Intent j = new Intent(MainActivity.this,ShowContent.class);\n        j.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n        j.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n        j.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n        startActivity(j);        \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><ul>\n<li><p>重写了两个方法，分别是创建数据库和更新数据库。</p>\n<ul>\n<li><p>其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。</p>\n<pre><code>@Override\npublic void onCreate(SQLiteDatabase db) {\n        db.execSQL(&quot;CREATE TABLE &quot; + TABLE_NAME + &quot;(&quot; \n                + ID +&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot; \n                + CONTENT + &quot; TEXT NOT NULL,&quot;\n                + TIME + &quot; TEXT NOT NULL)&quot;);//最后的括号不能忘\n    }\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {    \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建添加备忘的活动及布局文件\"><a href=\"#创建添加备忘的活动及布局文件\" class=\"headerlink\" title=\"创建添加备忘的活动及布局文件\"></a>创建添加备忘的活动及布局文件</h4><ul>\n<li><p>用户的使用场景：</p>\n<p>  进入AddContent活动输入文字<br>  点击取消按钮：返回MainActivity界面<br>  点击保存按钮：输入的文字和当前日期时间被存入数据库</p>\n</li>\n<li><p>布局包括一个输入文字的EditText和两个Button分别用于保存和取消。</p>\n</li>\n<li>在活动中为两个按钮设置点击监听事件重写点击方法：<ul>\n<li>取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加<code>android:launchMode=&quot;singleTask&quot;</code>的声明。</li>\n<li>保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。</li>\n</ul>\n</li>\n<li><p>ContentValue和数据库的写入方法如下：</p>\n<pre><code>public void addDB() {\n        ContentValues cv = new ContentValues();\n        cv.put(NotesDB.CONTENT,edtext.getText().toString());\n        cv.put(NotesDB.TIME, getTime());\n        dbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n    }\n\nprivate String getTime() {\n        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\n        Date date = new Date();\n        String str = format.format(date);\n        return str;\n    }\n</code></pre></li>\n</ul>\n<h4 id=\"创建查看备忘的活动及布局文件\"><a href=\"#创建查看备忘的活动及布局文件\" class=\"headerlink\" title=\"创建查看备忘的活动及布局文件\"></a>创建查看备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。</li>\n<li>活动中两个按钮的点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>删除按钮的<code>onClick</code>方法中的删除数据库记录的代码如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void deleteData() &#123;</div><div class=\"line\">\tdbWriter.delete(NotesDB.TABLE_NAME,</div><div class=\"line\">                       &quot;_id=&quot;+getIntent().getIntExtra(NotesDB.ID, 0), null);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">s_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">s_edtxt. setCursorVisible ( false ) ; </div><div class=\"line\">s_edtxt.setFocusable(false); </div><div class=\"line\">s_edtxt.clearFocus();</div></pre></td></tr></table></figure>\n<h4 id=\"创建修改备忘的活动及布局文件\"><a href=\"#创建修改备忘的活动及布局文件\" class=\"headerlink\" title=\"创建修改备忘的活动及布局文件\"></a>创建修改备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括EditText和两个Button<br>+活动中为两个按钮设置点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>保存按钮同新增按钮中的保存按钮</li>\n</ul>\n</li>\n<li>活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">u_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">u_edtxt. setCursorVisible (true) ;</div><div class=\"line\">u_edtxt.setFocusable(true);</div><div class=\"line\">u_edtxt.setSelection(u_edtxt.getText().toString().length());</div></pre></td></tr></table></figure>\n<h4 id=\"在Manifest文件中注册活动：\"><a href=\"#在Manifest文件中注册活动：\" class=\"headerlink\" title=\"在Manifest文件中注册活动：\"></a>在Manifest文件中注册活动：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;application</div><div class=\"line\">        android:allowBackup=&quot;true&quot;</div><div class=\"line\">        android:icon=&quot;@mipmap/ic_note_white&quot;</div><div class=\"line\">        android:label=&quot;@string/app_name&quot;</div><div class=\"line\">        android:supportsRtl=&quot;true&quot;</div><div class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.MainActivity&quot;</div><div class=\"line\">            android:label=&quot;@string/app_name&quot;</div><div class=\"line\">            android:launchMode=&quot;singleTask&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">            &lt;intent-filter&gt;</div><div class=\"line\">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class=\"line\">            &lt;/intent-filter&gt;</div><div class=\"line\">        &lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.AddContent&quot;</div><div class=\"line\">            android:label=&quot;新增日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.ShowContent&quot;</div><div class=\"line\">            android:label=&quot;查看日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.UpdateContent&quot;</div><div class=\"line\">            android:label=&quot;修改日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">      </div><div class=\"line\">    &lt;/application&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>至此，备忘录的增删改查功能已经添加完毕。</li>\n</ul>"},{"title":"百日囚徒问题","date":"2017-12-27T15:09:37.000Z","_content":"\n有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。\n\n一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！\n\n囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。\n\n<!--more-->\n\n#### 思路\n\n1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：\n\t\n- 计数人\n\t- 首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)\n\n\n- 已知囚徒\n\t- 设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数\n\n\n- 未知囚徒\n\t- 设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数\n\n这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。\n\n2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：\n\n- 已知囚徒放风\n\t- 不进行任何操作\n\n- 未知囚徒放风\n\t- 若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。\n\t- 若灯为关闭状态，说明此次通信未结束，不进行任何操作\n\n- 计数人放风\n\t- 若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息\n\t- 若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作\n\n当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。\n\n#### 代码\n\n\timport random\n\n\tdays = 1\t# 天数\n\tlight = 0\t# 灯\n\ttimes = [0 for i in range(0,100)]\t# 每个囚徒放风次数的统计数组\n\tcounter = -1\t# 计数人\n\tremainer = 100\t# 剩余未知人\n\t\n\twhile 1==1:\n\t\tprint(\"第%d天: \"%days)\n\t\tprint(\"\t\t剩余未知人: %d\"%remainer)\n\t\t# 随机抽选一人放风\n\t\tP = random.randint(0, 99)\n\t\n\t\t# 前100天确认身份\n\t\tif days <= 100:\n\t\t\tif light == 0:\n\t\t\t\ttimes[P] += 1\t# 灯灭放风有效\n\t\t\t\tif times == 1:\n\t\t\t\t\tpass\n\t\t\t\tif times[P] == 2:\t# 灯灭且第二次放风\n\t\t\t\t\tcounter = P\n\t\t\t\t\tprint(\"\t\t确定计数人: %d\" %counter)\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= (days-1)\t# 开灯计数\n\t\t\telse:\n\t\t\t\tpass\t# 在灯亮放风无效\n\t\n\t\t\tif days == 100 and light == 0:\t# 100天灯仍灭，获救\n\t\t\t\tprint(\"获救\")\n\t\t\t\tbreak\n\t\n\t\telse:\t# 100天后通过灯通信\n\t\t\tif light == 1:\n\t\t\t\ttimes[P] += 1\t# 灯亮放风有效\n\t\t\t\tif times[P] == 1:\t#(未知者)关灯发出信息\n\t\t\t\t\tlight = 0\n\t\n\t\t\telse:\n\t\t\t\tif P == counter:\t# 灯灭计数人开灯计数\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= 1\n\t\t\t\t\tif remainer == 0:\n\t\t\t\t\t\tprint(\"\t\t计数人%d宣布获救\" %counter)\n\t\t\t\t\t\tbreak\n\t\tdays += 1\n\n#### 日志\n\n\t第1天: \n\t\t剩余未知人: 100\n\t第2天: \n\t\t\t剩余未知人: 100\n\t第3天: \n\t\t\t剩余未知人: 100\n\t第4天: \n\t\t\t剩余未知人: 100\n\t第5天: \n\t\t\t剩余未知人: 100\n\t第6天: \n\t\t\t剩余未知人: 100\n\t第7天: \n\t\t\t剩余未知人: 100\n\t\t\t确定计数人: 53\n\t第8天: \n\t\t\t剩余未知人: 94\n\t第9天: \n\t\t\t剩余未知人: 94\n\n\t······\n\n\t第9538天: \n\t\t剩余未知人: 1\n\t第9539天: \n\t\t\t剩余未知人: 1\n\t第9540天: \n\t\t\t剩余未知人: 1\n\t第9541天: \n\t\t\t剩余未知人: 1\n\t\t\t计数人53宣布获救","source":"_posts/06_百日囚徒问题.md","raw":"---\ntitle: 百日囚徒问题\ndate: 2017-12-27 23:09:37\ntags: 算法\n---\n\n有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。\n\n一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！\n\n囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。\n\n<!--more-->\n\n#### 思路\n\n1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：\n\t\n- 计数人\n\t- 首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)\n\n\n- 已知囚徒\n\t- 设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数\n\n\n- 未知囚徒\n\t- 设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数\n\n这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。\n\n2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：\n\n- 已知囚徒放风\n\t- 不进行任何操作\n\n- 未知囚徒放风\n\t- 若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。\n\t- 若灯为关闭状态，说明此次通信未结束，不进行任何操作\n\n- 计数人放风\n\t- 若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息\n\t- 若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作\n\n当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。\n\n#### 代码\n\n\timport random\n\n\tdays = 1\t# 天数\n\tlight = 0\t# 灯\n\ttimes = [0 for i in range(0,100)]\t# 每个囚徒放风次数的统计数组\n\tcounter = -1\t# 计数人\n\tremainer = 100\t# 剩余未知人\n\t\n\twhile 1==1:\n\t\tprint(\"第%d天: \"%days)\n\t\tprint(\"\t\t剩余未知人: %d\"%remainer)\n\t\t# 随机抽选一人放风\n\t\tP = random.randint(0, 99)\n\t\n\t\t# 前100天确认身份\n\t\tif days <= 100:\n\t\t\tif light == 0:\n\t\t\t\ttimes[P] += 1\t# 灯灭放风有效\n\t\t\t\tif times == 1:\n\t\t\t\t\tpass\n\t\t\t\tif times[P] == 2:\t# 灯灭且第二次放风\n\t\t\t\t\tcounter = P\n\t\t\t\t\tprint(\"\t\t确定计数人: %d\" %counter)\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= (days-1)\t# 开灯计数\n\t\t\telse:\n\t\t\t\tpass\t# 在灯亮放风无效\n\t\n\t\t\tif days == 100 and light == 0:\t# 100天灯仍灭，获救\n\t\t\t\tprint(\"获救\")\n\t\t\t\tbreak\n\t\n\t\telse:\t# 100天后通过灯通信\n\t\t\tif light == 1:\n\t\t\t\ttimes[P] += 1\t# 灯亮放风有效\n\t\t\t\tif times[P] == 1:\t#(未知者)关灯发出信息\n\t\t\t\t\tlight = 0\n\t\n\t\t\telse:\n\t\t\t\tif P == counter:\t# 灯灭计数人开灯计数\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= 1\n\t\t\t\t\tif remainer == 0:\n\t\t\t\t\t\tprint(\"\t\t计数人%d宣布获救\" %counter)\n\t\t\t\t\t\tbreak\n\t\tdays += 1\n\n#### 日志\n\n\t第1天: \n\t\t剩余未知人: 100\n\t第2天: \n\t\t\t剩余未知人: 100\n\t第3天: \n\t\t\t剩余未知人: 100\n\t第4天: \n\t\t\t剩余未知人: 100\n\t第5天: \n\t\t\t剩余未知人: 100\n\t第6天: \n\t\t\t剩余未知人: 100\n\t第7天: \n\t\t\t剩余未知人: 100\n\t\t\t确定计数人: 53\n\t第8天: \n\t\t\t剩余未知人: 94\n\t第9天: \n\t\t\t剩余未知人: 94\n\n\t······\n\n\t第9538天: \n\t\t剩余未知人: 1\n\t第9539天: \n\t\t\t剩余未知人: 1\n\t第9540天: \n\t\t\t剩余未知人: 1\n\t第9541天: \n\t\t\t剩余未知人: 1\n\t\t\t计数人53宣布获救","slug":"06_百日囚徒问题","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wpz000afkujpqpldams","content":"<p>有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。</p>\n<p>一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！</p>\n<p>囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。</p>\n<a id=\"more\"></a>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：</p>\n<ul>\n<li>计数人<ul>\n<li>首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>已知囚徒<ul>\n<li>设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>未知囚徒<ul>\n<li>设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数</li>\n</ul>\n</li>\n</ul>\n<p>这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。</p>\n<p>2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：</p>\n<ul>\n<li><p>已知囚徒放风</p>\n<ul>\n<li>不进行任何操作</li>\n</ul>\n</li>\n<li><p>未知囚徒放风</p>\n<ul>\n<li>若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。</li>\n<li>若灯为关闭状态，说明此次通信未结束，不进行任何操作</li>\n</ul>\n</li>\n<li><p>计数人放风</p>\n<ul>\n<li>若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息</li>\n<li>若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作</li>\n</ul>\n</li>\n</ul>\n<p>当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>import random\n\ndays = 1    # 天数\nlight = 0    # 灯\ntimes = [0 for i in range(0,100)]    # 每个囚徒放风次数的统计数组\ncounter = -1    # 计数人\nremainer = 100    # 剩余未知人\n\nwhile 1==1:\n    print(&quot;第%d天: &quot;%days)\n    print(&quot;        剩余未知人: %d&quot;%remainer)\n    # 随机抽选一人放风\n    P = random.randint(0, 99)\n\n    # 前100天确认身份\n    if days &lt;= 100:\n        if light == 0:\n            times[P] += 1    # 灯灭放风有效\n            if times == 1:\n                pass\n            if times[P] == 2:    # 灯灭且第二次放风\n                counter = P\n                print(&quot;        确定计数人: %d&quot; %counter)\n                light = 1\n                remainer -= (days-1)    # 开灯计数\n        else:\n            pass    # 在灯亮放风无效\n\n        if days == 100 and light == 0:    # 100天灯仍灭，获救\n            print(&quot;获救&quot;)\n            break\n\n    else:    # 100天后通过灯通信\n        if light == 1:\n            times[P] += 1    # 灯亮放风有效\n            if times[P] == 1:    #(未知者)关灯发出信息\n                light = 0\n\n        else:\n            if P == counter:    # 灯灭计数人开灯计数\n                light = 1\n                remainer -= 1\n                if remainer == 0:\n                    print(&quot;        计数人%d宣布获救&quot; %counter)\n                    break\n    days += 1\n</code></pre><h4 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h4><pre><code>第1天: \n    剩余未知人: 100\n第2天: \n        剩余未知人: 100\n第3天: \n        剩余未知人: 100\n第4天: \n        剩余未知人: 100\n第5天: \n        剩余未知人: 100\n第6天: \n        剩余未知人: 100\n第7天: \n        剩余未知人: 100\n        确定计数人: 53\n第8天: \n        剩余未知人: 94\n第9天: \n        剩余未知人: 94\n\n······\n\n第9538天: \n    剩余未知人: 1\n第9539天: \n        剩余未知人: 1\n第9540天: \n        剩余未知人: 1\n第9541天: \n        剩余未知人: 1\n        计数人53宣布获救\n</code></pre>","excerpt":"<p>有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。</p>\n<p>一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！</p>\n<p>囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。</p>","more":"<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：</p>\n<ul>\n<li>计数人<ul>\n<li>首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>已知囚徒<ul>\n<li>设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>未知囚徒<ul>\n<li>设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数</li>\n</ul>\n</li>\n</ul>\n<p>这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。</p>\n<p>2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：</p>\n<ul>\n<li><p>已知囚徒放风</p>\n<ul>\n<li>不进行任何操作</li>\n</ul>\n</li>\n<li><p>未知囚徒放风</p>\n<ul>\n<li>若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。</li>\n<li>若灯为关闭状态，说明此次通信未结束，不进行任何操作</li>\n</ul>\n</li>\n<li><p>计数人放风</p>\n<ul>\n<li>若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息</li>\n<li>若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作</li>\n</ul>\n</li>\n</ul>\n<p>当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>import random\n\ndays = 1    # 天数\nlight = 0    # 灯\ntimes = [0 for i in range(0,100)]    # 每个囚徒放风次数的统计数组\ncounter = -1    # 计数人\nremainer = 100    # 剩余未知人\n\nwhile 1==1:\n    print(&quot;第%d天: &quot;%days)\n    print(&quot;        剩余未知人: %d&quot;%remainer)\n    # 随机抽选一人放风\n    P = random.randint(0, 99)\n\n    # 前100天确认身份\n    if days &lt;= 100:\n        if light == 0:\n            times[P] += 1    # 灯灭放风有效\n            if times == 1:\n                pass\n            if times[P] == 2:    # 灯灭且第二次放风\n                counter = P\n                print(&quot;        确定计数人: %d&quot; %counter)\n                light = 1\n                remainer -= (days-1)    # 开灯计数\n        else:\n            pass    # 在灯亮放风无效\n\n        if days == 100 and light == 0:    # 100天灯仍灭，获救\n            print(&quot;获救&quot;)\n            break\n\n    else:    # 100天后通过灯通信\n        if light == 1:\n            times[P] += 1    # 灯亮放风有效\n            if times[P] == 1:    #(未知者)关灯发出信息\n                light = 0\n\n        else:\n            if P == counter:    # 灯灭计数人开灯计数\n                light = 1\n                remainer -= 1\n                if remainer == 0:\n                    print(&quot;        计数人%d宣布获救&quot; %counter)\n                    break\n    days += 1\n</code></pre><h4 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h4><pre><code>第1天: \n    剩余未知人: 100\n第2天: \n        剩余未知人: 100\n第3天: \n        剩余未知人: 100\n第4天: \n        剩余未知人: 100\n第5天: \n        剩余未知人: 100\n第6天: \n        剩余未知人: 100\n第7天: \n        剩余未知人: 100\n        确定计数人: 53\n第8天: \n        剩余未知人: 94\n第9天: \n        剩余未知人: 94\n\n······\n\n第9538天: \n    剩余未知人: 1\n第9539天: \n        剩余未知人: 1\n第9540天: \n        剩余未知人: 1\n第9541天: \n        剩余未知人: 1\n        计数人53宣布获救\n</code></pre>"},{"title":"Markdown的使用","date":"2018-02-21T12:32:18.000Z","_content":"\nMarkdown的常用方法如下：\n\n<!--more-->\n\n## 1.标题\n\n\t### 三级标题\n\n### 三级标题\n\n\n## 2.无序列表\n\n\t- 列表1\n\t- 列表2\n\t- 列表2\n\n- 列表1\n- 列表2\n- 列表2\n\n## 3.有序列表\n\n\t1. 列表1\n\t2. 列表2\n\t3. 列表3\n\n1. 列表1\n2. 列表2\n3. 列表3\n\n## 4.链接\n\n\t[百度](http://www.baidu.com/)\n\n[百度](http://www.baidu.com/)\n\n## 5.图片\n\n\t![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n## 6.引用\n\n\t> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n## 7.代码引用\n```\n\t`hello world`\n```\n\n`hello world`\n\n```\n\t```\n\tfor() {\n\t  i++;\n\t}\n\t```\n```\n\n```\nfor() {\n  i++;\n}\n```\n## 8.表格\n\n\t|姓名|学号|成绩|\n\t|----|:----:|----:|\n\t|张三|35|60|\n\t|李四|33|59|\n\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|","source":"_posts/07_Markdown的使用.md","raw":"---\ntitle: Markdown的使用\ndate: 2018-02-21 20:32:18\ntags: markdown\n---\n\nMarkdown的常用方法如下：\n\n<!--more-->\n\n## 1.标题\n\n\t### 三级标题\n\n### 三级标题\n\n\n## 2.无序列表\n\n\t- 列表1\n\t- 列表2\n\t- 列表2\n\n- 列表1\n- 列表2\n- 列表2\n\n## 3.有序列表\n\n\t1. 列表1\n\t2. 列表2\n\t3. 列表3\n\n1. 列表1\n2. 列表2\n3. 列表3\n\n## 4.链接\n\n\t[百度](http://www.baidu.com/)\n\n[百度](http://www.baidu.com/)\n\n## 5.图片\n\n\t![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n## 6.引用\n\n\t> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n## 7.代码引用\n```\n\t`hello world`\n```\n\n`hello world`\n\n```\n\t```\n\tfor() {\n\t  i++;\n\t}\n\t```\n```\n\n```\nfor() {\n  i++;\n}\n```\n## 8.表格\n\n\t|姓名|学号|成绩|\n\t|----|:----:|----:|\n\t|张三|35|60|\n\t|李四|33|59|\n\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|","slug":"07_Markdown的使用","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wq1000bfkujemyxx29a","content":"<p>Markdown的常用方法如下：</p>\n<a id=\"more\"></a>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1.标题\"></a>1.标题</h2><pre><code>### 三级标题\n</code></pre><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"2-无序列表\"><a href=\"#2-无序列表\" class=\"headerlink\" title=\"2.无序列表\"></a>2.无序列表</h2><pre><code>- 列表1\n- 列表2\n- 列表2\n</code></pre><ul>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表2</li>\n</ul>\n<h2 id=\"3-有序列表\"><a href=\"#3-有序列表\" class=\"headerlink\" title=\"3.有序列表\"></a>3.有序列表</h2><pre><code>1. 列表1\n2. 列表2\n3. 列表3\n</code></pre><ol>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表3</li>\n</ol>\n<h2 id=\"4-链接\"><a href=\"#4-链接\" class=\"headerlink\" title=\"4.链接\"></a>4.链接</h2><pre><code>[百度](http://www.baidu.com/)\n</code></pre><p><a href=\"http://www.baidu.com/\">百度</a></p>\n<h2 id=\"5-图片\"><a href=\"#5-图片\" class=\"headerlink\" title=\"5.图片\"></a>5.图片</h2><pre><code>![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n</code></pre><p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" alt=\"\"></p>\n<h2 id=\"6-引用\"><a href=\"#6-引用\" class=\"headerlink\" title=\"6.引用\"></a>6.引用</h2><pre><code>&gt; *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n</code></pre><blockquote>\n<p><em>我挥舞着本子和键盘</em>，<strong>发誓要把这世界写个明明白白</strong>。</p>\n</blockquote>\n<h2 id=\"7-代码引用\"><a href=\"#7-代码引用\" class=\"headerlink\" title=\"7.代码引用\"></a>7.代码引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">`hello world`</div></pre></td></tr></table></figure>\n<p><code>hello world</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t</div></pre></td></tr></table></figure>\n<pre><code>for() {\n  i++;\n}\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">```</div></pre></td></tr></table></figure>\n</code></pre><p>for() {<br>  i++;<br>}<br>```</p>\n<h2 id=\"8-表格\"><a href=\"#8-表格\" class=\"headerlink\" title=\"8.表格\"></a>8.表格</h2><pre><code>|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n</code></pre><table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:right\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:right\">60</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"<p>Markdown的常用方法如下：</p>","more":"<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1.标题\"></a>1.标题</h2><pre><code>### 三级标题\n</code></pre><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"2-无序列表\"><a href=\"#2-无序列表\" class=\"headerlink\" title=\"2.无序列表\"></a>2.无序列表</h2><pre><code>- 列表1\n- 列表2\n- 列表2\n</code></pre><ul>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表2</li>\n</ul>\n<h2 id=\"3-有序列表\"><a href=\"#3-有序列表\" class=\"headerlink\" title=\"3.有序列表\"></a>3.有序列表</h2><pre><code>1. 列表1\n2. 列表2\n3. 列表3\n</code></pre><ol>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表3</li>\n</ol>\n<h2 id=\"4-链接\"><a href=\"#4-链接\" class=\"headerlink\" title=\"4.链接\"></a>4.链接</h2><pre><code>[百度](http://www.baidu.com/)\n</code></pre><p><a href=\"http://www.baidu.com/\">百度</a></p>\n<h2 id=\"5-图片\"><a href=\"#5-图片\" class=\"headerlink\" title=\"5.图片\"></a>5.图片</h2><pre><code>![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n</code></pre><p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" alt=\"\"></p>\n<h2 id=\"6-引用\"><a href=\"#6-引用\" class=\"headerlink\" title=\"6.引用\"></a>6.引用</h2><pre><code>&gt; *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n</code></pre><blockquote>\n<p><em>我挥舞着本子和键盘</em>，<strong>发誓要把这世界写个明明白白</strong>。</p>\n</blockquote>\n<h2 id=\"7-代码引用\"><a href=\"#7-代码引用\" class=\"headerlink\" title=\"7.代码引用\"></a>7.代码引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">`hello world`</div></pre></td></tr></table></figure>\n<p><code>hello world</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t</div></pre></td></tr></table></figure>\n<pre><code>for() {\n  i++;\n}\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">```</div></pre></td></tr></table></figure>\n</code></pre><p>for() {<br>  i++;<br>}<br>```</p>\n<h2 id=\"8-表格\"><a href=\"#8-表格\" class=\"headerlink\" title=\"8.表格\"></a>8.表格</h2><pre><code>|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n</code></pre><table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:right\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:right\">60</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n</tbody>\n</table>"},{"title":"使用selenium+wget实现自动下载图片","date":"2018-03-05T15:04:42.000Z","_content":"\n#### 操作步骤\n\nunsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。\n\n另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe\n\n<!--more-->\n\n#### 环境安装\n\n1. selenium\n2. wget\n\n\tpip install selenium\n\tpip install wget\n\n#### python脚本\n\n\tfrom selenium import webdriver\n\timport wget\n\timport os\n\timport time\n\timport subprocess\n\n\tdef mkdir(path):\n\t    # 去除首位空格\n\t    path=path.strip()\n\t    # 去除尾部 \\ 符号\n\t    path=path.rstrip(\"\\\\\")\n\n\t    # 判断路径是否存在\n\t    # 存在     True\n\t    # 不存在   False\n\t    isExists=os.path.exists(path)\n\n\t    # 判断结果\n\t    if not isExists:\n\t        # 如果不存在则创建目录\n\t        print ('%s创建成功'%path)\n\t        # 创建目录操作函数\n\t        os.makedirs(path)\n\t        return True\n\t    else:\n\t        # 如果目录存在则不创建，并提示目录已存在\n\t        print ('%s目录已存在'%path)\n\t        return False\n\n\n\tdef download_pic(folderpath='',list=[]):\n\t    i = 1\n\t    for url in list:\n\t        try:\n\t        #     wget.download(url, out='%s\\\\%d.jpg' %(folderpath,i))\n\t            cmd = 'C:\\\\Python36\\\\Scripts\\\\wget -O \"%s\\\\%d.jpg\" \"%s\"' %(folderpath,i,url)\n\t            print(cmd)\n\t            subprocess.Popen(cmd)\n\t            i += 1\n\t        except:\n\t            print('skip')\n\t    print('下载成功...')\n\n\tdef craw_url(scroll='2',web_url=''):\n\t    driver = webdriver.Chrome('C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe')\n\t    driver.get(web_url)\n\t    driver.maximize_window()\n\t    time.sleep(3)\n\t    urls = []\n\t    try:\n\t        for i in range(1,scroll):\n\t            pics = driver.find_elements_by_class_name(name='_2zEKz')\n\t            for pic in pics:\n\t                src = '%s\\n'%pic.get_attribute(name='src')\n\t                src = src.replace('1000','2592')\n\t                # print(src)\n\t                urls.append(src)\n\t            js=\"window.scrollTo(0,document.body.scrollHeight)\"\n\t            driver.execute_script(js)\n\t            time.sleep(3)\n\t            print(\"循环次数：%d\"%i)\n\t        driver.close()\n\t    except:\n\t        driver.close()\n\t    urls = list(set(urls))\n\t    print('获取图片链接成功...')\n\t    return urls\n\n\tif __name__ == \"__main__\":\n\t    download_path = 'G:\\\\02_photo\\\\unsplash'\n\t    url_list=craw_url(scroll=1000,web_url='https://unsplash.com/')\n\t    mkdir(download_path)\n\t    download_pic(folderpath=download_path,list=url_list)\n\n\t    #\tfor url in url_list:\n\t    #\t        print(url)\n\t    #\ttry:\n\t    #    \tf=open('%s\\\\0_urls.txt'%download_path,'w')\n\t    #   \tf.writelines(url_list)\n\t    #   \tf.close()\n\t    #\texcept:\n\t       \t \tpass\n\t    \t\n#### 下载成功\n\n![1.png](http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","source":"_posts/08_使用selenium-wget实现自动下载图片.md","raw":"---\ntitle: 使用selenium+wget实现自动下载图片\ndate: 2018-03-05 23:04:42\ntags: python\n---\n\n#### 操作步骤\n\nunsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。\n\n另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe\n\n<!--more-->\n\n#### 环境安装\n\n1. selenium\n2. wget\n\n\tpip install selenium\n\tpip install wget\n\n#### python脚本\n\n\tfrom selenium import webdriver\n\timport wget\n\timport os\n\timport time\n\timport subprocess\n\n\tdef mkdir(path):\n\t    # 去除首位空格\n\t    path=path.strip()\n\t    # 去除尾部 \\ 符号\n\t    path=path.rstrip(\"\\\\\")\n\n\t    # 判断路径是否存在\n\t    # 存在     True\n\t    # 不存在   False\n\t    isExists=os.path.exists(path)\n\n\t    # 判断结果\n\t    if not isExists:\n\t        # 如果不存在则创建目录\n\t        print ('%s创建成功'%path)\n\t        # 创建目录操作函数\n\t        os.makedirs(path)\n\t        return True\n\t    else:\n\t        # 如果目录存在则不创建，并提示目录已存在\n\t        print ('%s目录已存在'%path)\n\t        return False\n\n\n\tdef download_pic(folderpath='',list=[]):\n\t    i = 1\n\t    for url in list:\n\t        try:\n\t        #     wget.download(url, out='%s\\\\%d.jpg' %(folderpath,i))\n\t            cmd = 'C:\\\\Python36\\\\Scripts\\\\wget -O \"%s\\\\%d.jpg\" \"%s\"' %(folderpath,i,url)\n\t            print(cmd)\n\t            subprocess.Popen(cmd)\n\t            i += 1\n\t        except:\n\t            print('skip')\n\t    print('下载成功...')\n\n\tdef craw_url(scroll='2',web_url=''):\n\t    driver = webdriver.Chrome('C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe')\n\t    driver.get(web_url)\n\t    driver.maximize_window()\n\t    time.sleep(3)\n\t    urls = []\n\t    try:\n\t        for i in range(1,scroll):\n\t            pics = driver.find_elements_by_class_name(name='_2zEKz')\n\t            for pic in pics:\n\t                src = '%s\\n'%pic.get_attribute(name='src')\n\t                src = src.replace('1000','2592')\n\t                # print(src)\n\t                urls.append(src)\n\t            js=\"window.scrollTo(0,document.body.scrollHeight)\"\n\t            driver.execute_script(js)\n\t            time.sleep(3)\n\t            print(\"循环次数：%d\"%i)\n\t        driver.close()\n\t    except:\n\t        driver.close()\n\t    urls = list(set(urls))\n\t    print('获取图片链接成功...')\n\t    return urls\n\n\tif __name__ == \"__main__\":\n\t    download_path = 'G:\\\\02_photo\\\\unsplash'\n\t    url_list=craw_url(scroll=1000,web_url='https://unsplash.com/')\n\t    mkdir(download_path)\n\t    download_pic(folderpath=download_path,list=url_list)\n\n\t    #\tfor url in url_list:\n\t    #\t        print(url)\n\t    #\ttry:\n\t    #    \tf=open('%s\\\\0_urls.txt'%download_path,'w')\n\t    #   \tf.writelines(url_list)\n\t    #   \tf.close()\n\t    #\texcept:\n\t       \t \tpass\n\t    \t\n#### 下载成功\n\n![1.png](http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","slug":"08_使用selenium-wget实现自动下载图片","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wq4000dfkujt92g75j9","content":"<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><p>unsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。</p>\n<p>另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe</p>\n<a id=\"more\"></a>\n<h4 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h4><ol>\n<li>selenium</li>\n<li><p>wget</p>\n<p> pip install selenium<br> pip install wget</p>\n</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><pre><code>from selenium import webdriver\nimport wget\nimport os\nimport time\nimport subprocess\n\ndef mkdir(path):\n    # 去除首位空格\n    path=path.strip()\n    # 去除尾部 \\ 符号\n    path=path.rstrip(&quot;\\\\&quot;)\n\n    # 判断路径是否存在\n    # 存在     True\n    # 不存在   False\n    isExists=os.path.exists(path)\n\n    # 判断结果\n    if not isExists:\n        # 如果不存在则创建目录\n        print (&apos;%s创建成功&apos;%path)\n        # 创建目录操作函数\n        os.makedirs(path)\n        return True\n    else:\n        # 如果目录存在则不创建，并提示目录已存在\n        print (&apos;%s目录已存在&apos;%path)\n        return False\n\n\ndef download_pic(folderpath=&apos;&apos;,list=[]):\n    i = 1\n    for url in list:\n        try:\n        #     wget.download(url, out=&apos;%s\\\\%d.jpg&apos; %(folderpath,i))\n            cmd = &apos;C:\\\\Python36\\\\Scripts\\\\wget -O &quot;%s\\\\%d.jpg&quot; &quot;%s&quot;&apos; %(folderpath,i,url)\n            print(cmd)\n            subprocess.Popen(cmd)\n            i += 1\n        except:\n            print(&apos;skip&apos;)\n    print(&apos;下载成功...&apos;)\n\ndef craw_url(scroll=&apos;2&apos;,web_url=&apos;&apos;):\n    driver = webdriver.Chrome(&apos;C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe&apos;)\n    driver.get(web_url)\n    driver.maximize_window()\n    time.sleep(3)\n    urls = []\n    try:\n        for i in range(1,scroll):\n            pics = driver.find_elements_by_class_name(name=&apos;_2zEKz&apos;)\n            for pic in pics:\n                src = &apos;%s\\n&apos;%pic.get_attribute(name=&apos;src&apos;)\n                src = src.replace(&apos;1000&apos;,&apos;2592&apos;)\n                # print(src)\n                urls.append(src)\n            js=&quot;window.scrollTo(0,document.body.scrollHeight)&quot;\n            driver.execute_script(js)\n            time.sleep(3)\n            print(&quot;循环次数：%d&quot;%i)\n        driver.close()\n    except:\n        driver.close()\n    urls = list(set(urls))\n    print(&apos;获取图片链接成功...&apos;)\n    return urls\n\nif __name__ == &quot;__main__&quot;:\n    download_path = &apos;G:\\\\02_photo\\\\unsplash&apos;\n    url_list=craw_url(scroll=1000,web_url=&apos;https://unsplash.com/&apos;)\n    mkdir(download_path)\n    download_pic(folderpath=download_path,list=url_list)\n\n    #    for url in url_list:\n    #            print(url)\n    #    try:\n    #        f=open(&apos;%s\\\\0_urls.txt&apos;%download_path,&apos;w&apos;)\n    #       f.writelines(url_list)\n    #       f.close()\n    #    except:\n                pass\n</code></pre><h4 id=\"下载成功\"><a href=\"#下载成功\" class=\"headerlink\" title=\"下载成功\"></a>下载成功</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n","excerpt":"<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><p>unsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。</p>\n<p>另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe</p>","more":"<h4 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h4><ol>\n<li>selenium</li>\n<li><p>wget</p>\n<p> pip install selenium<br> pip install wget</p>\n</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><pre><code>from selenium import webdriver\nimport wget\nimport os\nimport time\nimport subprocess\n\ndef mkdir(path):\n    # 去除首位空格\n    path=path.strip()\n    # 去除尾部 \\ 符号\n    path=path.rstrip(&quot;\\\\&quot;)\n\n    # 判断路径是否存在\n    # 存在     True\n    # 不存在   False\n    isExists=os.path.exists(path)\n\n    # 判断结果\n    if not isExists:\n        # 如果不存在则创建目录\n        print (&apos;%s创建成功&apos;%path)\n        # 创建目录操作函数\n        os.makedirs(path)\n        return True\n    else:\n        # 如果目录存在则不创建，并提示目录已存在\n        print (&apos;%s目录已存在&apos;%path)\n        return False\n\n\ndef download_pic(folderpath=&apos;&apos;,list=[]):\n    i = 1\n    for url in list:\n        try:\n        #     wget.download(url, out=&apos;%s\\\\%d.jpg&apos; %(folderpath,i))\n            cmd = &apos;C:\\\\Python36\\\\Scripts\\\\wget -O &quot;%s\\\\%d.jpg&quot; &quot;%s&quot;&apos; %(folderpath,i,url)\n            print(cmd)\n            subprocess.Popen(cmd)\n            i += 1\n        except:\n            print(&apos;skip&apos;)\n    print(&apos;下载成功...&apos;)\n\ndef craw_url(scroll=&apos;2&apos;,web_url=&apos;&apos;):\n    driver = webdriver.Chrome(&apos;C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe&apos;)\n    driver.get(web_url)\n    driver.maximize_window()\n    time.sleep(3)\n    urls = []\n    try:\n        for i in range(1,scroll):\n            pics = driver.find_elements_by_class_name(name=&apos;_2zEKz&apos;)\n            for pic in pics:\n                src = &apos;%s\\n&apos;%pic.get_attribute(name=&apos;src&apos;)\n                src = src.replace(&apos;1000&apos;,&apos;2592&apos;)\n                # print(src)\n                urls.append(src)\n            js=&quot;window.scrollTo(0,document.body.scrollHeight)&quot;\n            driver.execute_script(js)\n            time.sleep(3)\n            print(&quot;循环次数：%d&quot;%i)\n        driver.close()\n    except:\n        driver.close()\n    urls = list(set(urls))\n    print(&apos;获取图片链接成功...&apos;)\n    return urls\n\nif __name__ == &quot;__main__&quot;:\n    download_path = &apos;G:\\\\02_photo\\\\unsplash&apos;\n    url_list=craw_url(scroll=1000,web_url=&apos;https://unsplash.com/&apos;)\n    mkdir(download_path)\n    download_pic(folderpath=download_path,list=url_list)\n\n    #    for url in url_list:\n    #            print(url)\n    #    try:\n    #        f=open(&apos;%s\\\\0_urls.txt&apos;%download_path,&apos;w&apos;)\n    #       f.writelines(url_list)\n    #       f.close()\n    #    except:\n                pass\n</code></pre><h4 id=\"下载成功\"><a href=\"#下载成功\" class=\"headerlink\" title=\"下载成功\"></a>下载成功</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>"},{"title":"安卓客户端取日志脚本","date":"2019-04-01T12:32:18.000Z","_content":"\n安卓客户端取日志脚本：\n\n<!--more-->\n\n```\n@echo off\n\n::初始化脚本\n:start\ncls\necho ****************************************\necho [请输入：0]        退出\necho [请输入：1]        获取applog\necho [请输入：2]        清理applog\necho [直接输入回车]   执行默认操作\necho ****************************************\n\nset FOLDER=%~dp0\nset TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\nset /p opt=请输入:\n\nif \"%opt%\"==\"0\" goto exit\nif \"%opt%\"==\"1\" goto get_log\nif \"%opt%\"==\"\" goto default\n\n:default\necho 执行默认操作\necho 我啥也没干\npause\ngoto start\n\n:get_log\necho opt=%opt%\necho 获取applog\necho 目标路径为 %FOLDER%%TIMESTAMP%\n::adb pull applog路径 目标路径\npause\ngoto start\n\n:clean_log\necho opt=%opt%\necho 清理applog\nadb remount\n::adb shell rm -r xxx\npause\ngoto start\n```","source":"_posts/10_安卓客户端取日志脚本.md","raw":"---\ntitle: 安卓客户端取日志脚本\ndate: 2019-04-01 20:32:18\ntags: bat\n---\n\n安卓客户端取日志脚本：\n\n<!--more-->\n\n```\n@echo off\n\n::初始化脚本\n:start\ncls\necho ****************************************\necho [请输入：0]        退出\necho [请输入：1]        获取applog\necho [请输入：2]        清理applog\necho [直接输入回车]   执行默认操作\necho ****************************************\n\nset FOLDER=%~dp0\nset TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\nset /p opt=请输入:\n\nif \"%opt%\"==\"0\" goto exit\nif \"%opt%\"==\"1\" goto get_log\nif \"%opt%\"==\"\" goto default\n\n:default\necho 执行默认操作\necho 我啥也没干\npause\ngoto start\n\n:get_log\necho opt=%opt%\necho 获取applog\necho 目标路径为 %FOLDER%%TIMESTAMP%\n::adb pull applog路径 目标路径\npause\ngoto start\n\n:clean_log\necho opt=%opt%\necho 清理applog\nadb remount\n::adb shell rm -r xxx\npause\ngoto start\n```","slug":"10_安卓客户端取日志脚本","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wq7000ffkuj3d9qmq2f","content":"<p>安卓客户端取日志脚本：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo off</div><div class=\"line\"></div><div class=\"line\">::初始化脚本</div><div class=\"line\">:start</div><div class=\"line\">cls</div><div class=\"line\">echo ****************************************</div><div class=\"line\">echo [请输入：0]        退出</div><div class=\"line\">echo [请输入：1]        获取applog</div><div class=\"line\">echo [请输入：2]        清理applog</div><div class=\"line\">echo [直接输入回车]   执行默认操作</div><div class=\"line\">echo ****************************************</div><div class=\"line\"></div><div class=\"line\">set FOLDER=%~dp0</div><div class=\"line\">set TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</div><div class=\"line\">set /p opt=请输入:</div><div class=\"line\"></div><div class=\"line\">if &quot;%opt%&quot;==&quot;0&quot; goto exit</div><div class=\"line\">if &quot;%opt%&quot;==&quot;1&quot; goto get_log</div><div class=\"line\">if &quot;%opt%&quot;==&quot;&quot; goto default</div><div class=\"line\"></div><div class=\"line\">:default</div><div class=\"line\">echo 执行默认操作</div><div class=\"line\">echo 我啥也没干</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:get_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 获取applog</div><div class=\"line\">echo 目标路径为 %FOLDER%%TIMESTAMP%</div><div class=\"line\">::adb pull applog路径 目标路径</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:clean_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 清理applog</div><div class=\"line\">adb remount</div><div class=\"line\">::adb shell rm -r xxx</div><div class=\"line\">pause</div><div class=\"line\">goto start</div></pre></td></tr></table></figure>","excerpt":"<p>安卓客户端取日志脚本：</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo off</div><div class=\"line\"></div><div class=\"line\">::初始化脚本</div><div class=\"line\">:start</div><div class=\"line\">cls</div><div class=\"line\">echo ****************************************</div><div class=\"line\">echo [请输入：0]        退出</div><div class=\"line\">echo [请输入：1]        获取applog</div><div class=\"line\">echo [请输入：2]        清理applog</div><div class=\"line\">echo [直接输入回车]   执行默认操作</div><div class=\"line\">echo ****************************************</div><div class=\"line\"></div><div class=\"line\">set FOLDER=%~dp0</div><div class=\"line\">set TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</div><div class=\"line\">set /p opt=请输入:</div><div class=\"line\"></div><div class=\"line\">if &quot;%opt%&quot;==&quot;0&quot; goto exit</div><div class=\"line\">if &quot;%opt%&quot;==&quot;1&quot; goto get_log</div><div class=\"line\">if &quot;%opt%&quot;==&quot;&quot; goto default</div><div class=\"line\"></div><div class=\"line\">:default</div><div class=\"line\">echo 执行默认操作</div><div class=\"line\">echo 我啥也没干</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:get_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 获取applog</div><div class=\"line\">echo 目标路径为 %FOLDER%%TIMESTAMP%</div><div class=\"line\">::adb pull applog路径 目标路径</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:clean_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 清理applog</div><div class=\"line\">adb remount</div><div class=\"line\">::adb shell rm -r xxx</div><div class=\"line\">pause</div><div class=\"line\">goto start</div></pre></td></tr></table></figure>"},{"title":"ADB常用命令","date":"2018-07-01T12:32:18.000Z","_content":"\n#### 获取应用包名（打开应用）\n\n\tadb shell \"dumpsys window | grep mCurrentFocus\"\n\n#### 获取应用安装路径\n\n\tadb shell pm path 包名\n\n#### 获取应用版本号\n\n\tadb shell \"pm dump 包名 | grep \"versionName\"\"\n\n<!--more-->\n\n#### 获取手机系统信息（ CPU，厂商名称等）\n\n\tadb shell \"cat /system/build.prop | grep \"product\"\"\n\n#### 获取手机系统版本\n\n\tadb shell getprop ro.build.version.release\n\n#### 获取手机系统api版本\n\n\tadb shell getprop ro.build.version.sdk\n\n#### 获取手机设备型号\n\n\tadb -d shell getprop ro.product.model\n\n#### 获取手机厂商名称\n\n\tadb -d shell getprop ro.product.brand\n\n#### 获取手机的序列号\n\n\t有两种方式\n\tadb get-serialno\n\tadb shell getprop ro.serialno\n\n#### 获取手机的IMEI\n\n\t有三种方式，由于手机和系统的限制，不一定获取到\n\tadb shell dumpsys iphonesubinfo\n\t其中Device ID即为IMEI号\n\n\tadb shell getprop gsm.baseband.imei\n\tservice call iphonesubinfo \n\t此种方式，需要自己处理获取的信息得到\n\n#### 获取手机mac地址\n\n\tadb shell cat /sys/class/net/wlan/address\n\tadb shell cat /sys/class/net/wlan0/address\n\n#### 获取手机内存信息\n\n\tadb shell cat /proc/meminfo\n\n#### 获取手机存储信息\n\n\tadb shell df\n\n#### 获取手机内部存储信息：\n\n\t魅族手机： adb shell df /mnt/shell/emulated\n\t其他： adb shell df /data\n\n#### 获取sdcard存储信息：\n\n\tadb shell df /storage/sdcard\n\n#### 获取手机分辨率\n\n\tadb shell \"dumpsys window | grep mUnrestrictedScreen\"\n\n#### 获取手机物理密度\n\n\tadb shell wm density\n\n#### 获取当前界面对应的活动和包名\n\n\tadb shell \"dumpsys window | grep mCurrentFocus\"\n","source":"_posts/09_ADB常用命令.md","raw":"---\ntitle: ADB常用命令\ndate: 2018-07-01 20:32:18\ntags: ADB\n---\n\n#### 获取应用包名（打开应用）\n\n\tadb shell \"dumpsys window | grep mCurrentFocus\"\n\n#### 获取应用安装路径\n\n\tadb shell pm path 包名\n\n#### 获取应用版本号\n\n\tadb shell \"pm dump 包名 | grep \"versionName\"\"\n\n<!--more-->\n\n#### 获取手机系统信息（ CPU，厂商名称等）\n\n\tadb shell \"cat /system/build.prop | grep \"product\"\"\n\n#### 获取手机系统版本\n\n\tadb shell getprop ro.build.version.release\n\n#### 获取手机系统api版本\n\n\tadb shell getprop ro.build.version.sdk\n\n#### 获取手机设备型号\n\n\tadb -d shell getprop ro.product.model\n\n#### 获取手机厂商名称\n\n\tadb -d shell getprop ro.product.brand\n\n#### 获取手机的序列号\n\n\t有两种方式\n\tadb get-serialno\n\tadb shell getprop ro.serialno\n\n#### 获取手机的IMEI\n\n\t有三种方式，由于手机和系统的限制，不一定获取到\n\tadb shell dumpsys iphonesubinfo\n\t其中Device ID即为IMEI号\n\n\tadb shell getprop gsm.baseband.imei\n\tservice call iphonesubinfo \n\t此种方式，需要自己处理获取的信息得到\n\n#### 获取手机mac地址\n\n\tadb shell cat /sys/class/net/wlan/address\n\tadb shell cat /sys/class/net/wlan0/address\n\n#### 获取手机内存信息\n\n\tadb shell cat /proc/meminfo\n\n#### 获取手机存储信息\n\n\tadb shell df\n\n#### 获取手机内部存储信息：\n\n\t魅族手机： adb shell df /mnt/shell/emulated\n\t其他： adb shell df /data\n\n#### 获取sdcard存储信息：\n\n\tadb shell df /storage/sdcard\n\n#### 获取手机分辨率\n\n\tadb shell \"dumpsys window | grep mUnrestrictedScreen\"\n\n#### 获取手机物理密度\n\n\tadb shell wm density\n\n#### 获取当前界面对应的活动和包名\n\n\tadb shell \"dumpsys window | grep mCurrentFocus\"\n","slug":"09_ADB常用命令","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wqa000hfkuj6pivr81a","content":"<h4 id=\"获取应用包名（打开应用）\"><a href=\"#获取应用包名（打开应用）\" class=\"headerlink\" title=\"获取应用包名（打开应用）\"></a>获取应用包名（打开应用）</h4><pre><code>adb shell &quot;dumpsys window | grep mCurrentFocus&quot;\n</code></pre><h4 id=\"获取应用安装路径\"><a href=\"#获取应用安装路径\" class=\"headerlink\" title=\"获取应用安装路径\"></a>获取应用安装路径</h4><pre><code>adb shell pm path 包名\n</code></pre><h4 id=\"获取应用版本号\"><a href=\"#获取应用版本号\" class=\"headerlink\" title=\"获取应用版本号\"></a>获取应用版本号</h4><pre><code>adb shell &quot;pm dump 包名 | grep &quot;versionName&quot;&quot;\n</code></pre><a id=\"more\"></a>\n<h4 id=\"获取手机系统信息（-CPU，厂商名称等）\"><a href=\"#获取手机系统信息（-CPU，厂商名称等）\" class=\"headerlink\" title=\"获取手机系统信息（ CPU，厂商名称等）\"></a>获取手机系统信息（ CPU，厂商名称等）</h4><pre><code>adb shell &quot;cat /system/build.prop | grep &quot;product&quot;&quot;\n</code></pre><h4 id=\"获取手机系统版本\"><a href=\"#获取手机系统版本\" class=\"headerlink\" title=\"获取手机系统版本\"></a>获取手机系统版本</h4><pre><code>adb shell getprop ro.build.version.release\n</code></pre><h4 id=\"获取手机系统api版本\"><a href=\"#获取手机系统api版本\" class=\"headerlink\" title=\"获取手机系统api版本\"></a>获取手机系统api版本</h4><pre><code>adb shell getprop ro.build.version.sdk\n</code></pre><h4 id=\"获取手机设备型号\"><a href=\"#获取手机设备型号\" class=\"headerlink\" title=\"获取手机设备型号\"></a>获取手机设备型号</h4><pre><code>adb -d shell getprop ro.product.model\n</code></pre><h4 id=\"获取手机厂商名称\"><a href=\"#获取手机厂商名称\" class=\"headerlink\" title=\"获取手机厂商名称\"></a>获取手机厂商名称</h4><pre><code>adb -d shell getprop ro.product.brand\n</code></pre><h4 id=\"获取手机的序列号\"><a href=\"#获取手机的序列号\" class=\"headerlink\" title=\"获取手机的序列号\"></a>获取手机的序列号</h4><pre><code>有两种方式\nadb get-serialno\nadb shell getprop ro.serialno\n</code></pre><h4 id=\"获取手机的IMEI\"><a href=\"#获取手机的IMEI\" class=\"headerlink\" title=\"获取手机的IMEI\"></a>获取手机的IMEI</h4><pre><code>有三种方式，由于手机和系统的限制，不一定获取到\nadb shell dumpsys iphonesubinfo\n其中Device ID即为IMEI号\n\nadb shell getprop gsm.baseband.imei\nservice call iphonesubinfo \n此种方式，需要自己处理获取的信息得到\n</code></pre><h4 id=\"获取手机mac地址\"><a href=\"#获取手机mac地址\" class=\"headerlink\" title=\"获取手机mac地址\"></a>获取手机mac地址</h4><pre><code>adb shell cat /sys/class/net/wlan/address\nadb shell cat /sys/class/net/wlan0/address\n</code></pre><h4 id=\"获取手机内存信息\"><a href=\"#获取手机内存信息\" class=\"headerlink\" title=\"获取手机内存信息\"></a>获取手机内存信息</h4><pre><code>adb shell cat /proc/meminfo\n</code></pre><h4 id=\"获取手机存储信息\"><a href=\"#获取手机存储信息\" class=\"headerlink\" title=\"获取手机存储信息\"></a>获取手机存储信息</h4><pre><code>adb shell df\n</code></pre><h4 id=\"获取手机内部存储信息：\"><a href=\"#获取手机内部存储信息：\" class=\"headerlink\" title=\"获取手机内部存储信息：\"></a>获取手机内部存储信息：</h4><pre><code>魅族手机： adb shell df /mnt/shell/emulated\n其他： adb shell df /data\n</code></pre><h4 id=\"获取sdcard存储信息：\"><a href=\"#获取sdcard存储信息：\" class=\"headerlink\" title=\"获取sdcard存储信息：\"></a>获取sdcard存储信息：</h4><pre><code>adb shell df /storage/sdcard\n</code></pre><h4 id=\"获取手机分辨率\"><a href=\"#获取手机分辨率\" class=\"headerlink\" title=\"获取手机分辨率\"></a>获取手机分辨率</h4><pre><code>adb shell &quot;dumpsys window | grep mUnrestrictedScreen&quot;\n</code></pre><h4 id=\"获取手机物理密度\"><a href=\"#获取手机物理密度\" class=\"headerlink\" title=\"获取手机物理密度\"></a>获取手机物理密度</h4><pre><code>adb shell wm density\n</code></pre><h4 id=\"获取当前界面对应的活动和包名\"><a href=\"#获取当前界面对应的活动和包名\" class=\"headerlink\" title=\"获取当前界面对应的活动和包名\"></a>获取当前界面对应的活动和包名</h4><pre><code>adb shell &quot;dumpsys window | grep mCurrentFocus&quot;\n</code></pre>","excerpt":"<h4 id=\"获取应用包名（打开应用）\"><a href=\"#获取应用包名（打开应用）\" class=\"headerlink\" title=\"获取应用包名（打开应用）\"></a>获取应用包名（打开应用）</h4><pre><code>adb shell &quot;dumpsys window | grep mCurrentFocus&quot;\n</code></pre><h4 id=\"获取应用安装路径\"><a href=\"#获取应用安装路径\" class=\"headerlink\" title=\"获取应用安装路径\"></a>获取应用安装路径</h4><pre><code>adb shell pm path 包名\n</code></pre><h4 id=\"获取应用版本号\"><a href=\"#获取应用版本号\" class=\"headerlink\" title=\"获取应用版本号\"></a>获取应用版本号</h4><pre><code>adb shell &quot;pm dump 包名 | grep &quot;versionName&quot;&quot;\n</code></pre>","more":"<h4 id=\"获取手机系统信息（-CPU，厂商名称等）\"><a href=\"#获取手机系统信息（-CPU，厂商名称等）\" class=\"headerlink\" title=\"获取手机系统信息（ CPU，厂商名称等）\"></a>获取手机系统信息（ CPU，厂商名称等）</h4><pre><code>adb shell &quot;cat /system/build.prop | grep &quot;product&quot;&quot;\n</code></pre><h4 id=\"获取手机系统版本\"><a href=\"#获取手机系统版本\" class=\"headerlink\" title=\"获取手机系统版本\"></a>获取手机系统版本</h4><pre><code>adb shell getprop ro.build.version.release\n</code></pre><h4 id=\"获取手机系统api版本\"><a href=\"#获取手机系统api版本\" class=\"headerlink\" title=\"获取手机系统api版本\"></a>获取手机系统api版本</h4><pre><code>adb shell getprop ro.build.version.sdk\n</code></pre><h4 id=\"获取手机设备型号\"><a href=\"#获取手机设备型号\" class=\"headerlink\" title=\"获取手机设备型号\"></a>获取手机设备型号</h4><pre><code>adb -d shell getprop ro.product.model\n</code></pre><h4 id=\"获取手机厂商名称\"><a href=\"#获取手机厂商名称\" class=\"headerlink\" title=\"获取手机厂商名称\"></a>获取手机厂商名称</h4><pre><code>adb -d shell getprop ro.product.brand\n</code></pre><h4 id=\"获取手机的序列号\"><a href=\"#获取手机的序列号\" class=\"headerlink\" title=\"获取手机的序列号\"></a>获取手机的序列号</h4><pre><code>有两种方式\nadb get-serialno\nadb shell getprop ro.serialno\n</code></pre><h4 id=\"获取手机的IMEI\"><a href=\"#获取手机的IMEI\" class=\"headerlink\" title=\"获取手机的IMEI\"></a>获取手机的IMEI</h4><pre><code>有三种方式，由于手机和系统的限制，不一定获取到\nadb shell dumpsys iphonesubinfo\n其中Device ID即为IMEI号\n\nadb shell getprop gsm.baseband.imei\nservice call iphonesubinfo \n此种方式，需要自己处理获取的信息得到\n</code></pre><h4 id=\"获取手机mac地址\"><a href=\"#获取手机mac地址\" class=\"headerlink\" title=\"获取手机mac地址\"></a>获取手机mac地址</h4><pre><code>adb shell cat /sys/class/net/wlan/address\nadb shell cat /sys/class/net/wlan0/address\n</code></pre><h4 id=\"获取手机内存信息\"><a href=\"#获取手机内存信息\" class=\"headerlink\" title=\"获取手机内存信息\"></a>获取手机内存信息</h4><pre><code>adb shell cat /proc/meminfo\n</code></pre><h4 id=\"获取手机存储信息\"><a href=\"#获取手机存储信息\" class=\"headerlink\" title=\"获取手机存储信息\"></a>获取手机存储信息</h4><pre><code>adb shell df\n</code></pre><h4 id=\"获取手机内部存储信息：\"><a href=\"#获取手机内部存储信息：\" class=\"headerlink\" title=\"获取手机内部存储信息：\"></a>获取手机内部存储信息：</h4><pre><code>魅族手机： adb shell df /mnt/shell/emulated\n其他： adb shell df /data\n</code></pre><h4 id=\"获取sdcard存储信息：\"><a href=\"#获取sdcard存储信息：\" class=\"headerlink\" title=\"获取sdcard存储信息：\"></a>获取sdcard存储信息：</h4><pre><code>adb shell df /storage/sdcard\n</code></pre><h4 id=\"获取手机分辨率\"><a href=\"#获取手机分辨率\" class=\"headerlink\" title=\"获取手机分辨率\"></a>获取手机分辨率</h4><pre><code>adb shell &quot;dumpsys window | grep mUnrestrictedScreen&quot;\n</code></pre><h4 id=\"获取手机物理密度\"><a href=\"#获取手机物理密度\" class=\"headerlink\" title=\"获取手机物理密度\"></a>获取手机物理密度</h4><pre><code>adb shell wm density\n</code></pre><h4 id=\"获取当前界面对应的活动和包名\"><a href=\"#获取当前界面对应的活动和包名\" class=\"headerlink\" title=\"获取当前界面对应的活动和包名\"></a>获取当前界面对应的活动和包名</h4><pre><code>adb shell &quot;dumpsys window | grep mCurrentFocus&quot;\n</code></pre>"},{"title":"测试工作的一些总结","date":"2019-07-07T12:32:18.000Z","_content":"\n### 手工测试\n\n#### 测试流程规范\n1. 产品从立项到发布要经历的流程\n\n    1. 立项流程：收集需求（用户、销售、领导等）->立项（产品经理）->决策（领导）\n    2. 设计阶段：需求澄清（产品经理）->产品设计（UI、架构）->开发story->测试方案\n    3. 开发&转测：进度把控-风险评估\n    4. 客户验收：结项\n\n2. 测试的职责\n\n    1. 输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）\n    2. 执行测试用例\n    3. 缺陷跟踪\n    4. 输出测试报告、测试总结等\n\n#### 测试人员需要掌握的技能\n1. 产品从立项到发布的各个流程中，测试需要关注的地方\n\n   1. 立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理\n   2. 设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）\n   3. 测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责\n      1. 测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）\n      2. 测试用例要按照功能测试设计将操作步骤、检查点逐一细化\n      2. 测试执行要覆盖到测试用例的每一个测试步骤和检查点\n      3. 缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例\n\n参考：[怎样制定一个合格的测试方案](https://blog.csdn.net/alice_tl/article/details/80218342)\n\n2. 常见客户端测试工具的使用\n\n    ADB\n参考：{% post_link ADB常用命令 %}\n\n    SqliteStudio\n参考：{% post_link SQL常用命令 %}\n\n    tcpdump\n参考:[tcpdump的使用](todo)\n\n    wireshark\n参考:[wireshark的使用](todo)\n\n### 自动化测试\n1. 常见的自动化测试框架\n\n    1. Appium和Selenium了解\n    2. 开源的自动化框架上手\n\n2. 自动化脚本编写语言\n\n    java和python\n\n3. 自动化构建的思路\n    \n    1. 从脚本到aw，再到框架\n    2. 自动构建任务，远程执行\n    3. 测试报告的生成\n\n4. 从手工用例到自动化用例转化的注意点\n\n    1. 自动化用例覆盖范围的评审\n    2. 自动化用例执行失败用例的定位\n","source":"_posts/15_测试工作的一些总结.md","raw":"---\ntitle: 测试工作的一些总结\ndate: 2019-07-07 20:32:18\ntags: 总结,android\n---\n\n### 手工测试\n\n#### 测试流程规范\n1. 产品从立项到发布要经历的流程\n\n    1. 立项流程：收集需求（用户、销售、领导等）->立项（产品经理）->决策（领导）\n    2. 设计阶段：需求澄清（产品经理）->产品设计（UI、架构）->开发story->测试方案\n    3. 开发&转测：进度把控-风险评估\n    4. 客户验收：结项\n\n2. 测试的职责\n\n    1. 输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）\n    2. 执行测试用例\n    3. 缺陷跟踪\n    4. 输出测试报告、测试总结等\n\n#### 测试人员需要掌握的技能\n1. 产品从立项到发布的各个流程中，测试需要关注的地方\n\n   1. 立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理\n   2. 设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）\n   3. 测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责\n      1. 测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）\n      2. 测试用例要按照功能测试设计将操作步骤、检查点逐一细化\n      2. 测试执行要覆盖到测试用例的每一个测试步骤和检查点\n      3. 缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例\n\n参考：[怎样制定一个合格的测试方案](https://blog.csdn.net/alice_tl/article/details/80218342)\n\n2. 常见客户端测试工具的使用\n\n    ADB\n参考：{% post_link ADB常用命令 %}\n\n    SqliteStudio\n参考：{% post_link SQL常用命令 %}\n\n    tcpdump\n参考:[tcpdump的使用](todo)\n\n    wireshark\n参考:[wireshark的使用](todo)\n\n### 自动化测试\n1. 常见的自动化测试框架\n\n    1. Appium和Selenium了解\n    2. 开源的自动化框架上手\n\n2. 自动化脚本编写语言\n\n    java和python\n\n3. 自动化构建的思路\n    \n    1. 从脚本到aw，再到框架\n    2. 自动构建任务，远程执行\n    3. 测试报告的生成\n\n4. 从手工用例到自动化用例转化的注意点\n\n    1. 自动化用例覆盖范围的评审\n    2. 自动化用例执行失败用例的定位\n","slug":"15_测试工作的一些总结","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wrn000xfkujgmwbh9tn","content":"<h3 id=\"手工测试\"><a href=\"#手工测试\" class=\"headerlink\" title=\"手工测试\"></a>手工测试</h3><h4 id=\"测试流程规范\"><a href=\"#测试流程规范\" class=\"headerlink\" title=\"测试流程规范\"></a>测试流程规范</h4><ol>\n<li><p>产品从立项到发布要经历的流程</p>\n<ol>\n<li>立项流程：收集需求（用户、销售、领导等）-&gt;立项（产品经理）-&gt;决策（领导）</li>\n<li>设计阶段：需求澄清（产品经理）-&gt;产品设计（UI、架构）-&gt;开发story-&gt;测试方案</li>\n<li>开发&amp;转测：进度把控-风险评估</li>\n<li>客户验收：结项</li>\n</ol>\n</li>\n<li><p>测试的职责</p>\n<ol>\n<li>输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）</li>\n<li>执行测试用例</li>\n<li>缺陷跟踪</li>\n<li>输出测试报告、测试总结等</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"测试人员需要掌握的技能\"><a href=\"#测试人员需要掌握的技能\" class=\"headerlink\" title=\"测试人员需要掌握的技能\"></a>测试人员需要掌握的技能</h4><ol>\n<li><p>产品从立项到发布的各个流程中，测试需要关注的地方</p>\n<ol>\n<li>立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理</li>\n<li>设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）</li>\n<li>测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责<ol>\n<li>测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）</li>\n<li>测试用例要按照功能测试设计将操作步骤、检查点逐一细化</li>\n<li>测试执行要覆盖到测试用例的每一个测试步骤和检查点</li>\n<li>缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>参考：<a href=\"https://blog.csdn.net/alice_tl/article/details/80218342\">怎样制定一个合格的测试方案</a></p>\n<ol>\n<li><p>常见客户端测试工具的使用</p>\n<p> ADB<br>参考：</p>\n<p> SqliteStudio<br>参考：</p>\n<p> tcpdump<br>参考:<a href=\"todo\">tcpdump的使用</a></p>\n<p> wireshark<br>参考:<a href=\"todo\">wireshark的使用</a></p>\n</li>\n</ol>\n<h3 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h3><ol>\n<li><p>常见的自动化测试框架</p>\n<ol>\n<li>Appium和Selenium了解</li>\n<li>开源的自动化框架上手</li>\n</ol>\n</li>\n<li><p>自动化脚本编写语言</p>\n<p> java和python</p>\n</li>\n<li><p>自动化构建的思路</p>\n<ol>\n<li>从脚本到aw，再到框架</li>\n<li>自动构建任务，远程执行</li>\n<li>测试报告的生成</li>\n</ol>\n</li>\n<li><p>从手工用例到自动化用例转化的注意点</p>\n<ol>\n<li>自动化用例覆盖范围的评审</li>\n<li>自动化用例执行失败用例的定位</li>\n</ol>\n</li>\n</ol>\n","excerpt":"","more":"<h3 id=\"手工测试\"><a href=\"#手工测试\" class=\"headerlink\" title=\"手工测试\"></a>手工测试</h3><h4 id=\"测试流程规范\"><a href=\"#测试流程规范\" class=\"headerlink\" title=\"测试流程规范\"></a>测试流程规范</h4><ol>\n<li><p>产品从立项到发布要经历的流程</p>\n<ol>\n<li>立项流程：收集需求（用户、销售、领导等）-&gt;立项（产品经理）-&gt;决策（领导）</li>\n<li>设计阶段：需求澄清（产品经理）-&gt;产品设计（UI、架构）-&gt;开发story-&gt;测试方案</li>\n<li>开发&amp;转测：进度把控-风险评估</li>\n<li>客户验收：结项</li>\n</ol>\n</li>\n<li><p>测试的职责</p>\n<ol>\n<li>输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）</li>\n<li>执行测试用例</li>\n<li>缺陷跟踪</li>\n<li>输出测试报告、测试总结等</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"测试人员需要掌握的技能\"><a href=\"#测试人员需要掌握的技能\" class=\"headerlink\" title=\"测试人员需要掌握的技能\"></a>测试人员需要掌握的技能</h4><ol>\n<li><p>产品从立项到发布的各个流程中，测试需要关注的地方</p>\n<ol>\n<li>立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理</li>\n<li>设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）</li>\n<li>测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责<ol>\n<li>测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）</li>\n<li>测试用例要按照功能测试设计将操作步骤、检查点逐一细化</li>\n<li>测试执行要覆盖到测试用例的每一个测试步骤和检查点</li>\n<li>缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>参考：<a href=\"https://blog.csdn.net/alice_tl/article/details/80218342\">怎样制定一个合格的测试方案</a></p>\n<ol>\n<li><p>常见客户端测试工具的使用</p>\n<p> ADB<br>参考：</p>\n<p> SqliteStudio<br>参考：</p>\n<p> tcpdump<br>参考:<a href=\"todo\">tcpdump的使用</a></p>\n<p> wireshark<br>参考:<a href=\"todo\">wireshark的使用</a></p>\n</li>\n</ol>\n<h3 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h3><ol>\n<li><p>常见的自动化测试框架</p>\n<ol>\n<li>Appium和Selenium了解</li>\n<li>开源的自动化框架上手</li>\n</ol>\n</li>\n<li><p>自动化脚本编写语言</p>\n<p> java和python</p>\n</li>\n<li><p>自动化构建的思路</p>\n<ol>\n<li>从脚本到aw，再到框架</li>\n<li>自动构建任务，远程执行</li>\n<li>测试报告的生成</li>\n</ol>\n</li>\n<li><p>从手工用例到自动化用例转化的注意点</p>\n<ol>\n<li>自动化用例覆盖范围的评审</li>\n<li>自动化用例执行失败用例的定位</li>\n</ol>\n</li>\n</ol>\n"},{"title":"让你的hexo支持mermaid","date":"2019-05-26T08:56:24.000Z","_content":"\n#### mermaid配置方法\n1. npm安装插件\n2. blog根目录config文件中添加配置\n3. 主题文件中添加过滤标签\n4. 补充：blog根目录中package.json文件中添加依赖（参考文章中没有提到）\n\n<!--more-->\n\n参考文章：\n\n    https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\n    https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n\n####  hexo绘制脑图\n\n参考文章：\n\n    https://qsli.github.io/2017/01/01/markdown-mindmap/\n\n\n#### 配置完成后，使用mermaid语法\n\n##### 流程图\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n##### 时序图\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n##### 甘特图\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```","source":"_posts/11_让你的Hexo支持mermaid.md","raw":"---\ntitle: 让你的hexo支持mermaid\ndate: 2019-05-26 16:56:24\ntags: hexo\n---\n\n#### mermaid配置方法\n1. npm安装插件\n2. blog根目录config文件中添加配置\n3. 主题文件中添加过滤标签\n4. 补充：blog根目录中package.json文件中添加依赖（参考文章中没有提到）\n\n<!--more-->\n\n参考文章：\n\n    https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\n    https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n\n####  hexo绘制脑图\n\n参考文章：\n\n    https://qsli.github.io/2017/01/01/markdown-mindmap/\n\n\n#### 配置完成后，使用mermaid语法\n\n##### 流程图\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n##### 时序图\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n##### 甘特图\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```","slug":"11_让你的Hexo支持mermaid","published":1,"updated":"2020-02-10T12:50:10.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcdl2wrs000zfkuji9ql6jum","content":"<h4 id=\"mermaid配置方法\"><a href=\"#mermaid配置方法\" class=\"headerlink\" title=\"mermaid配置方法\"></a>mermaid配置方法</h4><ol>\n<li>npm安装插件</li>\n<li>blog根目录config文件中添加配置</li>\n<li>主题文件中添加过滤标签</li>\n<li>补充：blog根目录中package.json文件中添加依赖（参考文章中没有提到）</li>\n</ol>\n<a id=\"more\"></a>\n<p>参考文章：</p>\n<pre><code>https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\nhttps://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n</code></pre><h4 id=\"hexo绘制脑图\"><a href=\"#hexo绘制脑图\" class=\"headerlink\" title=\"hexo绘制脑图\"></a>hexo绘制脑图</h4><p>参考文章：</p>\n<pre><code>https://qsli.github.io/2017/01/01/markdown-mindmap/\n</code></pre><h4 id=\"配置完成后，使用mermaid语法\"><a href=\"#配置完成后，使用mermaid语法\" class=\"headerlink\" title=\"配置完成后，使用mermaid语法\"></a>配置完成后，使用mermaid语法</h4><h5 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h5><pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h5 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h5><pre class=\"mermaid\">sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!</pre>\n\n<h5 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h5><pre class=\"mermaid\">gantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d</pre>","excerpt":"<h4 id=\"mermaid配置方法\"><a href=\"#mermaid配置方法\" class=\"headerlink\" title=\"mermaid配置方法\"></a>mermaid配置方法</h4><ol>\n<li>npm安装插件</li>\n<li>blog根目录config文件中添加配置</li>\n<li>主题文件中添加过滤标签</li>\n<li>补充：blog根目录中package.json文件中添加依赖（参考文章中没有提到）</li>\n</ol>","more":"<p>参考文章：</p>\n<pre><code>https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\nhttps://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n</code></pre><h4 id=\"hexo绘制脑图\"><a href=\"#hexo绘制脑图\" class=\"headerlink\" title=\"hexo绘制脑图\"></a>hexo绘制脑图</h4><p>参考文章：</p>\n<pre><code>https://qsli.github.io/2017/01/01/markdown-mindmap/\n</code></pre><h4 id=\"配置完成后，使用mermaid语法\"><a href=\"#配置完成后，使用mermaid语法\" class=\"headerlink\" title=\"配置完成后，使用mermaid语法\"></a>配置完成后，使用mermaid语法</h4><h5 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h5><pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h5 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h5><pre class=\"mermaid\">sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!</pre>\n\n<h5 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h5><pre class=\"mermaid\">gantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d</pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckcdl2wp10000fkuju3xovy3s","tag_id":"ckcdl2wpl0004fkuj7q2b47bw","_id":"ckcdl2wpz0009fkujhn7ehd5l"},{"post_id":"ckcdl2wpf0002fkujvrxz2tf0","tag_id":"ckcdl2wpx0008fkuj392d0hei","_id":"ckcdl2wq6000efkuj1exz1oti"},{"post_id":"ckcdl2wpq0005fkujshwqr59q","tag_id":"ckcdl2wq3000cfkujv8wzsu1o","_id":"ckcdl2wqc000ifkujni4r3vr9"},{"post_id":"ckcdl2wps0006fkujpzhpxgnt","tag_id":"ckcdl2wq9000gfkuj4ebealwk","_id":"ckcdl2wqf000kfkuj5jmgtsy3"},{"post_id":"ckcdl2wpv0007fkujn41zf7ee","tag_id":"ckcdl2wqe000jfkuj7oyq61bj","_id":"ckcdl2wqj000mfkujj9xahqm2"},{"post_id":"ckcdl2wpz000afkujpqpldams","tag_id":"ckcdl2wq3000cfkujv8wzsu1o","_id":"ckcdl2wql000ofkujlmradv8j"},{"post_id":"ckcdl2wq1000bfkujemyxx29a","tag_id":"ckcdl2wqk000nfkuj3yrdd8rs","_id":"ckcdl2wqm000qfkujwum3n9yd"},{"post_id":"ckcdl2wq4000dfkujt92g75j9","tag_id":"ckcdl2wql000pfkuj1pj3kurn","_id":"ckcdl2wqo000sfkujktwulape"},{"post_id":"ckcdl2wq7000ffkuj3d9qmq2f","tag_id":"ckcdl2wqn000rfkuj7mvzxuhx","_id":"ckcdl2wqq000ufkujcnrds6w6"},{"post_id":"ckcdl2wqa000hfkuj6pivr81a","tag_id":"ckcdl2wqp000tfkuj04szjkc5","_id":"ckcdl2wqr000vfkujcraw5v0g"},{"post_id":"ckcdl2wrs000zfkuji9ql6jum","tag_id":"ckcdl2wpl0004fkuj7q2b47bw","_id":"ckcdl2ws10012fkujhzso4oas"},{"post_id":"ckcdl2wrn000xfkujgmwbh9tn","tag_id":"ckcdl2wrx0010fkujra02na2u","_id":"ckcdl2ws90015fkujgzkqx7tw"}],"Tag":[{"name":"hexo","_id":"ckcdl2wpl0004fkuj7q2b47bw"},{"name":"git","_id":"ckcdl2wpx0008fkuj392d0hei"},{"name":"算法","_id":"ckcdl2wq3000cfkujv8wzsu1o"},{"name":"java","_id":"ckcdl2wq9000gfkuj4ebealwk"},{"name":"android","_id":"ckcdl2wqe000jfkuj7oyq61bj"},{"name":"markdown","_id":"ckcdl2wqk000nfkuj3yrdd8rs"},{"name":"python","_id":"ckcdl2wql000pfkuj1pj3kurn"},{"name":"bat","_id":"ckcdl2wqn000rfkuj7mvzxuhx"},{"name":"ADB","_id":"ckcdl2wqp000tfkuj04szjkc5"},{"name":"总结,android","_id":"ckcdl2wrx0010fkujra02na2u"}]}}