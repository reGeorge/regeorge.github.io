{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/AcFun.png","path":"img/AcFun.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/CSDN.png","path":"img/CSDN.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Coding.png","path":"img/Coding.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/LOFTER.png","path":"img/LOFTER.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Plunker.png","path":"img/Plunker.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Quora.png","path":"img/Quora.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/bilibili.png","path":"img/bilibili.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/niconico.png","path":"img/niconico.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/博客园.png","path":"img/博客园.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/知乎.png","path":"img/知乎.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/简书.png","path":"img/简书.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"source/Staticfile","path":"Staticfile","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"source/images/lofter.png","path":"images/lofter.png","modified":0,"renderable":0},{"_id":"source/CV/resume/90k.jpg","path":"CV/resume/90k.jpg","modified":0,"renderable":0},{"_id":"source/CV/resume/resume.html","path":"CV/resume/resume.html","modified":0,"renderable":0},{"_id":"source/CV/resume/resume.md","path":"CV/resume/resume.md","modified":0,"renderable":0}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1703497847876},{"_id":"source/.DS_Store","hash":"41a09c69c7f9d5e6ec7a9c02fd60c51a14d3c043","modified":1736070828991},{"_id":"source/_posts/01_如何搭建个人博客.md","hash":"6c4af264f2b0274d087acf93d278cf47bf4192c3","modified":1736086892017},{"_id":"source/_posts/02_git常用命令.md","hash":"4f287e4d87ea0e5daa2e5ed8f090805909a74527","modified":1736087129211},{"_id":"source/_posts/04_GBK和UTF-8的区别.md","hash":"077dbbac618f201310cc2bcaeca187503eaa7b2e","modified":1703497847876},{"_id":"source/_posts/03_冒泡排序算法.md","hash":"f0d9d08afa0c5421b6304794b26c18f9cfee2442","modified":1703497847876},{"_id":"source/_posts/05_基于android实现一个简单的备忘录app.md","hash":"22bc2cb6a765692b717052f5f4c878872ec208b3","modified":1735917228708},{"_id":"source/_posts/06_百日囚徒问题.md","hash":"2f9701a2e42aa56fef0fdc1dcd63fcf130124e55","modified":1703497847876},{"_id":"source/_posts/07_Markdown的使用.md","hash":"a75ee7ba1d708a907faa31bcb1a73c53f7edd90c","modified":1703497847877},{"_id":"source/_posts/08_使用selenium-wget实现自动下载图片.md","hash":"81ac3e4b4c86d25c9f3dcabb6480c776bab8a4c3","modified":1703497847877},{"_id":"source/_posts/09_ADB常用命令.md","hash":"fa58e834bcbc0efc9ce57c09e2af6974fd67bfe6","modified":1703497847877},{"_id":"source/_posts/10_安卓客户端取日志脚本.md","hash":"3a62d608f151647d5e5769377b0cfcab87108809","modified":1713068116109},{"_id":"source/_posts/12_测试方案的设计思路.md","hash":"76cc2ba244cc771cebfe43c0b0743c05d670e406","modified":1703497847877},{"_id":"source/_posts/11_让你的Hexo支持mermaid.md","hash":"2056248726a724cbd649f980fa7da1afababb60c","modified":1735917439536},{"_id":"source/_posts/14_测试工作的一些总结.md","hash":"d8702630eda774e49d55e0406b644e7eb21f26ec","modified":1736092193546},{"_id":"source/_posts/13_sublimetext插件安装.md","hash":"3ce9c8b2baea91feedd4a8ff8f99e1a4c7412cfb","modified":1703497847877},{"_id":"source/_posts/17_工具类项目需求文档.md","hash":"e970b09a6f9482eec36fd3f891e01334378519d9","modified":1736089822058},{"_id":"source/_posts/15_开发相关内容记录.md","hash":"fc3a2c5454cd18d79a1b60c89b3db19646c89963","modified":1704103325452},{"_id":"source/_posts/16_读书笔记收集.md","hash":"50d4ab5a36a8753e641e078307c004a90aef00fd","modified":1736352006069},{"_id":"source/_posts/18_公众号实现发布文章.md","hash":"bae39fa0545919e3acee7c31e8434f6b3d8252f3","modified":1736687846097},{"_id":"source/tags/index.md","hash":"a2606207e3bc215f426c8a44c969edd4f4cce875","modified":1703497847881},{"_id":"source/hiden/东方之门.md","hash":"c26b3c475669c1ff3537fab85c9a066bcf6ff061","modified":1703497847877},{"_id":"source/hiden/亲人，愿望，时光，记忆.md","hash":"743e2ac288e9e41957bb37e821345cadf025923d","modified":1703497847877},{"_id":"source/hiden/你好，2017——再见，2017.md","hash":"bcd70348ea95ed9b5bc04c1416dc635ba088726c","modified":1703497847877},{"_id":"source/hiden/在盐城.md","hash":"44937569ec7f9fb281986fdba1529a51c6dae597","modified":1703497847877},{"_id":"source/hiden/夜色褪红妆.md","hash":"3a7d85e83eacf56cfe3b0efad9f87adc3fccf085","modified":1703497847878},{"_id":"source/hiden/我是一个什么样的人.md","hash":"89e2334f76c4df53fdb9bbe56a9400ef626710fe","modified":1703497847878},{"_id":"source/hiden/测试方案的设计思路.md","hash":"17ddf7f1ad75e98e0b546fa3d9a5871ae5bc65c1","modified":1703497847878},{"_id":"source/hiden/看见时光.md","hash":"b49a4bc88806a86ca8e874bdcf7701c21fedecb2","modified":1703497847878},{"_id":"source/hiden/人生逆旅.md","hash":"7870f65ebdfa0559aa33c36f26098cc19afc4c99","modified":1703497847877},{"_id":"source/images/lofter.png","hash":"90e8b1967b57f27c009fd0aebf00ae18715c7f76","modified":1703497847881},{"_id":"source/CV/resume/resume.md","hash":"9c8584285b0d5be085876e1ad1126550eef9e293","modified":1703497847876},{"_id":"source/CV/resume/90k.jpg","hash":"8437b4cb4029bf1294d6d2fa037176b08ce03fe4","modified":1703497847876},{"_id":"source/CV/resume/resume.html","hash":"fea089eceb905dcd1732451dfc3c08810f930f52","modified":1703497847876},{"_id":"themes/yelee/README.md","hash":"034155f3c0a9ac4a30bbdcfd549f151960f5ef8d","modified":1703497847914},{"_id":"themes/yelee/.gitignore","hash":"237760b38ce80bcc3a8b556566bef0295c145393","modified":1703497847914},{"_id":"themes/yelee/_config.yml","hash":"8109f159e290ee0376948396eaa3d1b6930daf2c","modified":1736085691497},{"_id":"themes/yelee/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1703497847917},{"_id":"themes/yelee/languages/default.yml","hash":"80cc17267333753accc0b1c85a73678fedcbce76","modified":1703497847914},{"_id":"themes/yelee/languages/zh-Hans.yml","hash":"b5b2d20cde04db3773962284a002d025b09134b0","modified":1703497847914},{"_id":"themes/yelee/languages/zh-Hant-TW.yml","hash":"f372cc0d758a7d8bbb885aa9756d607bec26469a","modified":1703497847914},{"_id":"themes/yelee/languages/en.yml","hash":"2c096d06c0af4ddf9c128fc8f77fb276b59a47fb","modified":1703497847914},{"_id":"themes/yelee/languages/zh-Hant-HK.yml","hash":"c38a95f5076ad951839aaf7748295d7eea277c61","modified":1703497847914},{"_id":"themes/yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1703497847917},{"_id":"themes/yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1703497847917},{"_id":"themes/yelee/.github/ISSUE_TEMPLATE.md","hash":"09e2580d457ce93b4d7d554b75618036b45f8717","modified":1703497847913},{"_id":"themes/yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1703497847917},{"_id":"themes/yelee/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1703497847917},{"_id":"themes/yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1703497847917},{"_id":"themes/yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1703497847917},{"_id":"themes/yelee/layout/_partial/after-footer.ejs","hash":"4024557da5cd7925084eb0bdf045ef438a0b5754","modified":1703497847914},{"_id":"themes/yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1703497847917},{"_id":"themes/yelee/layout/_partial/archive-post.ejs","hash":"8af583c5f60c69ffdc97bee4e8fdac1ba34ebecd","modified":1703497847914},{"_id":"themes/yelee/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1703497847914},{"_id":"themes/yelee/layout/_partial/background.ejs","hash":"a439ebf7c4798ad3830e66ccf226a60b05ffea0a","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/article.ejs","hash":"4ce9204e11fc196abed9767c2d63130b1843d8a3","modified":1736086372883},{"_id":"themes/yelee/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/footer.ejs","hash":"cd24fe1c9097af027910c00ef2f79bb650a8975c","modified":1736065238026},{"_id":"themes/yelee/layout/_partial/ie-updater.ejs","hash":"3e5f2e41bbb1a5b93a8a7a6cb9ccd191ced54408","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/head.ejs","hash":"8ef930a8ed8b1a3d71b18cca02bc4963e310cf00","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/left-col.ejs","hash":"6ea8bacacc8370ccf5af4e6f66da3bc743b88342","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/mobile-nav.ejs","hash":"48696ded8e57def05d7ea58e74730f49d66ea6b5","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/mathjax.ejs","hash":"252f3757edea31d55a7e5624e2214f268bf07283","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post-nav-button.ejs","hash":"190efc2e8ee037387685ff7dd24ae6db8bc77c60","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/scrolling-button.ejs","hash":"6da102cd4a05bc6b4807b937862a7332f6845e5f","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/tab-title-change.ejs","hash":"1bebab6eb7a849319cd48fe051f3c71b9349a723","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/tag-cloud-page.ejs","hash":"432ded02bcc1f0d52cd833e8eeac688ee886169a","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/toc.ejs","hash":"a0c6362e0f0161bbb7e70d50a4d9e39f2ff8ca48","modified":1703497847917},{"_id":"themes/yelee/layout/_partial/page.ejs","hash":"9e504a0ec060ac3c6622855734ebea6eca2b78e9","modified":1703497847916},{"_id":"themes/yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1703497847917},{"_id":"themes/yelee/layout/_partial/open-in-new-tab.ejs","hash":"a6046bc322ce9194faa9559c70e1618a7e1e4cbc","modified":1703497847916},{"_id":"themes/yelee/source/background/bg-1.jpg","hash":"a0e916a1d6d42e9de467f590273bf48eab2cbff4","modified":1703497847917},{"_id":"themes/yelee/source/background/bg-3.jpg","hash":"dd681609670a00fc3a6f5556f8018f274455b190","modified":1703497847918},{"_id":"themes/yelee/source/background/bg-4.jpg","hash":"d450f587ce2bcd761eff18ae463155cd2d2536e5","modified":1703497847918},{"_id":"themes/yelee/source/background/bg-5.jpg","hash":"2a74546e53f71d00d398a47978ed033a46071349","modified":1703497847918},{"_id":"themes/yelee/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1703497847918},{"_id":"themes/yelee/source/background/bg-2.jpg","hash":"3bc593c1f7d329dfa5a481aa56a04acff5074410","modified":1703497847918},{"_id":"themes/yelee/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1703497847915},{"_id":"themes/yelee/source/css/style.styl","hash":"33519d7a6be12193795382840810e9ab1a5eae8e","modified":1703497847920},{"_id":"themes/yelee/source/css/_variables.styl","hash":"bca217a64e422ea7a4a1748b8fc980b408e8c836","modified":1703497847920},{"_id":"themes/yelee/source/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1703497847920},{"_id":"themes/yelee/source/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1703497847921},{"_id":"themes/yelee/source/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1703497847921},{"_id":"themes/yelee/source/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1703497847921},{"_id":"themes/yelee/source/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1703497847921},{"_id":"themes/yelee/source/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1703497847921},{"_id":"themes/yelee/source/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1703497847921},{"_id":"themes/yelee/source/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1703497847921},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1703497847921},{"_id":"themes/yelee/source/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1703497847921},{"_id":"themes/yelee/source/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1703497847921},{"_id":"themes/yelee/source/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1703497847921},{"_id":"themes/yelee/source/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1703497847921},{"_id":"themes/yelee/source/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1703497847921},{"_id":"themes/yelee/source/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1703497847921},{"_id":"themes/yelee/source/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1703497847921},{"_id":"themes/yelee/source/img/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1703497847921},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","hash":"624e81a3b0e57495b0c0e0b3e056296c6e8ae5df","modified":1703497847922},{"_id":"themes/yelee/source/js/main.js","hash":"d58bbc593d94d48e85d4ebfb002910444080cb06","modified":1703497847922},{"_id":"themes/yelee/source/js/mobile.js","hash":"0f4c1fcd6df47a196ed9495c225173402aa7d769","modified":1703497847922},{"_id":"themes/yelee/source/js/pc.js","hash":"19a1660b10358046e7a1f398284491519b2ffd47","modified":1703497847922},{"_id":"themes/yelee/source/js/search.js","hash":"b456aaab98bbc3b0906f8a16d1e6e4f74dfcffda","modified":1703497847922},{"_id":"themes/yelee/layout/_partial/comments/click2show.ejs","hash":"678f3aec2980d378ea44be60eec3eb504c8ba668","modified":1703497847915},{"_id":"themes/yelee/source/js/toc.js","hash":"72ba1228fc1a44df45b8f4b562eba78594f13016","modified":1703497847922},{"_id":"themes/yelee/source/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1703497847922},{"_id":"themes/yelee/layout/_partial/comments/count-comment.ejs","hash":"d3c1b0b31db9d80e857f3054d010ea49c0f88134","modified":1703497847915},{"_id":"themes/yelee/source/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1703497847922},{"_id":"themes/yelee/layout/_partial/comments/disqus.ejs","hash":"b0b73b4629983b4de447418f30bf744cdf7ed044","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/post/category.ejs","hash":"265bb12f7cfa5e0bcbb74fdd409ba13a6d9d2e22","modified":1703497847916},{"_id":"themes/yelee/source/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1703497847921},{"_id":"themes/yelee/layout/_partial/post/nav.ejs","hash":"593cdf0a9eca655c8a763f2d5fb22254d19b1252","modified":1703497847916},{"_id":"themes/yelee/source/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1703497847922},{"_id":"themes/yelee/layout/_partial/post/share.ejs","hash":"60cb646f3bc22c46d6ff4b95bb36dad577ed76c0","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post/date.ejs","hash":"357a8de8a7ed8194efc16f55f97f7e2551b31bf9","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/comments/youyan.ejs","hash":"bcf2070587645afd20a4eb046b9c8bb9c44d1cf5","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/post/tag.ejs","hash":"9dad471e27de9e066666f3082137eccaede2e67b","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/comments/duoshuo.ejs","hash":"15c269b81046b22ee44d38d9a08fc66618318435","modified":1703497847915},{"_id":"themes/yelee/source/css/_partial/article.styl","hash":"45d36a307c22a754ed87f3ae6441ba8616f7329c","modified":1703497847918},{"_id":"themes/yelee/source/css/_partial/archive.styl","hash":"416786f566582fe697a12bb03a9eb2d1c604e2c7","modified":1703497847918},{"_id":"themes/yelee/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1703497847916},{"_id":"themes/yelee/source/css/_partial/footer.styl","hash":"384f9a9c017400b12f52ac33759380075e527998","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/main.styl","hash":"d82129844528ae1a5c9547bc6d3f5bd37b0fb801","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/highlight.styl","hash":"4dcf5d3e3435897de91b39473a93fb7c3ad73dde","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/mobile-slider.styl","hash":"034eb9605e006a0d0098bd963e9cdc11a1eaf6c3","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/instagram.styl","hash":"db9cc156c7df27f7f54b0e7ff34b5949f55f99eb","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/mobile.styl","hash":"4681032f51fd0df6451051ba35efa1f9f745c302","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/page.styl","hash":"d05287b44c64576b8560461bc6c3b7e8ceda5539","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/scroll.styl","hash":"1932774d30b8706919342f9cf36ea2d99987ce14","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/search.styl","hash":"fcaa5deaa654aaec69e267e23b49df07f84f633a","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/share.styl","hash":"24ff28457b5e1519a8b4561284f6159bdd827ad4","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/tagcloud.styl","hash":"9d7847cc899970a19d288c9eec9f24691c053ef3","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/toc.styl","hash":"eb19bbd37fc2c1abd238e2ed96b22cb1aae41ab7","modified":1703497847920},{"_id":"themes/yelee/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1703497847920},{"_id":"themes/yelee/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/customise/blockquote.styl","hash":"9b96dd1c51b43a1130b3bb6eedb293b77eef8b1d","modified":1703497847918},{"_id":"themes/yelee/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/color-scheme.styl","hash":"816044b7680514626981e945ee6be943a5de60a7","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/inline-code.styl","hash":"2014a25ec300910b8a093ec8010f6703a2142021","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/heading.styl","hash":"f309241c1daa9b6c04aa04063307537c219fdd59","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/code-block.styl","hash":"ebf7ca8598d93235479460ea7d1be97d44224b05","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/list.styl","hash":"b1e564ed76d6e892556b61b4278270fc9eeea961","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/social-icon.styl","hash":"365026a5a30bcc88bec1b46c391c7d3bce41f033","modified":1703497847919},{"_id":"source/images/avatar.jpg","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1703497847879},{"_id":"source/images/avatar.png","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1703497847881},{"_id":"public/content.json","hash":"095ae265b4e6a4942218e458d40d380e1c08baad","modified":1736438037707},{"_id":"public/search.xml","hash":"25b7a75b0fa89cb1aa02f1c8e35156b8f3279f34","modified":1736438037707},{"_id":"public/tags/index.html","hash":"f13e34c0790230d551e246a551349cdfe7e8cf63","modified":1736092437636},{"_id":"public/hiden/东方之门.html","hash":"cb0e4f8718fd713be0db9f4e7f02b738cd84826a","modified":1736092437636},{"_id":"public/hiden/人生逆旅.html","hash":"2c2d8f0cd28b42d0670e457933172b670532b1bc","modified":1736092437636},{"_id":"public/hiden/亲人，愿望，时光，记忆.html","hash":"e60fcc7111a602bf9a37b6d9962f70a3589996ee","modified":1736092437636},{"_id":"public/hiden/你好，2017——再见，2017.html","hash":"85bc6afe56c32583ab5b7cbc58ec018ad3c2a569","modified":1736092437636},{"_id":"public/hiden/在盐城.html","hash":"9b6b077a591b36ad8332ac9915ff11f95bd8fc67","modified":1736092437636},{"_id":"public/hiden/我是一个什么样的人.html","hash":"b2dfbee2b9c86c860aaec29d46d0600dec4d0aeb","modified":1736092437636},{"_id":"public/hiden/测试方案的设计思路.html","hash":"342fedbe24ab52ce846785cfcf1a3f6d143ae754","modified":1736092437636},{"_id":"public/hiden/看见时光.html","hash":"142267098c6411dbffb569a5c80134b79f12137f","modified":1736092437636},{"_id":"public/hiden/夜色褪红妆.html","hash":"ef116cf4c7d1631020717dfe38afa5793a627f62","modified":1736092437636},{"_id":"public/2025/01/01/16_读书笔记收集/index.html","hash":"96c231361645547031185c61389f2a344bd4a524","modified":1736438037707},{"_id":"public/2025/01/01/18_公众号实现发布文章/index.html","hash":"7cb8c654d09a8c0d6919d75c59804685c66abb5b","modified":1736438037707},{"_id":"public/2025/01/01/17_工具类项目需求文档/index.html","hash":"f07e90d1228d67f4a3b94cca7e0c2c3891e84e4f","modified":1736438037707},{"_id":"public/2023/01/01/15_开发相关内容记录/index.html","hash":"444afa61f1f14fbf934b6a79110eee2748da3b22","modified":1736438037707},{"_id":"public/2020/10/08/13_sublimetext插件安装/index.html","hash":"17c0bbe182e04b2bea88cd6bef82efe71d083449","modified":1736438037707},{"_id":"public/2020/08/31/12_测试方案的设计思路/index.html","hash":"5d4ac992a1bb474ec5c141e8e7eb73813bbdfa75","modified":1736438037707},{"_id":"public/2019/07/07/14_测试工作的一些总结/index.html","hash":"5c7151b20d108e16899b11fa3d65af5cc57f6229","modified":1736438037707},{"_id":"public/2019/05/26/11_让你的Hexo支持mermaid/index.html","hash":"2b55303ec75c1ec3e0f837dbb63c95c4e9261f15","modified":1736438037707},{"_id":"public/2019/04/01/10_安卓客户端取日志脚本/index.html","hash":"13ee2c95f3e05a4ee130e78cab56b3312c2a78d6","modified":1736438037707},{"_id":"public/2018/07/01/09_ADB常用命令/index.html","hash":"06181749d118456b2c2672417c9e4525a609fefe","modified":1736438037707},{"_id":"public/2018/03/05/08_使用selenium-wget实现自动下载图片/index.html","hash":"4a47656b82646f735af831178dd39980f4f8a20a","modified":1736438037707},{"_id":"public/2018/02/21/07_Markdown的使用/index.html","hash":"e3d4f370a03443fba02a302ee9856eafd30fc23c","modified":1736438037707},{"_id":"public/2017/12/27/06_百日囚徒问题/index.html","hash":"4e1e1f2e00d71b592426d8317362d14f4cfa06c3","modified":1736438037707},{"_id":"public/2017/03/29/04_GBK和UTF-8的区别/index.html","hash":"0c2f9a00e7899e56e702e010cc23e9f3d70c1fcf","modified":1736438037707},{"_id":"public/2017/05/20/05_基于android实现一个简单的备忘录app/index.html","hash":"4fe0569c128b8a15257b454f819f3952bf77177d","modified":1736438037707},{"_id":"public/2017/03/26/03_冒泡排序算法/index.html","hash":"f274c24640bebb86a7d169df4512a9b9cf63b2b5","modified":1736438037707},{"_id":"public/2017/01/14/02_git常用命令/index.html","hash":"c1b753ecc6dc14ed56d8d69b238f89a18d37227e","modified":1736438037707},{"_id":"public/2017/01/09/01_如何搭建个人博客/index.html","hash":"9c4593b3b9741f6208a0ec4d5438e0b3092c94ec","modified":1736438037707},{"_id":"public/archives/page/2/index.html","hash":"9464e4ec6503234d4bdfe2b67a970dc4d40ade80","modified":1736438037707},{"_id":"public/archives/index.html","hash":"2bf2cd2b12f2dc1759d769e690b816bc84012634","modified":1736438037707},{"_id":"public/archives/2017/01/index.html","hash":"6e1fe8cf9457c3ea82b4a5c9d3e9a9f6d1f3e2ec","modified":1736092437636},{"_id":"public/archives/2017/index.html","hash":"4bed54becb30a96657d1e939afcf4a201d2886b5","modified":1736092437636},{"_id":"public/archives/2017/03/index.html","hash":"94663b810aafa390e297abd4cf4cc2a8fe13d453","modified":1736092437636},{"_id":"public/archives/2017/05/index.html","hash":"72f3b4923853edfa3507a49e83d2c06309ff221e","modified":1736092437636},{"_id":"public/archives/2017/12/index.html","hash":"3c03401fd48a2dcf97ea097a6d948c35a1ee554d","modified":1736092437636},{"_id":"public/archives/2018/02/index.html","hash":"d09622087a78452f7c6f44833e2fe8a2901c45b0","modified":1736092437636},{"_id":"public/archives/2018/index.html","hash":"3fbb1f534391eef62df3d84dbee50e6babb77a7d","modified":1736092437636},{"_id":"public/archives/2018/03/index.html","hash":"894de6501963aa29c1263554a700b2547218d2d7","modified":1736092437636},{"_id":"public/archives/2018/07/index.html","hash":"8b82ccb4be1ab3cb184516491b309eda395164e0","modified":1736092437636},{"_id":"public/archives/2019/index.html","hash":"c4429b3f444d990c49e54614ad5918a7e56d3ef1","modified":1736092437636},{"_id":"public/archives/2019/04/index.html","hash":"1a651bf18a9f8e391f04afe86df53ec208954b0f","modified":1736092437636},{"_id":"public/archives/2019/05/index.html","hash":"cce5da5a386f33ad73957737b42370d9217b1272","modified":1736092437636},{"_id":"public/archives/2019/07/index.html","hash":"7aceac839473c474b15264348b188e1e49896a7b","modified":1736092437636},{"_id":"public/archives/2020/index.html","hash":"48e7d91067964c407d688d9ab997da08808010db","modified":1736092437636},{"_id":"public/archives/2020/08/index.html","hash":"9795e4aeb1da1ff1660c8133e378342605f37b2a","modified":1736092437636},{"_id":"public/archives/2023/index.html","hash":"b1144fc3c025d1078fbd9a1a28913d9bb2318db6","modified":1736092437636},{"_id":"public/archives/2023/01/index.html","hash":"6b397d4a49b38522aa8205b62ac5129f0fd69a4d","modified":1736092437636},{"_id":"public/archives/2020/10/index.html","hash":"57caa71ace5b8f9891891c789858a51b8c7e9959","modified":1736092437636},{"_id":"public/archives/2025/index.html","hash":"81086e99cb0daf0c3d9a283b9bb320e6aa3c80af","modified":1736438037707},{"_id":"public/archives/2025/01/index.html","hash":"c6d77fc2db2185569ca6b017ab41362d67d3d979","modified":1736438037707},{"_id":"public/index.html","hash":"145116082e9aea160fbc8c193e4af0bc8e4ba1e6","modified":1736438037707},{"_id":"public/page/2/index.html","hash":"44631ded769d101b01bfade81db3e0b6dcf026e2","modified":1736438037707},{"_id":"public/tags/hexo/index.html","hash":"a02d527b57b3f188b999e4a415adfad636c0b678","modified":1736092437636},{"_id":"public/tags/git/index.html","hash":"17e1815d5307e807ac9c7ded118e50f18b88369a","modified":1736092437636},{"_id":"public/tags/算法/index.html","hash":"31013bf34829feb671e2fef43aef87a93f66eeb3","modified":1736092437636},{"_id":"public/tags/java/index.html","hash":"38f92f6819cb2779a174f2b0e30ebe17c9497b8e","modified":1736092437636},{"_id":"public/tags/android/index.html","hash":"630dc846a002b489e51720e461f526c11031b91e","modified":1736092437636},{"_id":"public/tags/markdown/index.html","hash":"bca4afa3c5f74f7bc48fa75f9df60995aa8d9fee","modified":1736092437636},{"_id":"public/tags/python/index.html","hash":"85b4d5832f98929cb731079507c659b8287b4599","modified":1736092437636},{"_id":"public/tags/ADB/index.html","hash":"ff214180a81890c5f60eb372c4a7645289e1a5fc","modified":1736092437636},{"_id":"public/tags/bat/index.html","hash":"3702428feaf3a08c1c340dc159f1f6d4f3e0cb75","modified":1736092437636},{"_id":"public/tags/总结/index.html","hash":"6c0c1bc7513170b0b1a6913432571a3ba06412e6","modified":1736092437636},{"_id":"public/tags/总结-android/index.html","hash":"f7f73ea6b698c9f1b8e90b75b8c95f01b2ca99d9","modified":1736092437636},{"_id":"public/tags/工具/index.html","hash":"6bd3f00abbb39d2aaad7fc1660fb32758a4400c7","modified":1736092437636},{"_id":"public/tags/微信公众号/index.html","hash":"0239a38ff24b57ec95b8be6b70f36dbfc9872fcf","modified":1736092437636},{"_id":"public/tags/GitHub/index.html","hash":"c2f3d14b2d35136a8f7fb71828a8d1682d5e466e","modified":1736092437636},{"_id":"public/tags/Python/index.html","hash":"87617204880cf3fc54e27e2cdac49c8edbfaedcf","modified":1736092437636},{"_id":"public/categories/技术/index.html","hash":"5e1e1ab5acca399938ecc66d5b377dea72f949ea","modified":1736092437636},{"_id":"public/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1736090090671},{"_id":"public/background/bg-2.jpg","hash":"3bc593c1f7d329dfa5a481aa56a04acff5074410","modified":1736090090671},{"_id":"public/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1736090090671},{"_id":"public/background/bg-4.jpg","hash":"d450f587ce2bcd761eff18ae463155cd2d2536e5","modified":1736090090671},{"_id":"public/background/bg-1.jpg","hash":"a0e916a1d6d42e9de467f590273bf48eab2cbff4","modified":1736090090671},{"_id":"public/background/bg-5.jpg","hash":"2a74546e53f71d00d398a47978ed033a46071349","modified":1736090090671},{"_id":"public/background/bg-3.jpg","hash":"dd681609670a00fc3a6f5556f8018f274455b190","modified":1736090090671},{"_id":"public/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1736090090671},{"_id":"public/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1736090090671},{"_id":"public/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1736090090671},{"_id":"public/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1736090090671},{"_id":"public/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1736090090671},{"_id":"public/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1736090090671},{"_id":"public/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1736090090671},{"_id":"public/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1736090090671},{"_id":"public/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1736090090671},{"_id":"public/img/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1736090090671},{"_id":"public/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1736090090671},{"_id":"public/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1736090090671},{"_id":"public/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1736090090671},{"_id":"public/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1736090090671},{"_id":"public/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1736090090671},{"_id":"public/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1736090090671},{"_id":"public/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1736090090671},{"_id":"public/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1736090090671},{"_id":"public/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1736090090671},{"_id":"public/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1736090090671},{"_id":"public/images/lofter.png","hash":"90e8b1967b57f27c009fd0aebf00ae18715c7f76","modified":1736090090671},{"_id":"public/CV/resume/resume.md","hash":"9c8584285b0d5be085876e1ad1126550eef9e293","modified":1736090090671},{"_id":"public/CV/resume/90k.jpg","hash":"8437b4cb4029bf1294d6d2fa037176b08ce03fe4","modified":1736090090671},{"_id":"public/css/style.css","hash":"99d1df638eb693202e1181ad009d837ad6cc6bb1","modified":1736090090671},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1736090090671},{"_id":"public/js/GithubRepoWidget.js","hash":"624e81a3b0e57495b0c0e0b3e056296c6e8ae5df","modified":1736090090671},{"_id":"public/js/mobile.js","hash":"0f4c1fcd6df47a196ed9495c225173402aa7d769","modified":1736090090671},{"_id":"public/js/search.js","hash":"b456aaab98bbc3b0906f8a16d1e6e4f74dfcffda","modified":1736090090671},{"_id":"public/js/pc.js","hash":"19a1660b10358046e7a1f398284491519b2ffd47","modified":1736090090671},{"_id":"public/js/main.js","hash":"d58bbc593d94d48e85d4ebfb002910444080cb06","modified":1736090090671},{"_id":"public/js/toc.js","hash":"72ba1228fc1a44df45b8f4b562eba78594f13016","modified":1736090090671},{"_id":"public/CV/resume/resume.html","hash":"fea089eceb905dcd1732451dfc3c08810f930f52","modified":1736090090671},{"_id":"public/images/avatar.jpg","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1736090090671},{"_id":"public/images/avatar.png","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1736090090671},{"_id":"source/_posts/19_自动化如何设计和维护才能不成为每日工作的一部分.md","hash":"47b2b5aba6d85125133774f8085d39b02a4720d7","modified":1736091028822},{"_id":"source/_posts/20_乒乓球实战技术指南.md","hash":"9a982ccdaedc2be09281c606f20183799cb435e4","modified":1738060775537},{"_id":"source/_posts/21_闲聊记录.md","hash":"0167bb6cd2a4faff6d0bb959e35aba1b4794da25","modified":1738059895194},{"_id":"public/2025/01/05/21_闲聊记录/index.html","hash":"116a4b825fa5c124ba8258587e3bb7fe7d9a41e9","modified":1736438037707},{"_id":"public/2025/01/05/20_乒乓球实战技术指南/index.html","hash":"8260b368fe27cb7c0ee6f9edff173f45721c1f9c","modified":1736349455907},{"_id":"public/archives/page/3/index.html","hash":"920eaf05dda5b6550a4fbde327bf9f62102c7c47","modified":1736438037707},{"_id":"public/page/3/index.html","hash":"48e4658244ac16f462f94c95b6438375a70c5619","modified":1736438037707},{"_id":"public/2024/03/21/19_自动化如何设计和维护才能不成为每日工作的一部分/index.html","hash":"5f628733e508ad62d8a12036446a998c93323e12","modified":1736438037707},{"_id":"public/archives/2024/03/index.html","hash":"48d99896b6ce5758634564020f2480e52ea993e6","modified":1736092437636},{"_id":"public/categories/技术思考/index.html","hash":"4375955e17186cd4b5517ba11e76a3a3a0ec4d65","modified":1736092437636},{"_id":"public/archives/2024/index.html","hash":"d93b335a10abae27687795bdbebe19a83aa07b64","modified":1736092437636},{"_id":"public/tags/效率提升/index.html","hash":"009fdccff51c6aa97e0a70a69084f39c6b5c7cf5","modified":1736092437636},{"_id":"public/tags/自动化/index.html","hash":"aafcd279b9df23ae0b7f6268776cae0ee28717c9","modified":1736092437636},{"_id":"public/tags/系统设计/index.html","hash":"3f2dbad8f0c843849402f84194a18ea5cf9d515c","modified":1736092437636},{"_id":"public/2025/01/08/20_乒乓球实战技术指南/index.html","hash":"47121a75a72c0bbbef355a89e526d7f201bd4967","modified":1736438037707},{"_id":"source/_posts/22_测试用例准备指南.md","hash":"00088961249da7209c1fa7013306387edf21f751","modified":1738059869070},{"_id":"public/2025/01/09/22_测试用例准备指南/index.html","hash":"d39109f970ccac041c24db9abf019f99d6b92c36","modified":1736438037707},{"_id":"source/_posts/23_调用github_api的后台实现.md","hash":"703a85588f5dd7d8c434332ea419b58787cb74e7","modified":1738059878413},{"_id":"source/_posts/24_球赛小程序需求文档.md","hash":"02dcb73ec9ed7d406828dd26c044dce9fff3e4b5","modified":1738425975174},{"_id":"source/_posts/27_前后端交互流程说明.md","hash":"66dae3b2d1bf674b051904bb1e73a84f3a031297","modified":1738487313709},{"_id":"source/_posts/26_球赛小程序权限控制方案.md","hash":"30cfe4e61516e8609e6904b9dc5b3b045b7f9b92","modified":1738425912931},{"_id":"source/_posts/25_若依框架学习计划.md","hash":"9663336892fed8cc80d8e0a459006b53e301a192","modified":1738061485654},{"_id":"source/_posts/32_报名候补功能说明.md","hash":"8dae64c7946fb62575d63fb403416d085b4f0e31","modified":1738680907857},{"_id":"source/_posts/33_API路径问题排查.md","hash":"d7661496ae4c125512b4c7d5fdefb130ccd71d29","modified":1738680907871},{"_id":"source/_posts/30_赛事模型关系说明.md","hash":"97306ef742a2a7938ea296e1082efbfe21e2386d","modified":1738680907822},{"_id":"source/_posts/37_积分系统实现总结.md","hash":"00447584b059b1919592c26ce5a42fd144491921","modified":1739070745669},{"_id":"source/_posts/28_用户模型说明.md","hash":"60dac3831aa0dce5d59d3411345c7a8adf0972a1","modified":1738488963025},{"_id":"source/_posts/36_积分系统设计说明.md","hash":"f3aa75ba3ffd1fe8e30a0de6482a66d9bb5376d1","modified":1739037976801},{"_id":"source/_posts/31_数据库设计说明.md","hash":"f1151b30bb97309385aad1311473d9ff51f8bcef","modified":1738680907839},{"_id":"source/_posts/35_用户权限模型说明.md","hash":"2b583cbbf3cf319be706c1aa3d582712c4501246","modified":1738680907920},{"_id":"source/_posts/34_403权限问题排查.md","hash":"031655d1f5938b4f82fe692996a2ad58d3996a08","modified":1738680907888}],"Category":[{"name":"技术","_id":"cm5jr7rep001mfd2z94ch2dol"},{"name":"技术思考","_id":"cm5jrn2o80001i02z1157fnqa"}],"Data":[],"Page":[{"title":"tags","date":"2017-03-01T11:46:44.000Z","type":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-03-01 19:46:44\ntype: \n---\n","updated":"2023-12-25T09:50:47.881Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm5jr7rec0000fd2z7znw1djc","content":"<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":""},{"title":"东方之门","date":"2017-01-13T15:03:25.000Z","tags":"摄影","_content":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n\n<img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\">\n","source":"hiden/东方之门.md","raw":"---\ntitle: 东方之门\ndate: 2017-01-13 23:03:25\ntags: 摄影\n---\n<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n\n<img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\">\n","updated":"2023-12-25T09:50:47.877Z","path":"hiden/东方之门.html","comments":1,"layout":"page","_id":"cm5jr7ref0002fd2z3h70daar","content":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n<p><img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\"></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n<p><img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\"></p>\n"},{"title":"亲人，愿望，时光，记忆","date":"2017-02-27T14:22:44.000Z","tags":"随笔","_content":"每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。\n\n我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。\n\n四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。\n\n若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。\n","source":"hiden/亲人，愿望，时光，记忆.md","raw":"---\ntitle: 亲人，愿望，时光，记忆\ndate: 2017-02-27 22:22:44\ntags: 随笔\n---\n每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。\n\n我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。\n\n四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。\n\n若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。\n","updated":"2023-12-25T09:50:47.877Z","path":"hiden/亲人，愿望，时光，记忆.html","comments":1,"layout":"page","_id":"cm5jr7reg0005fd2zdrj0g8oj","content":"<p>每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。</p>\n<p>我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。</p>\n<p>四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。</p>\n<p>若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<p>每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。</p>\n<p>我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。</p>\n<p>四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。</p>\n<p>若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。</p>\n"},{"title":"人生逆旅","date":"2017-01-13T15:21:41.000Z","tags":"摄影","_content":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n\n<img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\">","source":"hiden/人生逆旅.md","raw":"---\ntitle: 人生逆旅\ndate: 2017-01-13 23:21:41\ntags: 摄影\n---\n<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n\n<img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\">","updated":"2023-12-25T09:50:47.877Z","path":"hiden/人生逆旅.html","comments":1,"layout":"page","_id":"cm5jr7reh0007fd2zbt0s4xgg","content":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n<p><img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\"></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n<p><img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\"></p>\n"},{"title":"你好，2017 —— 再见，2017","<!-- date":"2017-01-10 19:04:41 -->","date":"2017-12-30T16:00:00.000Z","tags":"随笔","_content":"你好，2017\n\n大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。\n\n坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿\n\n<!--more-->\n我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿\n\n“有的人忙着死，有的人忙着活。”﻿﻿\n\n丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿\n\n新的一年里希望自己能高效地完成每一步规划。﻿﻿\n\n----\n\n#### 1月18日\t南邮三牌楼\n\n一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。\n\n#### 2月1日\t益林三里\n\n二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。\n\n#### 2月8日\t盐城医院\n\n在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。\n\n#### 3月10日\t入职培训\n\n接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。\n\n#### 3月11日\t南京老门东\n\n许久不见的朋友来玩\n\n#### 5月10日\t南邮毕设\n\n还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。\n\n#### 6月22日\t毕业\n\n除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。\n\n#### 789月\t试用、测试、webtest、devicetest\n到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。\n\n#### 10月\t转正\n\n转正可以领全份的工资，虽然还是月欠。。。\n\n转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。\n\n#### 11月5日\t上海\n\n带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。\n\n#### 11月11日\t益林三里\n\n外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。\n\n\n#### 12月\t江宁\n\n女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？\n\n\n这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。\n\n只有拼尽全力，才能毫不费力。这句话送给明年的自己。\n\n再见，2017\n\n","source":"hiden/你好，2017——再见，2017.md","raw":"---\ntitle: 你好，2017 —— 再见，2017\n<!-- date: 2017-01-10 19:04:41 -->\ndate: 2017-12-31 00:00:00\ntags: 随笔\n---\n你好，2017\n\n大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。\n\n坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿\n\n<!--more-->\n我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿\n\n“有的人忙着死，有的人忙着活。”﻿﻿\n\n丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿\n\n新的一年里希望自己能高效地完成每一步规划。﻿﻿\n\n----\n\n#### 1月18日\t南邮三牌楼\n\n一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。\n\n#### 2月1日\t益林三里\n\n二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。\n\n#### 2月8日\t盐城医院\n\n在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。\n\n#### 3月10日\t入职培训\n\n接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。\n\n#### 3月11日\t南京老门东\n\n许久不见的朋友来玩\n\n#### 5月10日\t南邮毕设\n\n还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。\n\n#### 6月22日\t毕业\n\n除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。\n\n#### 789月\t试用、测试、webtest、devicetest\n到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。\n\n#### 10月\t转正\n\n转正可以领全份的工资，虽然还是月欠。。。\n\n转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。\n\n#### 11月5日\t上海\n\n带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。\n\n#### 11月11日\t益林三里\n\n外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。\n\n\n#### 12月\t江宁\n\n女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？\n\n\n这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。\n\n只有拼尽全力，才能毫不费力。这句话送给明年的自己。\n\n再见，2017\n\n","updated":"2023-12-25T09:50:47.877Z","path":"hiden/你好，2017——再见，2017.html","comments":1,"layout":"page","_id":"cm5jr7reh0009fd2z8rto0e1m","content":"<p>你好，2017</p>\n<p>大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。</p>\n<p>坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿</p>\n<span id=\"more\"></span>\n<p>我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿</p>\n<p>“有的人忙着死，有的人忙着活。”﻿﻿</p>\n<p>丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿</p>\n<p>新的一年里希望自己能高效地完成每一步规划。﻿﻿</p>\n<hr>\n<h4 id=\"1月18日-南邮三牌楼\"><a href=\"#1月18日-南邮三牌楼\" class=\"headerlink\" title=\"1月18日    南邮三牌楼\"></a>1月18日    南邮三牌楼</h4><p>一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。</p>\n<h4 id=\"2月1日-益林三里\"><a href=\"#2月1日-益林三里\" class=\"headerlink\" title=\"2月1日    益林三里\"></a>2月1日    益林三里</h4><p>二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。</p>\n<h4 id=\"2月8日-盐城医院\"><a href=\"#2月8日-盐城医院\" class=\"headerlink\" title=\"2月8日    盐城医院\"></a>2月8日    盐城医院</h4><p>在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。</p>\n<h4 id=\"3月10日-入职培训\"><a href=\"#3月10日-入职培训\" class=\"headerlink\" title=\"3月10日    入职培训\"></a>3月10日    入职培训</h4><p>接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。</p>\n<h4 id=\"3月11日-南京老门东\"><a href=\"#3月11日-南京老门东\" class=\"headerlink\" title=\"3月11日    南京老门东\"></a>3月11日    南京老门东</h4><p>许久不见的朋友来玩</p>\n<h4 id=\"5月10日-南邮毕设\"><a href=\"#5月10日-南邮毕设\" class=\"headerlink\" title=\"5月10日    南邮毕设\"></a>5月10日    南邮毕设</h4><p>还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。</p>\n<h4 id=\"6月22日-毕业\"><a href=\"#6月22日-毕业\" class=\"headerlink\" title=\"6月22日    毕业\"></a>6月22日    毕业</h4><p>除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。</p>\n<h4 id=\"789月-试用、测试、webtest、devicetest\"><a href=\"#789月-试用、测试、webtest、devicetest\" class=\"headerlink\" title=\"789月    试用、测试、webtest、devicetest\"></a>789月    试用、测试、webtest、devicetest</h4><p>到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。</p>\n<h4 id=\"10月-转正\"><a href=\"#10月-转正\" class=\"headerlink\" title=\"10月    转正\"></a>10月    转正</h4><p>转正可以领全份的工资，虽然还是月欠。。。</p>\n<p>转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。</p>\n<h4 id=\"11月5日-上海\"><a href=\"#11月5日-上海\" class=\"headerlink\" title=\"11月5日    上海\"></a>11月5日    上海</h4><p>带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。</p>\n<h4 id=\"11月11日-益林三里\"><a href=\"#11月11日-益林三里\" class=\"headerlink\" title=\"11月11日    益林三里\"></a>11月11日    益林三里</h4><p>外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。</p>\n<h4 id=\"12月-江宁\"><a href=\"#12月-江宁\" class=\"headerlink\" title=\"12月    江宁\"></a>12月    江宁</h4><p>女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？</p>\n<p>这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。</p>\n<p>只有拼尽全力，才能毫不费力。这句话送给明年的自己。</p>\n<p>再见，2017</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>你好，2017</p>\n<p>大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。</p>\n<p>坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿</p>","more":"<p>我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿</p>\n<p>“有的人忙着死，有的人忙着活。”﻿﻿</p>\n<p>丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿</p>\n<p>新的一年里希望自己能高效地完成每一步规划。﻿﻿</p>\n<hr>\n<h4 id=\"1月18日-南邮三牌楼\"><a href=\"#1月18日-南邮三牌楼\" class=\"headerlink\" title=\"1月18日    南邮三牌楼\"></a>1月18日    南邮三牌楼</h4><p>一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。</p>\n<h4 id=\"2月1日-益林三里\"><a href=\"#2月1日-益林三里\" class=\"headerlink\" title=\"2月1日    益林三里\"></a>2月1日    益林三里</h4><p>二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。</p>\n<h4 id=\"2月8日-盐城医院\"><a href=\"#2月8日-盐城医院\" class=\"headerlink\" title=\"2月8日    盐城医院\"></a>2月8日    盐城医院</h4><p>在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。</p>\n<h4 id=\"3月10日-入职培训\"><a href=\"#3月10日-入职培训\" class=\"headerlink\" title=\"3月10日    入职培训\"></a>3月10日    入职培训</h4><p>接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。</p>\n<h4 id=\"3月11日-南京老门东\"><a href=\"#3月11日-南京老门东\" class=\"headerlink\" title=\"3月11日    南京老门东\"></a>3月11日    南京老门东</h4><p>许久不见的朋友来玩</p>\n<h4 id=\"5月10日-南邮毕设\"><a href=\"#5月10日-南邮毕设\" class=\"headerlink\" title=\"5月10日    南邮毕设\"></a>5月10日    南邮毕设</h4><p>还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。</p>\n<h4 id=\"6月22日-毕业\"><a href=\"#6月22日-毕业\" class=\"headerlink\" title=\"6月22日    毕业\"></a>6月22日    毕业</h4><p>除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。</p>\n<h4 id=\"789月-试用、测试、webtest、devicetest\"><a href=\"#789月-试用、测试、webtest、devicetest\" class=\"headerlink\" title=\"789月    试用、测试、webtest、devicetest\"></a>789月    试用、测试、webtest、devicetest</h4><p>到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。</p>\n<h4 id=\"10月-转正\"><a href=\"#10月-转正\" class=\"headerlink\" title=\"10月    转正\"></a>10月    转正</h4><p>转正可以领全份的工资，虽然还是月欠。。。</p>\n<p>转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。</p>\n<h4 id=\"11月5日-上海\"><a href=\"#11月5日-上海\" class=\"headerlink\" title=\"11月5日    上海\"></a>11月5日    上海</h4><p>带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。</p>\n<h4 id=\"11月11日-益林三里\"><a href=\"#11月11日-益林三里\" class=\"headerlink\" title=\"11月11日    益林三里\"></a>11月11日    益林三里</h4><p>外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。</p>\n<h4 id=\"12月-江宁\"><a href=\"#12月-江宁\" class=\"headerlink\" title=\"12月    江宁\"></a>12月    江宁</h4><p>女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？</p>\n<p>这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。</p>\n<p>只有拼尽全力，才能毫不费力。这句话送给明年的自己。</p>\n<p>再见，2017</p>"},{"title":"在盐城","date":"2017-01-13T15:19:27.000Z","tags":"摄影","_content":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n\n<img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\">","source":"hiden/在盐城.md","raw":"---\ntitle: 在盐城\ndate: 2017-01-13 23:19:27\ntags: 摄影\n---\n<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n\n<img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\">","updated":"2023-12-25T09:50:47.877Z","path":"hiden/在盐城.html","comments":1,"layout":"page","_id":"cm5jr7rei000dfd2zbsip1soh","content":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n<p><img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\"></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n<p><img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\"></p>\n"},{"noDate":true,"top":null,"title":"我是一个什么样的人","date":"2017-01-08T16:00:00.000Z","tags":"随笔","_content":"我是一个什么样的人，我还能变成一个什么样的人？\n这将是一个伴随我10年的问题。\n\n<!--more-->\n\n刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。\n\n大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。\n\n大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。\n\n......","source":"hiden/我是一个什么样的人.md","raw":"---\nnoDate: true\ntop: \ntitle: 我是一个什么样的人\ndate: 2017-01-09 00:00:00\ntags: 随笔\n---\n我是一个什么样的人，我还能变成一个什么样的人？\n这将是一个伴随我10年的问题。\n\n<!--more-->\n\n刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。\n\n大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。\n\n大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。\n\n......","updated":"2023-12-25T09:50:47.878Z","path":"hiden/我是一个什么样的人.html","comments":1,"layout":"page","_id":"cm5jr7rei000ffd2z10ks2iyu","content":"<p>我是一个什么样的人，我还能变成一个什么样的人？<br>这将是一个伴随我10年的问题。</p>\n<span id=\"more\"></span>\n<p>刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。</p>\n<p>大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。</p>\n<p>大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。</p>\n<p>……</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>我是一个什么样的人，我还能变成一个什么样的人？<br>这将是一个伴随我10年的问题。</p>","more":"<p>刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。</p>\n<p>大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。</p>\n<p>大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。</p>\n<p>……</p>"},{"title":"测试方案的设计思路","date":"2020-08-31T12:32:18.000Z","tags":"总结","_content":"\n#### 测试方案的设计思路\n<!--more-->\n\n{% pullquote mindmap mindmap-md %}\n- 影响因子\n\t- 空间状态\n\t- 账号状态\n\t- 网络状态\n\t- 业务状态\n\t- 服务器状态\n\t- 用户操作\n\n{% endpullquote %}","source":"hiden/测试方案的设计思路.md","raw":"---\ntitle: 测试方案的设计思路\ndate: 2020-08-31 20:32:18\ntags: 总结\n---\n\n#### 测试方案的设计思路\n<!--more-->\n\n{% pullquote mindmap mindmap-md %}\n- 影响因子\n\t- 空间状态\n\t- 账号状态\n\t- 网络状态\n\t- 业务状态\n\t- 服务器状态\n\t- 用户操作\n\n{% endpullquote %}","updated":"2023-12-25T09:50:47.878Z","path":"hiden/测试方案的设计思路.html","comments":1,"layout":"page","_id":"cm5jr7rej000ifd2z89yue3h9","content":"<h4 id=\"测试方案的设计思路\"><a href=\"#测试方案的设计思路\" class=\"headerlink\" title=\"测试方案的设计思路\"></a>测试方案的设计思路</h4><span id=\"more\"></span>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>影响因子<ul>\n<li>空间状态</li>\n<li>账号状态</li>\n<li>网络状态</li>\n<li>业务状态</li>\n<li>服务器状态</li>\n<li>用户操作</li>\n</ul>\n</li>\n</ul>\n</blockquote><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"测试方案的设计思路\"><a href=\"#测试方案的设计思路\" class=\"headerlink\" title=\"测试方案的设计思路\"></a>测试方案的设计思路</h4>","more":"<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>影响因子<ul>\n<li>空间状态</li>\n<li>账号状态</li>\n<li>网络状态</li>\n<li>业务状态</li>\n<li>服务器状态</li>\n<li>用户操作</li>\n</ul>\n</li>\n</ul>\n</blockquote>"},{"title":"夜色褪红妆","date":"2017-01-13T15:25:11.000Z","tags":"摄影","_content":"\n<img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\">\n","source":"hiden/夜色褪红妆.md","raw":"---\ntitle: 夜色褪红妆\ndate: 2017-01-13 23:25:11\ntags: 摄影\n---\n\n<img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\">\n","updated":"2023-12-25T09:50:47.878Z","path":"hiden/夜色褪红妆.html","comments":1,"layout":"page","_id":"cm5jr7rej000lfd2zbx4j9umb","content":"<p><img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\"></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<p><img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\"></p>\n"},{"title":"看见时光","date":"2017-01-13T15:28:39.000Z","tags":"摄影","_content":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n\n<img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\">","source":"hiden/看见时光.md","raw":"---\ntitle: 看见时光\ndate: 2017-01-13 23:28:39\ntags: 摄影\n---\n<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n\n<img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\">","updated":"2023-12-25T09:50:47.878Z","path":"hiden/看见时光.html","comments":1,"layout":"page","_id":"cm5jr7rek000ofd2z01j0fwwz","content":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n<p><img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\"></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n<p><img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\"></p>\n"}],"Post":[{"title":"如何搭建个人博客","date":"2017-01-09T14:27:45.000Z","_content":"\n搭建个人主页的步骤如下：\n- 先将我们写的文章或者照片生成静态页面(hexo)\n- 并将这些静态页面部署到支持静态页面的服务器(github或coding)\n- 这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)\n\n<!--more-->\n\n下面是操作步骤：\n\n#### 准备环境：\n\n- node.js（npm）的安装\n\t\n\t1、hexo 是基于 node.js 来生成页面的\n\t2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令\n\n- hexo 的安装和初始化\n\n\t1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果\n\t2、常用的几条命令如下：\n\t\thexo n p '文章标题'\t//新建文章\n\t\thexo g\t\t\t\t//生成页面\n\t\thexo s\t\t\t\t//本地预览\n\t\thexo d\t\t\t\t//提交页面\n\n\n#### Hexo 常用部署命令详解\n\n1. `hexo g` (hexo generate)\n- 作用：生成静态文件\n- 原理：\n  - 读取 source 目录下的文件（主要是 markdown）\n  - 根据主题模板将内容渲染成 HTML\n  - 生成的静态文件存放在 public 目录\n  - 包含 HTML、CSS、JavaScript 等资源文件\n\n2. `hexo s` (hexo server)\n- 作用：启动本地预览服务器\n- 原理：\n  - 启动一个 Node.js 服务器\n  - 默认监听 4000 端口\n  - 将 public 目录作为网站根目录\n  - 支持实时预览（修改文件后自动更新）\n\n3. `hexo d` (hexo deploy)\n- 作用：部署网站到远程服务器\n- 原理：\n  - 首先将 public 目录下的文件复制到 .deploy_git 目录\n  - 在 .deploy_git 目录初始化 Git 仓库（如果不存在）\n  - 添加远程仓库（通常是 GitHub Pages）\n  - 提交所有文件并推送到远程仓库\n\n4. `hexo s -g`\n- 作用：生成静态文件并启动预览服务器\n- 原理：\n  - 相当于顺序执行 hexo g 和 hexo s\n  - 生成的文件存在内存中，服务器关闭后不保存\n  - 用于本地快速预览效果\n\n5. `hexo g -d`\n- 作用：生成静态文件并立即部署\n- 原理：\n  - 相当于顺序执行 hexo g 和 hexo d\n  - 先生成静态文件到 public 目录\n  - 然后立即部署到远程服务器\n  - 常用于确认内容无误后的发布\t\t\n\n- git 的安装和配置\n\n\t1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器\n\t2、上一条的提交页面命令`hexo d`其实就是通过git将页面提交到配置文件中填写的github仓库的\n\n- github 的注册和配置\n\n\t1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件\n\t2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中\n\n\n具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：[手把手教你用Hexo+Github 搭建属于自己的博客](http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&fps=1)\n\n#### 配置主题\n\n跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme\n\n配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置\n\n#### 提交页面\n\n假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件`_config.yml`中\n\t\n\t# Deployment\n\tdeploy:\n\t  type: git\n\t  repo: \n\t    github: git@github.com:reGeorge/regeorge.github.io.git,master\t//github仓库\n\t    coding: git@git.coding.net:reGeorge/reGeorge.git,master\t\t//coding仓库\n\t  branch: master\n\n这里我配置了两个地址，执行`hexo d`命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）\n\t\n\thttps://regeorge.github.io/\n\thttp://regeorge.coding.me/\n\n\n#### 踩坑记录\n\n1. hexo d 命令不生效\n- 原因是 GitHub 的 workflows 配置不正确\n- 解决方法:\n  - 在项目中创建 deploy.yml 文件\n  - 配置从 master 分支拉取静态网页文件的目录\n  - 发布到 gh-pages 分支以触发 GitHub Pages 的发布\n\n2. themes 目录中自定义 js 方法报错\n- 问题:传入 tags.toArrays() 方法时报错\n- 解决方法:\n  - 只需要在调用前判空处理\n  - 无需使用 toArrays() 方法\n\n\n\n\n\n\n\n\n","source":"_posts/01_如何搭建个人博客.md","raw":"---\ntitle: 如何搭建个人博客\ndate: 2017-01-09 22:27:45\ntags: hexo\n---\n\n搭建个人主页的步骤如下：\n- 先将我们写的文章或者照片生成静态页面(hexo)\n- 并将这些静态页面部署到支持静态页面的服务器(github或coding)\n- 这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)\n\n<!--more-->\n\n下面是操作步骤：\n\n#### 准备环境：\n\n- node.js（npm）的安装\n\t\n\t1、hexo 是基于 node.js 来生成页面的\n\t2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令\n\n- hexo 的安装和初始化\n\n\t1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果\n\t2、常用的几条命令如下：\n\t\thexo n p '文章标题'\t//新建文章\n\t\thexo g\t\t\t\t//生成页面\n\t\thexo s\t\t\t\t//本地预览\n\t\thexo d\t\t\t\t//提交页面\n\n\n#### Hexo 常用部署命令详解\n\n1. `hexo g` (hexo generate)\n- 作用：生成静态文件\n- 原理：\n  - 读取 source 目录下的文件（主要是 markdown）\n  - 根据主题模板将内容渲染成 HTML\n  - 生成的静态文件存放在 public 目录\n  - 包含 HTML、CSS、JavaScript 等资源文件\n\n2. `hexo s` (hexo server)\n- 作用：启动本地预览服务器\n- 原理：\n  - 启动一个 Node.js 服务器\n  - 默认监听 4000 端口\n  - 将 public 目录作为网站根目录\n  - 支持实时预览（修改文件后自动更新）\n\n3. `hexo d` (hexo deploy)\n- 作用：部署网站到远程服务器\n- 原理：\n  - 首先将 public 目录下的文件复制到 .deploy_git 目录\n  - 在 .deploy_git 目录初始化 Git 仓库（如果不存在）\n  - 添加远程仓库（通常是 GitHub Pages）\n  - 提交所有文件并推送到远程仓库\n\n4. `hexo s -g`\n- 作用：生成静态文件并启动预览服务器\n- 原理：\n  - 相当于顺序执行 hexo g 和 hexo s\n  - 生成的文件存在内存中，服务器关闭后不保存\n  - 用于本地快速预览效果\n\n5. `hexo g -d`\n- 作用：生成静态文件并立即部署\n- 原理：\n  - 相当于顺序执行 hexo g 和 hexo d\n  - 先生成静态文件到 public 目录\n  - 然后立即部署到远程服务器\n  - 常用于确认内容无误后的发布\t\t\n\n- git 的安装和配置\n\n\t1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器\n\t2、上一条的提交页面命令`hexo d`其实就是通过git将页面提交到配置文件中填写的github仓库的\n\n- github 的注册和配置\n\n\t1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件\n\t2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中\n\n\n具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：[手把手教你用Hexo+Github 搭建属于自己的博客](http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&fps=1)\n\n#### 配置主题\n\n跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme\n\n配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置\n\n#### 提交页面\n\n假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件`_config.yml`中\n\t\n\t# Deployment\n\tdeploy:\n\t  type: git\n\t  repo: \n\t    github: git@github.com:reGeorge/regeorge.github.io.git,master\t//github仓库\n\t    coding: git@git.coding.net:reGeorge/reGeorge.git,master\t\t//coding仓库\n\t  branch: master\n\n这里我配置了两个地址，执行`hexo d`命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）\n\t\n\thttps://regeorge.github.io/\n\thttp://regeorge.coding.me/\n\n\n#### 踩坑记录\n\n1. hexo d 命令不生效\n- 原因是 GitHub 的 workflows 配置不正确\n- 解决方法:\n  - 在项目中创建 deploy.yml 文件\n  - 配置从 master 分支拉取静态网页文件的目录\n  - 发布到 gh-pages 分支以触发 GitHub Pages 的发布\n\n2. themes 目录中自定义 js 方法报错\n- 问题:传入 tags.toArrays() 方法时报错\n- 解决方法:\n  - 只需要在调用前判空处理\n  - 无需使用 toArrays() 方法\n\n\n\n\n\n\n\n\n","slug":"01_如何搭建个人博客","published":1,"updated":"2025-01-05T14:21:32.017Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7red0001fd2zeetm0u92","content":"<p>搭建个人主页的步骤如下：</p>\n<ul>\n<li>先将我们写的文章或者照片生成静态页面(hexo)</li>\n<li>并将这些静态页面部署到支持静态页面的服务器(github或coding)</li>\n<li>这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)</li>\n</ul>\n<span id=\"more\"></span>\n<p>下面是操作步骤：</p>\n<h4 id=\"准备环境：\"><a href=\"#准备环境：\" class=\"headerlink\" title=\"准备环境：\"></a>准备环境：</h4><ul>\n<li><p>node.js（npm）的安装</p>\n<p>  1、hexo 是基于 node.js 来生成页面的<br>  2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令</p>\n</li>\n<li><p>hexo 的安装和初始化</p>\n<p>  1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果<br>  2、常用的几条命令如下：</p>\n<pre><code>hexo n p &apos;文章标题&apos;    //新建文章\nhexo g                //生成页面\nhexo s                //本地预览\nhexo d                //提交页面\n</code></pre></li>\n</ul>\n<h4 id=\"Hexo-常用部署命令详解\"><a href=\"#Hexo-常用部署命令详解\" class=\"headerlink\" title=\"Hexo 常用部署命令详解\"></a>Hexo 常用部署命令详解</h4><ol>\n<li><code>hexo g</code> (hexo generate)</li>\n</ol>\n<ul>\n<li>作用：生成静态文件</li>\n<li>原理：<ul>\n<li>读取 source 目录下的文件（主要是 markdown）</li>\n<li>根据主题模板将内容渲染成 HTML</li>\n<li>生成的静态文件存放在 public 目录</li>\n<li>包含 HTML、CSS、JavaScript 等资源文件</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li><code>hexo s</code> (hexo server)</li>\n</ol>\n<ul>\n<li>作用：启动本地预览服务器</li>\n<li>原理：<ul>\n<li>启动一个 Node.js 服务器</li>\n<li>默认监听 4000 端口</li>\n<li>将 public 目录作为网站根目录</li>\n<li>支持实时预览（修改文件后自动更新）</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><code>hexo d</code> (hexo deploy)</li>\n</ol>\n<ul>\n<li>作用：部署网站到远程服务器</li>\n<li>原理：<ul>\n<li>首先将 public 目录下的文件复制到 .deploy_git 目录</li>\n<li>在 .deploy_git 目录初始化 Git 仓库（如果不存在）</li>\n<li>添加远程仓库（通常是 GitHub Pages）</li>\n<li>提交所有文件并推送到远程仓库</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li><code>hexo s -g</code></li>\n</ol>\n<ul>\n<li>作用：生成静态文件并启动预览服务器</li>\n<li>原理：<ul>\n<li>相当于顺序执行 hexo g 和 hexo s</li>\n<li>生成的文件存在内存中，服务器关闭后不保存</li>\n<li>用于本地快速预览效果</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li><code>hexo g -d</code></li>\n</ol>\n<ul>\n<li>作用：生成静态文件并立即部署</li>\n<li><p>原理：</p>\n<ul>\n<li>相当于顺序执行 hexo g 和 hexo d</li>\n<li>先生成静态文件到 public 目录</li>\n<li>然后立即部署到远程服务器</li>\n<li>常用于确认内容无误后的发布        </li>\n</ul>\n</li>\n<li><p>git 的安装和配置</p>\n<p>  1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器<br>  2、上一条的提交页面命令<code>hexo d</code>其实就是通过git将页面提交到配置文件中填写的github仓库的</p>\n</li>\n<li><p>github 的注册和配置</p>\n<p>  1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件<br>  2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中</p>\n</li>\n</ul>\n<p>具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：<a href=\"http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&amp;fps=1\">手把手教你用Hexo+Github 搭建属于自己的博客</a></p>\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme</p>\n<p>配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置</p>\n<h4 id=\"提交页面\"><a href=\"#提交页面\" class=\"headerlink\" title=\"提交页面\"></a>提交页面</h4><p>假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件<code>_config.yml</code>中</p>\n<pre><code># Deployment\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:reGeorge/regeorge.github.io.git,master    //github仓库\n    coding: git@git.coding.net:reGeorge/reGeorge.git,master        //coding仓库\n  branch: master\n</code></pre><p>这里我配置了两个地址，执行<code>hexo d</code>命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）</p>\n<pre><code>https://regeorge.github.io/\nhttp://regeorge.coding.me/\n</code></pre><h4 id=\"踩坑记录\"><a href=\"#踩坑记录\" class=\"headerlink\" title=\"踩坑记录\"></a>踩坑记录</h4><ol>\n<li>hexo d 命令不生效</li>\n</ol>\n<ul>\n<li>原因是 GitHub 的 workflows 配置不正确</li>\n<li>解决方法:<ul>\n<li>在项目中创建 deploy.yml 文件</li>\n<li>配置从 master 分支拉取静态网页文件的目录</li>\n<li>发布到 gh-pages 分支以触发 GitHub Pages 的发布</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>themes 目录中自定义 js 方法报错</li>\n</ol>\n<ul>\n<li>问题:传入 tags.toArrays() 方法时报错</li>\n<li>解决方法:<ul>\n<li>只需要在调用前判空处理</li>\n<li>无需使用 toArrays() 方法</li>\n</ul>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>搭建个人主页的步骤如下：</p>\n<ul>\n<li>先将我们写的文章或者照片生成静态页面(hexo)</li>\n<li>并将这些静态页面部署到支持静态页面的服务器(github或coding)</li>\n<li>这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)</li>\n</ul>","more":"<p>下面是操作步骤：</p>\n<h4 id=\"准备环境：\"><a href=\"#准备环境：\" class=\"headerlink\" title=\"准备环境：\"></a>准备环境：</h4><ul>\n<li><p>node.js（npm）的安装</p>\n<p>  1、hexo 是基于 node.js 来生成页面的<br>  2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令</p>\n</li>\n<li><p>hexo 的安装和初始化</p>\n<p>  1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果<br>  2、常用的几条命令如下：</p>\n<pre><code>hexo n p &apos;文章标题&apos;    //新建文章\nhexo g                //生成页面\nhexo s                //本地预览\nhexo d                //提交页面\n</code></pre></li>\n</ul>\n<h4 id=\"Hexo-常用部署命令详解\"><a href=\"#Hexo-常用部署命令详解\" class=\"headerlink\" title=\"Hexo 常用部署命令详解\"></a>Hexo 常用部署命令详解</h4><ol>\n<li><code>hexo g</code> (hexo generate)</li>\n</ol>\n<ul>\n<li>作用：生成静态文件</li>\n<li>原理：<ul>\n<li>读取 source 目录下的文件（主要是 markdown）</li>\n<li>根据主题模板将内容渲染成 HTML</li>\n<li>生成的静态文件存放在 public 目录</li>\n<li>包含 HTML、CSS、JavaScript 等资源文件</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li><code>hexo s</code> (hexo server)</li>\n</ol>\n<ul>\n<li>作用：启动本地预览服务器</li>\n<li>原理：<ul>\n<li>启动一个 Node.js 服务器</li>\n<li>默认监听 4000 端口</li>\n<li>将 public 目录作为网站根目录</li>\n<li>支持实时预览（修改文件后自动更新）</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><code>hexo d</code> (hexo deploy)</li>\n</ol>\n<ul>\n<li>作用：部署网站到远程服务器</li>\n<li>原理：<ul>\n<li>首先将 public 目录下的文件复制到 .deploy_git 目录</li>\n<li>在 .deploy_git 目录初始化 Git 仓库（如果不存在）</li>\n<li>添加远程仓库（通常是 GitHub Pages）</li>\n<li>提交所有文件并推送到远程仓库</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li><code>hexo s -g</code></li>\n</ol>\n<ul>\n<li>作用：生成静态文件并启动预览服务器</li>\n<li>原理：<ul>\n<li>相当于顺序执行 hexo g 和 hexo s</li>\n<li>生成的文件存在内存中，服务器关闭后不保存</li>\n<li>用于本地快速预览效果</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li><code>hexo g -d</code></li>\n</ol>\n<ul>\n<li>作用：生成静态文件并立即部署</li>\n<li><p>原理：</p>\n<ul>\n<li>相当于顺序执行 hexo g 和 hexo d</li>\n<li>先生成静态文件到 public 目录</li>\n<li>然后立即部署到远程服务器</li>\n<li>常用于确认内容无误后的发布        </li>\n</ul>\n</li>\n<li><p>git 的安装和配置</p>\n<p>  1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器<br>  2、上一条的提交页面命令<code>hexo d</code>其实就是通过git将页面提交到配置文件中填写的github仓库的</p>\n</li>\n<li><p>github 的注册和配置</p>\n<p>  1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件<br>  2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中</p>\n</li>\n</ul>\n<p>具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：<a href=\"http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&amp;fps=1\">手把手教你用Hexo+Github 搭建属于自己的博客</a></p>\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme</p>\n<p>配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置</p>\n<h4 id=\"提交页面\"><a href=\"#提交页面\" class=\"headerlink\" title=\"提交页面\"></a>提交页面</h4><p>假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件<code>_config.yml</code>中</p>\n<pre><code># Deployment\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:reGeorge/regeorge.github.io.git,master    //github仓库\n    coding: git@git.coding.net:reGeorge/reGeorge.git,master        //coding仓库\n  branch: master\n</code></pre><p>这里我配置了两个地址，执行<code>hexo d</code>命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）</p>\n<pre><code>https://regeorge.github.io/\nhttp://regeorge.coding.me/\n</code></pre><h4 id=\"踩坑记录\"><a href=\"#踩坑记录\" class=\"headerlink\" title=\"踩坑记录\"></a>踩坑记录</h4><ol>\n<li>hexo d 命令不生效</li>\n</ol>\n<ul>\n<li>原因是 GitHub 的 workflows 配置不正确</li>\n<li>解决方法:<ul>\n<li>在项目中创建 deploy.yml 文件</li>\n<li>配置从 master 分支拉取静态网页文件的目录</li>\n<li>发布到 gh-pages 分支以触发 GitHub Pages 的发布</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>themes 目录中自定义 js 方法报错</li>\n</ol>\n<ul>\n<li>问题:传入 tags.toArrays() 方法时报错</li>\n<li>解决方法:<ul>\n<li>只需要在调用前判空处理</li>\n<li>无需使用 toArrays() 方法</li>\n</ul>\n</li>\n</ul>"},{"title":"git常用命令","date":"2017-01-13T17:21:22.000Z","_content":"\n#### 创建本地仓库\n\n`git init`\n.git所在文件夹便是git对应的一个本地仓库\n\n<!--more-->\n\n#### 创建本地分支\n    git branch master\n\n#### 查看本地分支\n    git branch\n\n#### 设置远程仓库地址\n\tgit remote add github git@github.com:regeorge/blog.git\n\n#### 查看已配置的远程仓库\n    git remote\n\n#### 从远程仓库更新到本地分支\n\tgit pull github master\n\n#### 在未加入缓存区时回滚\n    git checkout -- .\n\n#### 将本文件夹内所有改动加入缓存区\n\tgit add .\n\n#### 在加入缓存区时回滚\n    git reset HEAD\n\n#### 将暂存区的改动提交到本地仓库\n\tgit commit -m \"add all files\"\n\n#### 在提交仓库后回滚\n    git log #查看提交记录（带有唯一标识commitid）\n    git revert %commitid%\n\n#### 将本地分支推送到远程仓库\n\tgit push github master\n\n#### .gitignore文件中写入不需要同步的文件夹路径\n\n#### hexo deploy 命令\n在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的\n\n#### FAQ\n\n- Q1：在github上创建仓库，在本地新建仓库并push产生冲突\n\t\n\n- A1：先pull后push\n\t\tgit push -u origin master -f\n\n参考：http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\n\t  http://blog.csdn.net/shiren1118/article/details/7761203\n\n#### 查看提交历史\n    git log\n\n#### 查看简洁的提交历史\n    git log --oneline\n\n#### 查看文件的修改历史\n    git blame <file>\n\n#### 查看工作目录状态\n    git status\n\n#### 比较工作目录和暂存区的差异\n    git diff\n\n#### 比较暂存区和最后一次提交的差异\n    git diff --cached\n\n#### 创建并切换到新分支\n    git checkout -b <branch_name>\n\n#### 合并分支\n    git merge <branch_name>\n\n#### 删除本地分支\n    git branch -d <branch_name>\n\n#### 删除远程分支\n    git push origin --delete <branch_name>\n\n#### 暂存当前更改以便切换分支\n    git stash\n\n#### 恢复暂存的更改\n    git stash pop\n\n#### 查看所有暂存的更改\n    git stash list\n\n#### 清除所有暂存的更改\n    git stash clear","source":"_posts/02_git常用命令.md","raw":"---\ntitle: git常用命令\ndate: 2017-01-14 01:21:22\ntags: git\n---\n\n#### 创建本地仓库\n\n`git init`\n.git所在文件夹便是git对应的一个本地仓库\n\n<!--more-->\n\n#### 创建本地分支\n    git branch master\n\n#### 查看本地分支\n    git branch\n\n#### 设置远程仓库地址\n\tgit remote add github git@github.com:regeorge/blog.git\n\n#### 查看已配置的远程仓库\n    git remote\n\n#### 从远程仓库更新到本地分支\n\tgit pull github master\n\n#### 在未加入缓存区时回滚\n    git checkout -- .\n\n#### 将本文件夹内所有改动加入缓存区\n\tgit add .\n\n#### 在加入缓存区时回滚\n    git reset HEAD\n\n#### 将暂存区的改动提交到本地仓库\n\tgit commit -m \"add all files\"\n\n#### 在提交仓库后回滚\n    git log #查看提交记录（带有唯一标识commitid）\n    git revert %commitid%\n\n#### 将本地分支推送到远程仓库\n\tgit push github master\n\n#### .gitignore文件中写入不需要同步的文件夹路径\n\n#### hexo deploy 命令\n在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的\n\n#### FAQ\n\n- Q1：在github上创建仓库，在本地新建仓库并push产生冲突\n\t\n\n- A1：先pull后push\n\t\tgit push -u origin master -f\n\n参考：http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\n\t  http://blog.csdn.net/shiren1118/article/details/7761203\n\n#### 查看提交历史\n    git log\n\n#### 查看简洁的提交历史\n    git log --oneline\n\n#### 查看文件的修改历史\n    git blame <file>\n\n#### 查看工作目录状态\n    git status\n\n#### 比较工作目录和暂存区的差异\n    git diff\n\n#### 比较暂存区和最后一次提交的差异\n    git diff --cached\n\n#### 创建并切换到新分支\n    git checkout -b <branch_name>\n\n#### 合并分支\n    git merge <branch_name>\n\n#### 删除本地分支\n    git branch -d <branch_name>\n\n#### 删除远程分支\n    git push origin --delete <branch_name>\n\n#### 暂存当前更改以便切换分支\n    git stash\n\n#### 恢复暂存的更改\n    git stash pop\n\n#### 查看所有暂存的更改\n    git stash list\n\n#### 清除所有暂存的更改\n    git stash clear","slug":"02_git常用命令","published":1,"updated":"2025-01-05T14:25:29.211Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7ref0003fd2z7qrka365","content":"<h4 id=\"创建本地仓库\"><a href=\"#创建本地仓库\" class=\"headerlink\" title=\"创建本地仓库\"></a>创建本地仓库</h4><p><code>git init</code><br>.git所在文件夹便是git对应的一个本地仓库</p>\n<span id=\"more\"></span>\n<h4 id=\"创建本地分支\"><a href=\"#创建本地分支\" class=\"headerlink\" title=\"创建本地分支\"></a>创建本地分支</h4><pre><code>git branch master\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"设置远程仓库地址\"><a href=\"#设置远程仓库地址\" class=\"headerlink\" title=\"设置远程仓库地址\"></a>设置远程仓库地址</h4><pre><code>git remote add github git@github.com:regeorge/blog.git\n</code></pre><h4 id=\"查看已配置的远程仓库\"><a href=\"#查看已配置的远程仓库\" class=\"headerlink\" title=\"查看已配置的远程仓库\"></a>查看已配置的远程仓库</h4><pre><code>git remote\n</code></pre><h4 id=\"从远程仓库更新到本地分支\"><a href=\"#从远程仓库更新到本地分支\" class=\"headerlink\" title=\"从远程仓库更新到本地分支\"></a>从远程仓库更新到本地分支</h4><pre><code>git pull github master\n</code></pre><h4 id=\"在未加入缓存区时回滚\"><a href=\"#在未加入缓存区时回滚\" class=\"headerlink\" title=\"在未加入缓存区时回滚\"></a>在未加入缓存区时回滚</h4><pre><code>git checkout -- .\n</code></pre><h4 id=\"将本文件夹内所有改动加入缓存区\"><a href=\"#将本文件夹内所有改动加入缓存区\" class=\"headerlink\" title=\"将本文件夹内所有改动加入缓存区\"></a>将本文件夹内所有改动加入缓存区</h4><pre><code>git add .\n</code></pre><h4 id=\"在加入缓存区时回滚\"><a href=\"#在加入缓存区时回滚\" class=\"headerlink\" title=\"在加入缓存区时回滚\"></a>在加入缓存区时回滚</h4><pre><code>git reset HEAD\n</code></pre><h4 id=\"将暂存区的改动提交到本地仓库\"><a href=\"#将暂存区的改动提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的改动提交到本地仓库\"></a>将暂存区的改动提交到本地仓库</h4><pre><code>git commit -m &quot;add all files&quot;\n</code></pre><h4 id=\"在提交仓库后回滚\"><a href=\"#在提交仓库后回滚\" class=\"headerlink\" title=\"在提交仓库后回滚\"></a>在提交仓库后回滚</h4><pre><code>git log #查看提交记录（带有唯一标识commitid）\ngit revert %commitid%\n</code></pre><h4 id=\"将本地分支推送到远程仓库\"><a href=\"#将本地分支推送到远程仓库\" class=\"headerlink\" title=\"将本地分支推送到远程仓库\"></a>将本地分支推送到远程仓库</h4><pre><code>git push github master\n</code></pre><h4 id=\"gitignore文件中写入不需要同步的文件夹路径\"><a href=\"#gitignore文件中写入不需要同步的文件夹路径\" class=\"headerlink\" title=\".gitignore文件中写入不需要同步的文件夹路径\"></a>.gitignore文件中写入不需要同步的文件夹路径</h4><h4 id=\"hexo-deploy-命令\"><a href=\"#hexo-deploy-命令\" class=\"headerlink\" title=\"hexo deploy 命令\"></a>hexo deploy 命令</h4><p>在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的</p>\n<h4 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h4><ul>\n<li>Q1：在github上创建仓库，在本地新建仓库并push产生冲突</li>\n</ul>\n<ul>\n<li>A1：先pull后push<pre><code>git push -u origin master -f\n</code></pre></li>\n</ul>\n<p>参考：<a href=\"http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\">http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/</a><br>      <a href=\"http://blog.csdn.net/shiren1118/article/details/7761203\">http://blog.csdn.net/shiren1118/article/details/7761203</a></p>\n<h4 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h4><pre><code>git log\n</code></pre><h4 id=\"查看简洁的提交历史\"><a href=\"#查看简洁的提交历史\" class=\"headerlink\" title=\"查看简洁的提交历史\"></a>查看简洁的提交历史</h4><pre><code>git log --oneline\n</code></pre><h4 id=\"查看文件的修改历史\"><a href=\"#查看文件的修改历史\" class=\"headerlink\" title=\"查看文件的修改历史\"></a>查看文件的修改历史</h4><pre><code>git blame &lt;file&gt;\n</code></pre><h4 id=\"查看工作目录状态\"><a href=\"#查看工作目录状态\" class=\"headerlink\" title=\"查看工作目录状态\"></a>查看工作目录状态</h4><pre><code>git status\n</code></pre><h4 id=\"比较工作目录和暂存区的差异\"><a href=\"#比较工作目录和暂存区的差异\" class=\"headerlink\" title=\"比较工作目录和暂存区的差异\"></a>比较工作目录和暂存区的差异</h4><pre><code>git diff\n</code></pre><h4 id=\"比较暂存区和最后一次提交的差异\"><a href=\"#比较暂存区和最后一次提交的差异\" class=\"headerlink\" title=\"比较暂存区和最后一次提交的差异\"></a>比较暂存区和最后一次提交的差异</h4><pre><code>git diff --cached\n</code></pre><h4 id=\"创建并切换到新分支\"><a href=\"#创建并切换到新分支\" class=\"headerlink\" title=\"创建并切换到新分支\"></a>创建并切换到新分支</h4><pre><code>git checkout -b &lt;branch_name&gt;\n</code></pre><h4 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h4><pre><code>git merge &lt;branch_name&gt;\n</code></pre><h4 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h4><pre><code>git branch -d &lt;branch_name&gt;\n</code></pre><h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>git push origin --delete &lt;branch_name&gt;\n</code></pre><h4 id=\"暂存当前更改以便切换分支\"><a href=\"#暂存当前更改以便切换分支\" class=\"headerlink\" title=\"暂存当前更改以便切换分支\"></a>暂存当前更改以便切换分支</h4><pre><code>git stash\n</code></pre><h4 id=\"恢复暂存的更改\"><a href=\"#恢复暂存的更改\" class=\"headerlink\" title=\"恢复暂存的更改\"></a>恢复暂存的更改</h4><pre><code>git stash pop\n</code></pre><h4 id=\"查看所有暂存的更改\"><a href=\"#查看所有暂存的更改\" class=\"headerlink\" title=\"查看所有暂存的更改\"></a>查看所有暂存的更改</h4><pre><code>git stash list\n</code></pre><h4 id=\"清除所有暂存的更改\"><a href=\"#清除所有暂存的更改\" class=\"headerlink\" title=\"清除所有暂存的更改\"></a>清除所有暂存的更改</h4><pre><code>git stash clear\n</code></pre><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"创建本地仓库\"><a href=\"#创建本地仓库\" class=\"headerlink\" title=\"创建本地仓库\"></a>创建本地仓库</h4><p><code>git init</code><br>.git所在文件夹便是git对应的一个本地仓库</p>","more":"<h4 id=\"创建本地分支\"><a href=\"#创建本地分支\" class=\"headerlink\" title=\"创建本地分支\"></a>创建本地分支</h4><pre><code>git branch master\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"设置远程仓库地址\"><a href=\"#设置远程仓库地址\" class=\"headerlink\" title=\"设置远程仓库地址\"></a>设置远程仓库地址</h4><pre><code>git remote add github git@github.com:regeorge/blog.git\n</code></pre><h4 id=\"查看已配置的远程仓库\"><a href=\"#查看已配置的远程仓库\" class=\"headerlink\" title=\"查看已配置的远程仓库\"></a>查看已配置的远程仓库</h4><pre><code>git remote\n</code></pre><h4 id=\"从远程仓库更新到本地分支\"><a href=\"#从远程仓库更新到本地分支\" class=\"headerlink\" title=\"从远程仓库更新到本地分支\"></a>从远程仓库更新到本地分支</h4><pre><code>git pull github master\n</code></pre><h4 id=\"在未加入缓存区时回滚\"><a href=\"#在未加入缓存区时回滚\" class=\"headerlink\" title=\"在未加入缓存区时回滚\"></a>在未加入缓存区时回滚</h4><pre><code>git checkout -- .\n</code></pre><h4 id=\"将本文件夹内所有改动加入缓存区\"><a href=\"#将本文件夹内所有改动加入缓存区\" class=\"headerlink\" title=\"将本文件夹内所有改动加入缓存区\"></a>将本文件夹内所有改动加入缓存区</h4><pre><code>git add .\n</code></pre><h4 id=\"在加入缓存区时回滚\"><a href=\"#在加入缓存区时回滚\" class=\"headerlink\" title=\"在加入缓存区时回滚\"></a>在加入缓存区时回滚</h4><pre><code>git reset HEAD\n</code></pre><h4 id=\"将暂存区的改动提交到本地仓库\"><a href=\"#将暂存区的改动提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的改动提交到本地仓库\"></a>将暂存区的改动提交到本地仓库</h4><pre><code>git commit -m &quot;add all files&quot;\n</code></pre><h4 id=\"在提交仓库后回滚\"><a href=\"#在提交仓库后回滚\" class=\"headerlink\" title=\"在提交仓库后回滚\"></a>在提交仓库后回滚</h4><pre><code>git log #查看提交记录（带有唯一标识commitid）\ngit revert %commitid%\n</code></pre><h4 id=\"将本地分支推送到远程仓库\"><a href=\"#将本地分支推送到远程仓库\" class=\"headerlink\" title=\"将本地分支推送到远程仓库\"></a>将本地分支推送到远程仓库</h4><pre><code>git push github master\n</code></pre><h4 id=\"gitignore文件中写入不需要同步的文件夹路径\"><a href=\"#gitignore文件中写入不需要同步的文件夹路径\" class=\"headerlink\" title=\".gitignore文件中写入不需要同步的文件夹路径\"></a>.gitignore文件中写入不需要同步的文件夹路径</h4><h4 id=\"hexo-deploy-命令\"><a href=\"#hexo-deploy-命令\" class=\"headerlink\" title=\"hexo deploy 命令\"></a>hexo deploy 命令</h4><p>在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的</p>\n<h4 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h4><ul>\n<li>Q1：在github上创建仓库，在本地新建仓库并push产生冲突</li>\n</ul>\n<ul>\n<li>A1：先pull后push<pre><code>git push -u origin master -f\n</code></pre></li>\n</ul>\n<p>参考：<a href=\"http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\">http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/</a><br>      <a href=\"http://blog.csdn.net/shiren1118/article/details/7761203\">http://blog.csdn.net/shiren1118/article/details/7761203</a></p>\n<h4 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h4><pre><code>git log\n</code></pre><h4 id=\"查看简洁的提交历史\"><a href=\"#查看简洁的提交历史\" class=\"headerlink\" title=\"查看简洁的提交历史\"></a>查看简洁的提交历史</h4><pre><code>git log --oneline\n</code></pre><h4 id=\"查看文件的修改历史\"><a href=\"#查看文件的修改历史\" class=\"headerlink\" title=\"查看文件的修改历史\"></a>查看文件的修改历史</h4><pre><code>git blame &lt;file&gt;\n</code></pre><h4 id=\"查看工作目录状态\"><a href=\"#查看工作目录状态\" class=\"headerlink\" title=\"查看工作目录状态\"></a>查看工作目录状态</h4><pre><code>git status\n</code></pre><h4 id=\"比较工作目录和暂存区的差异\"><a href=\"#比较工作目录和暂存区的差异\" class=\"headerlink\" title=\"比较工作目录和暂存区的差异\"></a>比较工作目录和暂存区的差异</h4><pre><code>git diff\n</code></pre><h4 id=\"比较暂存区和最后一次提交的差异\"><a href=\"#比较暂存区和最后一次提交的差异\" class=\"headerlink\" title=\"比较暂存区和最后一次提交的差异\"></a>比较暂存区和最后一次提交的差异</h4><pre><code>git diff --cached\n</code></pre><h4 id=\"创建并切换到新分支\"><a href=\"#创建并切换到新分支\" class=\"headerlink\" title=\"创建并切换到新分支\"></a>创建并切换到新分支</h4><pre><code>git checkout -b &lt;branch_name&gt;\n</code></pre><h4 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h4><pre><code>git merge &lt;branch_name&gt;\n</code></pre><h4 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h4><pre><code>git branch -d &lt;branch_name&gt;\n</code></pre><h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>git push origin --delete &lt;branch_name&gt;\n</code></pre><h4 id=\"暂存当前更改以便切换分支\"><a href=\"#暂存当前更改以便切换分支\" class=\"headerlink\" title=\"暂存当前更改以便切换分支\"></a>暂存当前更改以便切换分支</h4><pre><code>git stash\n</code></pre><h4 id=\"恢复暂存的更改\"><a href=\"#恢复暂存的更改\" class=\"headerlink\" title=\"恢复暂存的更改\"></a>恢复暂存的更改</h4><pre><code>git stash pop\n</code></pre><h4 id=\"查看所有暂存的更改\"><a href=\"#查看所有暂存的更改\" class=\"headerlink\" title=\"查看所有暂存的更改\"></a>查看所有暂存的更改</h4><pre><code>git stash list\n</code></pre><h4 id=\"清除所有暂存的更改\"><a href=\"#清除所有暂存的更改\" class=\"headerlink\" title=\"清除所有暂存的更改\"></a>清除所有暂存的更改</h4><pre><code>git stash clear\n</code></pre>"},{"title":"冒泡排序算法","date":"2017-03-26T15:56:26.000Z","_content":"(对 n 个数降序)冒泡排序的思路是：\n\n1、最多进行 (n-1) 次排序\n\n2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）\n   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断\n\n<!--more-->\n\n关于复杂度的概念还未与其他排序算法比较\n\n代码如下：\n```\npublic class MyBubbleSort {\n\tpublic static void main(String[] args)\n\t{\n\t\tint[] arr = {2,6,3,9,4,5,1,2,5,8};\n\t\tint len = arr.length;\n\t\tfor (int i=0;i<len-1;i++)\n\t\t{\n\t\t\tfor (int j=0;j<len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的\n\t\t\t{\n\t\t\t\tif(arr[j]<arr[j+1])\n\t\t\t\t{\t\n\t\t\t\t\tint temp = 0;\n\t\t\t\t\ttemp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"第\"+(i+1)+\"次排序结果:\");\t\n\t\t\tfor(int a = 0; a <len;a++)\n\t\t\t{\n\t\t\t\tSystem.out.print(arr[a] + \"\\t\");\n            }\n            System.out.println(\"\");\n\t\t}\n\t\tSystem.out.print(\"最终排序结果为：\");\n\t\tfor(int a = 0; a <len;a++)\n\t\t{\n\t\t\tSystem.out.print(arr[a] + \"\\t\");\n        }\n        System.out.println(\"\");\n\t}\n}\n```","source":"_posts/03_冒泡排序算法.md","raw":"---\ntitle: 冒泡排序算法\ndate: 2017-03-26 23:56:26\ntags: 算法\n---\n(对 n 个数降序)冒泡排序的思路是：\n\n1、最多进行 (n-1) 次排序\n\n2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）\n   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断\n\n<!--more-->\n\n关于复杂度的概念还未与其他排序算法比较\n\n代码如下：\n```\npublic class MyBubbleSort {\n\tpublic static void main(String[] args)\n\t{\n\t\tint[] arr = {2,6,3,9,4,5,1,2,5,8};\n\t\tint len = arr.length;\n\t\tfor (int i=0;i<len-1;i++)\n\t\t{\n\t\t\tfor (int j=0;j<len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的\n\t\t\t{\n\t\t\t\tif(arr[j]<arr[j+1])\n\t\t\t\t{\t\n\t\t\t\t\tint temp = 0;\n\t\t\t\t\ttemp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"第\"+(i+1)+\"次排序结果:\");\t\n\t\t\tfor(int a = 0; a <len;a++)\n\t\t\t{\n\t\t\t\tSystem.out.print(arr[a] + \"\\t\");\n            }\n            System.out.println(\"\");\n\t\t}\n\t\tSystem.out.print(\"最终排序结果为：\");\n\t\tfor(int a = 0; a <len;a++)\n\t\t{\n\t\t\tSystem.out.print(arr[a] + \"\\t\");\n        }\n        System.out.println(\"\");\n\t}\n}\n```","slug":"03_冒泡排序算法","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7reg0006fd2z2rzr9bgk","content":"<p>(对 n 个数降序)冒泡排序的思路是：</p>\n<p>1、最多进行 (n-1) 次排序</p>\n<p>2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）<br>   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断</p>\n<span id=\"more\"></span>\n<p>关于复杂度的概念还未与其他排序算法比较</p>\n<p>代码如下：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyBubbleSort &#123;</span><br><span class=\"line\">\tpublic static void main(String[] args)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tint[] arr = &#123;2,6,3,9,4,5,1,2,5,8&#125;;</span><br><span class=\"line\">\t\tint len = arr.length;</span><br><span class=\"line\">\t\tfor (int i=0;i&lt;len-1;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfor (int j=0;j&lt;len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tif(arr[j]&lt;arr[j+1])</span><br><span class=\"line\">\t\t\t\t&#123;\t</span><br><span class=\"line\">\t\t\t\t\tint temp = 0;</span><br><span class=\"line\">\t\t\t\t\ttemp = arr[j];</span><br><span class=\"line\">\t\t\t\t\tarr[j] = arr[j+1];</span><br><span class=\"line\">\t\t\t\t\tarr[j+1] = temp;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.print(&quot;第&quot;+(i+1)+&quot;次排序结果:&quot;);\t</span><br><span class=\"line\">\t\t\tfor(int a = 0; a &lt;len;a++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.print(&quot;最终排序结果为：&quot;);</span><br><span class=\"line\">\t\tfor(int a = 0; a &lt;len;a++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>(对 n 个数降序)冒泡排序的思路是：</p>\n<p>1、最多进行 (n-1) 次排序</p>\n<p>2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）<br>   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断</p>","more":"<p>关于复杂度的概念还未与其他排序算法比较</p>\n<p>代码如下：<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MyBubbleSort &#123;</span><br><span class=\"line\">\tpublic static void main(String[] args)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tint[] arr = &#123;2,6,3,9,4,5,1,2,5,8&#125;;</span><br><span class=\"line\">\t\tint len = arr.length;</span><br><span class=\"line\">\t\tfor (int i=0;i&lt;len-1;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfor (int j=0;j&lt;len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tif(arr[j]&lt;arr[j+1])</span><br><span class=\"line\">\t\t\t\t&#123;\t</span><br><span class=\"line\">\t\t\t\t\tint temp = 0;</span><br><span class=\"line\">\t\t\t\t\ttemp = arr[j];</span><br><span class=\"line\">\t\t\t\t\tarr[j] = arr[j+1];</span><br><span class=\"line\">\t\t\t\t\tarr[j+1] = temp;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.print(&quot;第&quot;+(i+1)+&quot;次排序结果:&quot;);\t</span><br><span class=\"line\">\t\t\tfor(int a = 0; a &lt;len;a++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(&quot;&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.print(&quot;最终排序结果为：&quot;);</span><br><span class=\"line\">\t\tfor(int a = 0; a &lt;len;a++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(&quot;&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"遇到乱码问题的解决方案","date":"2017-03-29T14:25:23.000Z","_content":"\n#### 编码的概念\n\n- GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。\n\n- UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。\n\n<!--more-->\n\n#### GBK和UTF8有什么区别？\n\n- UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。\n\n- GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。\n\n#### 如何在sublime中添加对中文的支持\n\n- 首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n- 然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)\n\nPS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。\n\n- 稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。\n\n#### Tips：\n  \n- 养成将手敲的代码存为 UTF-8 编码格式的习惯\n- 遇到乱码首先尝试转 UTF-8\n- 切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了","source":"_posts/04_GBK和UTF-8的区别.md","raw":"---\ntitle: 遇到乱码问题的解决方案\ndate: 2017-03-29 22:25:23\ntags: java\n---\n\n#### 编码的概念\n\n- GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。\n\n- UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。\n\n<!--more-->\n\n#### GBK和UTF8有什么区别？\n\n- UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。\n\n- GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。\n\n#### 如何在sublime中添加对中文的支持\n\n- 首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n- 然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)\n\nPS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。\n\n- 稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。\n\n#### Tips：\n  \n- 养成将手敲的代码存为 UTF-8 编码格式的习惯\n- 遇到乱码首先尝试转 UTF-8\n- 切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了","slug":"04_GBK和UTF-8的区别","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7reh0008fd2z1wnbge6t","content":"<h4 id=\"编码的概念\"><a href=\"#编码的概念\" class=\"headerlink\" title=\"编码的概念\"></a>编码的概念</h4><ul>\n<li><p>GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。</p>\n</li>\n<li><p>UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h4 id=\"GBK和UTF8有什么区别？\"><a href=\"#GBK和UTF8有什么区别？\" class=\"headerlink\" title=\"GBK和UTF8有什么区别？\"></a>GBK和UTF8有什么区别？</h4><ul>\n<li><p>UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。</p>\n</li>\n<li><p>GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。</p>\n</li>\n</ul>\n<h4 id=\"如何在sublime中添加对中文的支持\"><a href=\"#如何在sublime中添加对中文的支持\" class=\"headerlink\" title=\"如何在sublime中添加对中文的支持\"></a>如何在sublime中添加对中文的支持</h4><ul>\n<li>首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import urllib.request,os; pf = &#x27;Package Control.sublime-package&#x27;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#x27;wb&#x27;).write(urllib.request.urlopen( &#x27;http://sublime.wbond.net/&#x27; + pf.replace(&#x27; &#x27;,&#x27;%20&#x27;)).read())</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)</li>\n</ul>\n<p>PS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。</p>\n<ul>\n<li>稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。</li>\n</ul>\n<h4 id=\"Tips：\"><a href=\"#Tips：\" class=\"headerlink\" title=\"Tips：\"></a>Tips：</h4><ul>\n<li>养成将手敲的代码存为 UTF-8 编码格式的习惯</li>\n<li>遇到乱码首先尝试转 UTF-8</li>\n<li>切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"编码的概念\"><a href=\"#编码的概念\" class=\"headerlink\" title=\"编码的概念\"></a>编码的概念</h4><ul>\n<li><p>GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。</p>\n</li>\n<li><p>UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。</p>\n</li>\n</ul>","more":"<h4 id=\"GBK和UTF8有什么区别？\"><a href=\"#GBK和UTF8有什么区别？\" class=\"headerlink\" title=\"GBK和UTF8有什么区别？\"></a>GBK和UTF8有什么区别？</h4><ul>\n<li><p>UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。</p>\n</li>\n<li><p>GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。</p>\n</li>\n</ul>\n<h4 id=\"如何在sublime中添加对中文的支持\"><a href=\"#如何在sublime中添加对中文的支持\" class=\"headerlink\" title=\"如何在sublime中添加对中文的支持\"></a>如何在sublime中添加对中文的支持</h4><ul>\n<li>首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import urllib.request,os; pf = &#x27;Package Control.sublime-package&#x27;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#x27;wb&#x27;).write(urllib.request.urlopen( &#x27;http://sublime.wbond.net/&#x27; + pf.replace(&#x27; &#x27;,&#x27;%20&#x27;)).read())</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)</li>\n</ul>\n<p>PS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。</p>\n<ul>\n<li>稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。</li>\n</ul>\n<h4 id=\"Tips：\"><a href=\"#Tips：\" class=\"headerlink\" title=\"Tips：\"></a>Tips：</h4><ul>\n<li>养成将手敲的代码存为 UTF-8 编码格式的习惯</li>\n<li>遇到乱码首先尝试转 UTF-8</li>\n<li>切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了</li>\n</ul>"},{"title":"基于android实现一个简单的备忘录app","date":"2017-05-20T12:13:59.000Z","_content":"\n\n### 增删查改的实现\n\n#### 创建主活动及布局文件\n\n+ 主活动是整个app的入口，还原一下用户的使用场景：\n\n<!--more-->\n\n\t点击新增按钮：进入AddContent活动\n\t点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n\n+ 布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。\n\n+ 在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。\n\n\t- 对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:\n\n\t\t\tnewbtn.setOnClickListener(new View.OnClickListener() {\n\t\t\t        @Override\n\t\t\t        public void onClick(View v) {\n\t\t\t           Intent i = new Intent(MainActivity.this, AddContent.class);\n\t\t\t           startActivity(i);\n\t\t\t        }\n\t\t\t);\n\n\t- 对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：\n\n\t\t\tlv.setOnItemClickListener(this);\n\t\t\t@Override\n\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position,\n\t\t\t\t\t\tlong id) {\n\t\t\t    \tcursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n\t\t\t     \t\t\tnull, null, null);\n\t\t\t\t\tcursor.moveToPosition(position);\n\t\t\t    \tIntent j = new Intent(MainActivity.this,ShowContent.class);\n\t\t\t    \tj.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n\t\t\t    \tj.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n\t\t\t    \tj.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n\t\t\t    \tstartActivity(j);\t\t\n\t\t\t\t}\n\n#### 创建数据库\n\n+ 重写了两个方法，分别是创建数据库和更新数据库。\n  - 其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。\n\n\t\t@Override\n\t\tpublic void onCreate(SQLiteDatabase db) {\n\t\t\t\tdb.execSQL(\"CREATE TABLE \" + TABLE_NAME + \"(\" \n\t\t\t\t\t    + ID +\" INTEGER PRIMARY KEY AUTOINCREMENT,\" \n\t\t\t\t\t\t+ CONTENT + \" TEXT NOT NULL,\"\n\t\t\t\t\t\t+ TIME + \" TEXT NOT NULL)\");//最后的括号不能忘\n\t\t\t}\n\n\t\t@Override\n\t\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\t\n\t\t\t}\n\n#### 创建添加备忘的活动及布局文件 \n+ 用户的使用场景：\n\n\t进入AddContent活动输入文字\n\t点击取消按钮：返回MainActivity界面\n\t点击保存按钮：输入的文字和当前日期时间被存入数据库\n\n+ 布局包括一个输入文字的EditText和两个Button分别用于保存和取消。\n+ 在活动中为两个按钮设置点击监听事件重写点击方法：\n  - 取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加`android:launchMode=\"singleTask\"`的声明。\n  - 保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。\n+ ContentValue和数据库的写入方法如下：\n\n\t\tpublic void addDB() {\n\t\t\t\tContentValues cv = new ContentValues();\n\t\t\t\tcv.put(NotesDB.CONTENT,edtext.getText().toString());\n\t\t\t\tcv.put(NotesDB.TIME, getTime());\n\t\t\t\tdbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n\t\t\t}\n\t\t\n\t\tprivate String getTime() {\n\t\t\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\t\t\t\tDate date = new Date();\n\t\t\t\tString str = format.format(date);\n\t\t\t\treturn str;\n\t\t\t}\n\n#### 创建查看备忘的活动及布局文件\n\n+ 用户的使用场景：\n\n```\n进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步\n```\n\n+ 布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。\n+  活动中两个按钮的点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 删除按钮的`onClick`方法中的删除数据库记录的代码如下：\n\n```\npublic void deleteData() {\n\tdbWriter.delete(NotesDB.TABLE_NAME,\n                       \"_id=\"+getIntent().getIntExtra(NotesDB.ID, 0), null);\n}\n```\n+ 活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。\n\n```\ns_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\ns_edtxt. setCursorVisible ( false ) ; \ns_edtxt.setFocusable(false); \ns_edtxt.clearFocus();\n```\n\n#### 创建修改备忘的活动及布局文件\n\n- 用户的使用场景：\n\n```\n进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录\n```\n\n+ 布局包括EditText和两个Button\n+活动中为两个按钮设置点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 保存按钮同新增按钮中的保存按钮\n+ 活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：\n\n```\nu_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\nu_edtxt. setCursorVisible (true) ;\nu_edtxt.setFocusable(true);\nu_edtxt.setSelection(u_edtxt.getText().toString().length());\n```\n\n#### 在Manifest文件中注册活动：\n\n```\n<application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_note_white\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme.NoActionBar\">\n        <activity\n            android:name=\".activity.MainActivity\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".activity.AddContent\"\n            android:label=\"新增日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n        <activity\n            android:name=\".activity.ShowContent\"\n            android:label=\"查看日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\n        <activity\n            android:name=\".activity.UpdateContent\"\n            android:label=\"修改日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n      \n    </application>\n```\n\n+ 至此，备忘录的增删改查功能已经添加完毕。\n\n### 云端同步功能实现\n\n#### 同步功能概述\n\n备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：\n\n1. 数据存储方案\n2. 用户认证\n3. 同步策略\n4. 冲突处理\n\n#### 推荐的技术方案\n\n##### 1. 后端存储选择\n- LeanCloud (推荐)\n  - 提供开箱即用的数据存储\n  - 内置用户系统\n  - 有完整的Android SDK\n  - 免费额度足够个人开发者使用\n- Firebase (替代方案)\n  - Google官方支持\n  - 实时数据同步\n  - 较完善的离线支持\n\n##### 2. 数据表设计\n```sql\nNote {\n  objectId: String    // 唯一标识\n  content: String     // 备忘内容\n  createTime: Date    // 创建时间\n  updateTime: Date    // 更新时间\n  userId: String      // 用户ID\n  isDeleted: Boolean  // 软删除标记\n  version: Number     // 版本号(用于冲突处理)\n}\n```\n\n#### 实现步骤 (TodoList)\n\n##### 1. 基础配置\n- [ ] 注册LeanCloud账号并创建应用\n- [ ] 添加LeanCloud SDK依赖\n- [ ] 在Application中初始化SDK\n- [ ] 配置AndroidManifest添加所需权限\n\n##### 2. 用户系统\n- [ ] 实现注册界面\n- [ ] 实现登录界面\n- [ ] 实现用户信息存储\n- [ ] 添加登出功能\n\n##### 3. 数据同步\n- [ ] 修改本地数据库结构，增加同步相关字段\n- [ ] 实现数据上传功能\n- [ ] 实现数据下载功能\n- [ ] 添加定时同步服务\n\n##### 4. 冲突处理\n- [ ] 实现版本控制\n- [ ] 添加冲突检测逻辑\n- [ ] 实现冲突解决策略\n\n##### 5. 离线支持\n- [ ] 实现本地缓存\n- [ ] 添加离线操作队列\n- [ ] 网络恢复后自动同步\n\n#### 代码示例\n\n##### LeanCloud初始化\n```java\npublic class MyApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        // 初始化参数依次为 this, AppId, AppKey\n        AVOSCloud.initialize(this,\"your_app_id\",\"your_app_key\");\n    }\n}\n```\n\n##### 数据同步示例\n```java\npublic class SyncService {\n    public void syncNote(Note note) {\n        AVObject avNote = new AVObject(\"Note\");\n        avNote.put(\"content\", note.getContent());\n        avNote.put(\"createTime\", note.getCreateTime());\n        avNote.put(\"updateTime\", new Date());\n        avNote.put(\"userId\", AVUser.getCurrentUser().getObjectId());\n        avNote.put(\"version\", note.getVersion());\n        \n        avNote.saveInBackground().subscribe(new Observer<AVObject>() {\n            @Override\n            public void onSuccess(AVObject avObject) {\n                // 同步成功处理\n            }\n            \n            @Override\n            public void onError(Throwable throwable) {\n                // 错误处理\n            }\n        });\n    }\n}\n```\n\n#### 注意事项\n\n1. 数据安全\n- 设置适当的ACL权限\n- 敏感数据加密存储\n- 使用HTTPS传输\n\n2. 性能优化\n- 批量同步而不是单条同步\n- 合理设置同步频率\n- 压缩数据包大小\n\n3. 用户体验\n- 同步状态提示\n- 网络异常处理\n- 后台静默同步\n\n4. 耗电优化\n- 使用WorkManager调度同步任务\n- 根据网络状态调整同步策略\n- 避免频繁同步\n\n#### 后续优化方向\n\n1. 支持多设备同步\n2. 添加同步历史记录\n3. 实现数据版本回滚\n4. 添加同步设置选项\n5. 支持选择性同步\n\n参考文档：\n- [LeanCloud 文档中心](https://leancloud.cn/docs/)\n- [Android WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager)\n- [Android 数据同步最佳实践](https://developer.android.com/training/sync-adapters)","source":"_posts/05_基于android实现一个简单的备忘录app.md","raw":"---\ntitle: 基于android实现一个简单的备忘录app\ndate: 2017-05-20 20:13:59\ntags: android\n---\n\n\n### 增删查改的实现\n\n#### 创建主活动及布局文件\n\n+ 主活动是整个app的入口，还原一下用户的使用场景：\n\n<!--more-->\n\n\t点击新增按钮：进入AddContent活动\n\t点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n\n+ 布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。\n\n+ 在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。\n\n\t- 对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:\n\n\t\t\tnewbtn.setOnClickListener(new View.OnClickListener() {\n\t\t\t        @Override\n\t\t\t        public void onClick(View v) {\n\t\t\t           Intent i = new Intent(MainActivity.this, AddContent.class);\n\t\t\t           startActivity(i);\n\t\t\t        }\n\t\t\t);\n\n\t- 对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：\n\n\t\t\tlv.setOnItemClickListener(this);\n\t\t\t@Override\n\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position,\n\t\t\t\t\t\tlong id) {\n\t\t\t    \tcursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n\t\t\t     \t\t\tnull, null, null);\n\t\t\t\t\tcursor.moveToPosition(position);\n\t\t\t    \tIntent j = new Intent(MainActivity.this,ShowContent.class);\n\t\t\t    \tj.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n\t\t\t    \tj.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n\t\t\t    \tj.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n\t\t\t    \tstartActivity(j);\t\t\n\t\t\t\t}\n\n#### 创建数据库\n\n+ 重写了两个方法，分别是创建数据库和更新数据库。\n  - 其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。\n\n\t\t@Override\n\t\tpublic void onCreate(SQLiteDatabase db) {\n\t\t\t\tdb.execSQL(\"CREATE TABLE \" + TABLE_NAME + \"(\" \n\t\t\t\t\t    + ID +\" INTEGER PRIMARY KEY AUTOINCREMENT,\" \n\t\t\t\t\t\t+ CONTENT + \" TEXT NOT NULL,\"\n\t\t\t\t\t\t+ TIME + \" TEXT NOT NULL)\");//最后的括号不能忘\n\t\t\t}\n\n\t\t@Override\n\t\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\t\n\t\t\t}\n\n#### 创建添加备忘的活动及布局文件 \n+ 用户的使用场景：\n\n\t进入AddContent活动输入文字\n\t点击取消按钮：返回MainActivity界面\n\t点击保存按钮：输入的文字和当前日期时间被存入数据库\n\n+ 布局包括一个输入文字的EditText和两个Button分别用于保存和取消。\n+ 在活动中为两个按钮设置点击监听事件重写点击方法：\n  - 取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加`android:launchMode=\"singleTask\"`的声明。\n  - 保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。\n+ ContentValue和数据库的写入方法如下：\n\n\t\tpublic void addDB() {\n\t\t\t\tContentValues cv = new ContentValues();\n\t\t\t\tcv.put(NotesDB.CONTENT,edtext.getText().toString());\n\t\t\t\tcv.put(NotesDB.TIME, getTime());\n\t\t\t\tdbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n\t\t\t}\n\t\t\n\t\tprivate String getTime() {\n\t\t\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\t\t\t\tDate date = new Date();\n\t\t\t\tString str = format.format(date);\n\t\t\t\treturn str;\n\t\t\t}\n\n#### 创建查看备忘的活动及布局文件\n\n+ 用户的使用场景：\n\n```\n进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步\n```\n\n+ 布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。\n+  活动中两个按钮的点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 删除按钮的`onClick`方法中的删除数据库记录的代码如下：\n\n```\npublic void deleteData() {\n\tdbWriter.delete(NotesDB.TABLE_NAME,\n                       \"_id=\"+getIntent().getIntExtra(NotesDB.ID, 0), null);\n}\n```\n+ 活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。\n\n```\ns_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\ns_edtxt. setCursorVisible ( false ) ; \ns_edtxt.setFocusable(false); \ns_edtxt.clearFocus();\n```\n\n#### 创建修改备忘的活动及布局文件\n\n- 用户的使用场景：\n\n```\n进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录\n```\n\n+ 布局包括EditText和两个Button\n+活动中为两个按钮设置点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 保存按钮同新增按钮中的保存按钮\n+ 活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：\n\n```\nu_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\nu_edtxt. setCursorVisible (true) ;\nu_edtxt.setFocusable(true);\nu_edtxt.setSelection(u_edtxt.getText().toString().length());\n```\n\n#### 在Manifest文件中注册活动：\n\n```\n<application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_note_white\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme.NoActionBar\">\n        <activity\n            android:name=\".activity.MainActivity\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".activity.AddContent\"\n            android:label=\"新增日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n        <activity\n            android:name=\".activity.ShowContent\"\n            android:label=\"查看日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\n        <activity\n            android:name=\".activity.UpdateContent\"\n            android:label=\"修改日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n      \n    </application>\n```\n\n+ 至此，备忘录的增删改查功能已经添加完毕。\n\n### 云端同步功能实现\n\n#### 同步功能概述\n\n备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：\n\n1. 数据存储方案\n2. 用户认证\n3. 同步策略\n4. 冲突处理\n\n#### 推荐的技术方案\n\n##### 1. 后端存储选择\n- LeanCloud (推荐)\n  - 提供开箱即用的数据存储\n  - 内置用户系统\n  - 有完整的Android SDK\n  - 免费额度足够个人开发者使用\n- Firebase (替代方案)\n  - Google官方支持\n  - 实时数据同步\n  - 较完善的离线支持\n\n##### 2. 数据表设计\n```sql\nNote {\n  objectId: String    // 唯一标识\n  content: String     // 备忘内容\n  createTime: Date    // 创建时间\n  updateTime: Date    // 更新时间\n  userId: String      // 用户ID\n  isDeleted: Boolean  // 软删除标记\n  version: Number     // 版本号(用于冲突处理)\n}\n```\n\n#### 实现步骤 (TodoList)\n\n##### 1. 基础配置\n- [ ] 注册LeanCloud账号并创建应用\n- [ ] 添加LeanCloud SDK依赖\n- [ ] 在Application中初始化SDK\n- [ ] 配置AndroidManifest添加所需权限\n\n##### 2. 用户系统\n- [ ] 实现注册界面\n- [ ] 实现登录界面\n- [ ] 实现用户信息存储\n- [ ] 添加登出功能\n\n##### 3. 数据同步\n- [ ] 修改本地数据库结构，增加同步相关字段\n- [ ] 实现数据上传功能\n- [ ] 实现数据下载功能\n- [ ] 添加定时同步服务\n\n##### 4. 冲突处理\n- [ ] 实现版本控制\n- [ ] 添加冲突检测逻辑\n- [ ] 实现冲突解决策略\n\n##### 5. 离线支持\n- [ ] 实现本地缓存\n- [ ] 添加离线操作队列\n- [ ] 网络恢复后自动同步\n\n#### 代码示例\n\n##### LeanCloud初始化\n```java\npublic class MyApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        // 初始化参数依次为 this, AppId, AppKey\n        AVOSCloud.initialize(this,\"your_app_id\",\"your_app_key\");\n    }\n}\n```\n\n##### 数据同步示例\n```java\npublic class SyncService {\n    public void syncNote(Note note) {\n        AVObject avNote = new AVObject(\"Note\");\n        avNote.put(\"content\", note.getContent());\n        avNote.put(\"createTime\", note.getCreateTime());\n        avNote.put(\"updateTime\", new Date());\n        avNote.put(\"userId\", AVUser.getCurrentUser().getObjectId());\n        avNote.put(\"version\", note.getVersion());\n        \n        avNote.saveInBackground().subscribe(new Observer<AVObject>() {\n            @Override\n            public void onSuccess(AVObject avObject) {\n                // 同步成功处理\n            }\n            \n            @Override\n            public void onError(Throwable throwable) {\n                // 错误处理\n            }\n        });\n    }\n}\n```\n\n#### 注意事项\n\n1. 数据安全\n- 设置适当的ACL权限\n- 敏感数据加密存储\n- 使用HTTPS传输\n\n2. 性能优化\n- 批量同步而不是单条同步\n- 合理设置同步频率\n- 压缩数据包大小\n\n3. 用户体验\n- 同步状态提示\n- 网络异常处理\n- 后台静默同步\n\n4. 耗电优化\n- 使用WorkManager调度同步任务\n- 根据网络状态调整同步策略\n- 避免频繁同步\n\n#### 后续优化方向\n\n1. 支持多设备同步\n2. 添加同步历史记录\n3. 实现数据版本回滚\n4. 添加同步设置选项\n5. 支持选择性同步\n\n参考文档：\n- [LeanCloud 文档中心](https://leancloud.cn/docs/)\n- [Android WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager)\n- [Android 数据同步最佳实践](https://developer.android.com/training/sync-adapters)","slug":"05_基于android实现一个简单的备忘录app","published":1,"updated":"2025-01-03T15:13:48.708Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7reh000afd2z63e1bheu","content":"<h3 id=\"增删查改的实现\"><a href=\"#增删查改的实现\" class=\"headerlink\" title=\"增删查改的实现\"></a>增删查改的实现</h3><h4 id=\"创建主活动及布局文件\"><a href=\"#创建主活动及布局文件\" class=\"headerlink\" title=\"创建主活动及布局文件\"></a>创建主活动及布局文件</h4><ul>\n<li>主活动是整个app的入口，还原一下用户的使用场景：</li>\n</ul>\n<span id=\"more\"></span>\n<pre><code>点击新增按钮：进入AddContent活动\n点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n</code></pre><ul>\n<li><p>布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。</p>\n</li>\n<li><p>在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。</p>\n<ul>\n<li><p>对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:</p>\n<pre><code>newbtn.setOnClickListener(new View.OnClickListener() &#123;\n        @Override\n        public void onClick(View v) &#123;\n           Intent i = new Intent(MainActivity.this, AddContent.class);\n           startActivity(i);\n        &#125;\n);\n</code></pre></li>\n<li><p>对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：</p>\n<pre><code>lv.setOnItemClickListener(this);\n@Override\n    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,\n            long id) &#123;\n        cursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n                 null, null, null);\n        cursor.moveToPosition(position);\n        Intent j = new Intent(MainActivity.this,ShowContent.class);\n        j.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n        j.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n        j.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n        startActivity(j);        \n    &#125;\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><ul>\n<li><p>重写了两个方法，分别是创建数据库和更新数据库。</p>\n<ul>\n<li><p>其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。</p>\n<pre><code>@Override\npublic void onCreate(SQLiteDatabase db) &#123;\n        db.execSQL(&quot;CREATE TABLE &quot; + TABLE_NAME + &quot;(&quot; \n                + ID +&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot; \n                + CONTENT + &quot; TEXT NOT NULL,&quot;\n                + TIME + &quot; TEXT NOT NULL)&quot;);//最后的括号不能忘\n    &#125;\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) &#123;    \n    &#125;\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建添加备忘的活动及布局文件\"><a href=\"#创建添加备忘的活动及布局文件\" class=\"headerlink\" title=\"创建添加备忘的活动及布局文件\"></a>创建添加备忘的活动及布局文件</h4><ul>\n<li><p>用户的使用场景：</p>\n<p>  进入AddContent活动输入文字<br>  点击取消按钮：返回MainActivity界面<br>  点击保存按钮：输入的文字和当前日期时间被存入数据库</p>\n</li>\n<li><p>布局包括一个输入文字的EditText和两个Button分别用于保存和取消。</p>\n</li>\n<li>在活动中为两个按钮设置点击监听事件重写点击方法：<ul>\n<li>取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加<code>android:launchMode=&quot;singleTask&quot;</code>的声明。</li>\n<li>保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。</li>\n</ul>\n</li>\n<li><p>ContentValue和数据库的写入方法如下：</p>\n<pre><code>public void addDB() &#123;\n        ContentValues cv = new ContentValues();\n        cv.put(NotesDB.CONTENT,edtext.getText().toString());\n        cv.put(NotesDB.TIME, getTime());\n        dbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n    &#125;\n\nprivate String getTime() &#123;\n        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\n        Date date = new Date();\n        String str = format.format(date);\n        return str;\n    &#125;\n</code></pre></li>\n</ul>\n<h4 id=\"创建查看备忘的活动及布局文件\"><a href=\"#创建查看备忘的活动及布局文件\" class=\"headerlink\" title=\"创建查看备忘的活动及布局文件\"></a>创建查看备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）</span><br><span class=\"line\">点击返回按钮：返回MainActivity界面；</span><br><span class=\"line\">点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步</span><br></pre></td></tr></table></figure>\n<ul>\n<li>布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。</li>\n<li>活动中两个按钮的点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>删除按钮的<code>onClick</code>方法中的删除数据库记录的代码如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void deleteData() &#123;</span><br><span class=\"line\">\tdbWriter.delete(NotesDB.TABLE_NAME,</span><br><span class=\"line\">                       &quot;_id=&quot;+getIntent().getIntExtra(NotesDB.ID, 0), null);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</span><br><span class=\"line\">s_edtxt. setCursorVisible ( false ) ; </span><br><span class=\"line\">s_edtxt.setFocusable(false); </span><br><span class=\"line\">s_edtxt.clearFocus();</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建修改备忘的活动及布局文件\"><a href=\"#创建修改备忘的活动及布局文件\" class=\"headerlink\" title=\"创建修改备忘的活动及布局文件\"></a>创建修改备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）</span><br><span class=\"line\">点击返回按钮：返回MainActivity界面；</span><br><span class=\"line\">点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录</span><br></pre></td></tr></table></figure>\n<ul>\n<li>布局包括EditText和两个Button<br>+活动中为两个按钮设置点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>保存按钮同新增按钮中的保存按钮</li>\n</ul>\n</li>\n<li>活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">u_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</span><br><span class=\"line\">u_edtxt. setCursorVisible (true) ;</span><br><span class=\"line\">u_edtxt.setFocusable(true);</span><br><span class=\"line\">u_edtxt.setSelection(u_edtxt.getText().toString().length());</span><br></pre></td></tr></table></figure>\n<h4 id=\"在Manifest文件中注册活动：\"><a href=\"#在Manifest文件中注册活动：\" class=\"headerlink\" title=\"在Manifest文件中注册活动：\"></a>在Manifest文件中注册活动：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;application</span><br><span class=\"line\">        android:allowBackup=&quot;true&quot;</span><br><span class=\"line\">        android:icon=&quot;@mipmap/ic_note_white&quot;</span><br><span class=\"line\">        android:label=&quot;@string/app_name&quot;</span><br><span class=\"line\">        android:supportsRtl=&quot;true&quot;</span><br><span class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.MainActivity&quot;</span><br><span class=\"line\">            android:label=&quot;@string/app_name&quot;</span><br><span class=\"line\">            android:launchMode=&quot;singleTask&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</span><br><span class=\"line\">            &lt;intent-filter&gt;</span><br><span class=\"line\">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</span><br><span class=\"line\">            &lt;/intent-filter&gt;</span><br><span class=\"line\">        &lt;/activity&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.AddContent&quot;</span><br><span class=\"line\">            android:label=&quot;新增日程&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</span><br><span class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.ShowContent&quot;</span><br><span class=\"line\">            android:label=&quot;查看日程&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&lt;/activity&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.UpdateContent&quot;</span><br><span class=\"line\">            android:label=&quot;修改日程&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</span><br><span class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &lt;/application&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>至此，备忘录的增删改查功能已经添加完毕。</li>\n</ul>\n<h3 id=\"云端同步功能实现\"><a href=\"#云端同步功能实现\" class=\"headerlink\" title=\"云端同步功能实现\"></a>云端同步功能实现</h3><h4 id=\"同步功能概述\"><a href=\"#同步功能概述\" class=\"headerlink\" title=\"同步功能概述\"></a>同步功能概述</h4><p>备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：</p>\n<ol>\n<li>数据存储方案</li>\n<li>用户认证</li>\n<li>同步策略</li>\n<li>冲突处理</li>\n</ol>\n<h4 id=\"推荐的技术方案\"><a href=\"#推荐的技术方案\" class=\"headerlink\" title=\"推荐的技术方案\"></a>推荐的技术方案</h4><h5 id=\"1-后端存储选择\"><a href=\"#1-后端存储选择\" class=\"headerlink\" title=\"1. 后端存储选择\"></a>1. 后端存储选择</h5><ul>\n<li>LeanCloud (推荐)<ul>\n<li>提供开箱即用的数据存储</li>\n<li>内置用户系统</li>\n<li>有完整的Android SDK</li>\n<li>免费额度足够个人开发者使用</li>\n</ul>\n</li>\n<li>Firebase (替代方案)<ul>\n<li>Google官方支持</li>\n<li>实时数据同步</li>\n<li>较完善的离线支持</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-数据表设计\"><a href=\"#2-数据表设计\" class=\"headerlink\" title=\"2. 数据表设计\"></a>2. 数据表设计</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Note &#123;</span><br><span class=\"line\">  objectId: String    <span class=\"operator\">/</span><span class=\"operator\">/</span> 唯一标识</span><br><span class=\"line\">  content: String     <span class=\"operator\">/</span><span class=\"operator\">/</span> 备忘内容</span><br><span class=\"line\">  createTime: <span class=\"type\">Date</span>    <span class=\"operator\">/</span><span class=\"operator\">/</span> 创建时间</span><br><span class=\"line\">  updateTime: <span class=\"type\">Date</span>    <span class=\"operator\">/</span><span class=\"operator\">/</span> 更新时间</span><br><span class=\"line\">  userId: String      <span class=\"operator\">/</span><span class=\"operator\">/</span> 用户ID</span><br><span class=\"line\">  isDeleted: <span class=\"type\">Boolean</span>  <span class=\"operator\">/</span><span class=\"operator\">/</span> 软删除标记</span><br><span class=\"line\">  version: Number     <span class=\"operator\">/</span><span class=\"operator\">/</span> 版本号(用于冲突处理)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现步骤-TodoList\"><a href=\"#实现步骤-TodoList\" class=\"headerlink\" title=\"实现步骤 (TodoList)\"></a>实现步骤 (TodoList)</h4><h5 id=\"1-基础配置\"><a href=\"#1-基础配置\" class=\"headerlink\" title=\"1. 基础配置\"></a>1. 基础配置</h5><ul>\n<li>[ ] 注册LeanCloud账号并创建应用</li>\n<li>[ ] 添加LeanCloud SDK依赖</li>\n<li>[ ] 在Application中初始化SDK</li>\n<li>[ ] 配置AndroidManifest添加所需权限</li>\n</ul>\n<h5 id=\"2-用户系统\"><a href=\"#2-用户系统\" class=\"headerlink\" title=\"2. 用户系统\"></a>2. 用户系统</h5><ul>\n<li>[ ] 实现注册界面</li>\n<li>[ ] 实现登录界面</li>\n<li>[ ] 实现用户信息存储</li>\n<li>[ ] 添加登出功能</li>\n</ul>\n<h5 id=\"3-数据同步\"><a href=\"#3-数据同步\" class=\"headerlink\" title=\"3. 数据同步\"></a>3. 数据同步</h5><ul>\n<li>[ ] 修改本地数据库结构，增加同步相关字段</li>\n<li>[ ] 实现数据上传功能</li>\n<li>[ ] 实现数据下载功能</li>\n<li>[ ] 添加定时同步服务</li>\n</ul>\n<h5 id=\"4-冲突处理\"><a href=\"#4-冲突处理\" class=\"headerlink\" title=\"4. 冲突处理\"></a>4. 冲突处理</h5><ul>\n<li>[ ] 实现版本控制</li>\n<li>[ ] 添加冲突检测逻辑</li>\n<li>[ ] 实现冲突解决策略</li>\n</ul>\n<h5 id=\"5-离线支持\"><a href=\"#5-离线支持\" class=\"headerlink\" title=\"5. 离线支持\"></a>5. 离线支持</h5><ul>\n<li>[ ] 实现本地缓存</li>\n<li>[ ] 添加离线操作队列</li>\n<li>[ ] 网络恢复后自动同步</li>\n</ul>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><h5 id=\"LeanCloud初始化\"><a href=\"#LeanCloud初始化\" class=\"headerlink\" title=\"LeanCloud初始化\"></a>LeanCloud初始化</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onCreate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.onCreate();</span><br><span class=\"line\">        <span class=\"comment\">// 初始化参数依次为 this, AppId, AppKey</span></span><br><span class=\"line\">        AVOSCloud.initialize(<span class=\"built_in\">this</span>,<span class=\"string\">&quot;your_app_id&quot;</span>,<span class=\"string\">&quot;your_app_key&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"数据同步示例\"><a href=\"#数据同步示例\" class=\"headerlink\" title=\"数据同步示例\"></a>数据同步示例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SyncService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">syncNote</span><span class=\"params\">(Note note)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">AVObject</span> <span class=\"variable\">avNote</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AVObject</span>(<span class=\"string\">&quot;Note&quot;</span>);</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;content&quot;</span>, note.getContent());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;createTime&quot;</span>, note.getCreateTime());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;updateTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;userId&quot;</span>, AVUser.getCurrentUser().getObjectId());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;version&quot;</span>, note.getVersion());</span><br><span class=\"line\">        </span><br><span class=\"line\">        avNote.saveInBackground().subscribe(<span class=\"keyword\">new</span> <span class=\"title class_\">Observer</span>&lt;AVObject&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onSuccess</span><span class=\"params\">(AVObject avObject)</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 同步成功处理</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Throwable throwable)</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 错误处理</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>数据安全</li>\n</ol>\n<ul>\n<li>设置适当的ACL权限</li>\n<li>敏感数据加密存储</li>\n<li>使用HTTPS传输</li>\n</ul>\n<ol start=\"2\">\n<li>性能优化</li>\n</ol>\n<ul>\n<li>批量同步而不是单条同步</li>\n<li>合理设置同步频率</li>\n<li>压缩数据包大小</li>\n</ul>\n<ol start=\"3\">\n<li>用户体验</li>\n</ol>\n<ul>\n<li>同步状态提示</li>\n<li>网络异常处理</li>\n<li>后台静默同步</li>\n</ul>\n<ol start=\"4\">\n<li>耗电优化</li>\n</ol>\n<ul>\n<li>使用WorkManager调度同步任务</li>\n<li>根据网络状态调整同步策略</li>\n<li>避免频繁同步</li>\n</ul>\n<h4 id=\"后续优化方向\"><a href=\"#后续优化方向\" class=\"headerlink\" title=\"后续优化方向\"></a>后续优化方向</h4><ol>\n<li>支持多设备同步</li>\n<li>添加同步历史记录</li>\n<li>实现数据版本回滚</li>\n<li>添加同步设置选项</li>\n<li>支持选择性同步</li>\n</ol>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://leancloud.cn/docs/\">LeanCloud 文档中心</a></li>\n<li><a href=\"https://developer.android.com/topic/libraries/architecture/workmanager\">Android WorkManager</a></li>\n<li><a href=\"https://developer.android.com/training/sync-adapters\">Android 数据同步最佳实践</a></li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h3 id=\"增删查改的实现\"><a href=\"#增删查改的实现\" class=\"headerlink\" title=\"增删查改的实现\"></a>增删查改的实现</h3><h4 id=\"创建主活动及布局文件\"><a href=\"#创建主活动及布局文件\" class=\"headerlink\" title=\"创建主活动及布局文件\"></a>创建主活动及布局文件</h4><ul>\n<li>主活动是整个app的入口，还原一下用户的使用场景：</li>\n</ul>","more":"<pre><code>点击新增按钮：进入AddContent活动\n点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n</code></pre><ul>\n<li><p>布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。</p>\n</li>\n<li><p>在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。</p>\n<ul>\n<li><p>对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:</p>\n<pre><code>newbtn.setOnClickListener(new View.OnClickListener() &#123;\n        @Override\n        public void onClick(View v) &#123;\n           Intent i = new Intent(MainActivity.this, AddContent.class);\n           startActivity(i);\n        &#125;\n);\n</code></pre></li>\n<li><p>对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：</p>\n<pre><code>lv.setOnItemClickListener(this);\n@Override\n    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,\n            long id) &#123;\n        cursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n                 null, null, null);\n        cursor.moveToPosition(position);\n        Intent j = new Intent(MainActivity.this,ShowContent.class);\n        j.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n        j.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n        j.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n        startActivity(j);        \n    &#125;\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><ul>\n<li><p>重写了两个方法，分别是创建数据库和更新数据库。</p>\n<ul>\n<li><p>其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。</p>\n<pre><code>@Override\npublic void onCreate(SQLiteDatabase db) &#123;\n        db.execSQL(&quot;CREATE TABLE &quot; + TABLE_NAME + &quot;(&quot; \n                + ID +&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot; \n                + CONTENT + &quot; TEXT NOT NULL,&quot;\n                + TIME + &quot; TEXT NOT NULL)&quot;);//最后的括号不能忘\n    &#125;\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) &#123;    \n    &#125;\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建添加备忘的活动及布局文件\"><a href=\"#创建添加备忘的活动及布局文件\" class=\"headerlink\" title=\"创建添加备忘的活动及布局文件\"></a>创建添加备忘的活动及布局文件</h4><ul>\n<li><p>用户的使用场景：</p>\n<p>  进入AddContent活动输入文字<br>  点击取消按钮：返回MainActivity界面<br>  点击保存按钮：输入的文字和当前日期时间被存入数据库</p>\n</li>\n<li><p>布局包括一个输入文字的EditText和两个Button分别用于保存和取消。</p>\n</li>\n<li>在活动中为两个按钮设置点击监听事件重写点击方法：<ul>\n<li>取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加<code>android:launchMode=&quot;singleTask&quot;</code>的声明。</li>\n<li>保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。</li>\n</ul>\n</li>\n<li><p>ContentValue和数据库的写入方法如下：</p>\n<pre><code>public void addDB() &#123;\n        ContentValues cv = new ContentValues();\n        cv.put(NotesDB.CONTENT,edtext.getText().toString());\n        cv.put(NotesDB.TIME, getTime());\n        dbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n    &#125;\n\nprivate String getTime() &#123;\n        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\n        Date date = new Date();\n        String str = format.format(date);\n        return str;\n    &#125;\n</code></pre></li>\n</ul>\n<h4 id=\"创建查看备忘的活动及布局文件\"><a href=\"#创建查看备忘的活动及布局文件\" class=\"headerlink\" title=\"创建查看备忘的活动及布局文件\"></a>创建查看备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）</span><br><span class=\"line\">点击返回按钮：返回MainActivity界面；</span><br><span class=\"line\">点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步</span><br></pre></td></tr></table></figure>\n<ul>\n<li>布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。</li>\n<li>活动中两个按钮的点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>删除按钮的<code>onClick</code>方法中的删除数据库记录的代码如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void deleteData() &#123;</span><br><span class=\"line\">\tdbWriter.delete(NotesDB.TABLE_NAME,</span><br><span class=\"line\">                       &quot;_id=&quot;+getIntent().getIntExtra(NotesDB.ID, 0), null);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</span><br><span class=\"line\">s_edtxt. setCursorVisible ( false ) ; </span><br><span class=\"line\">s_edtxt.setFocusable(false); </span><br><span class=\"line\">s_edtxt.clearFocus();</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建修改备忘的活动及布局文件\"><a href=\"#创建修改备忘的活动及布局文件\" class=\"headerlink\" title=\"创建修改备忘的活动及布局文件\"></a>创建修改备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）</span><br><span class=\"line\">点击返回按钮：返回MainActivity界面；</span><br><span class=\"line\">点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录</span><br></pre></td></tr></table></figure>\n<ul>\n<li>布局包括EditText和两个Button<br>+活动中为两个按钮设置点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>保存按钮同新增按钮中的保存按钮</li>\n</ul>\n</li>\n<li>活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">u_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</span><br><span class=\"line\">u_edtxt. setCursorVisible (true) ;</span><br><span class=\"line\">u_edtxt.setFocusable(true);</span><br><span class=\"line\">u_edtxt.setSelection(u_edtxt.getText().toString().length());</span><br></pre></td></tr></table></figure>\n<h4 id=\"在Manifest文件中注册活动：\"><a href=\"#在Manifest文件中注册活动：\" class=\"headerlink\" title=\"在Manifest文件中注册活动：\"></a>在Manifest文件中注册活动：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;application</span><br><span class=\"line\">        android:allowBackup=&quot;true&quot;</span><br><span class=\"line\">        android:icon=&quot;@mipmap/ic_note_white&quot;</span><br><span class=\"line\">        android:label=&quot;@string/app_name&quot;</span><br><span class=\"line\">        android:supportsRtl=&quot;true&quot;</span><br><span class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.MainActivity&quot;</span><br><span class=\"line\">            android:label=&quot;@string/app_name&quot;</span><br><span class=\"line\">            android:launchMode=&quot;singleTask&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</span><br><span class=\"line\">            &lt;intent-filter&gt;</span><br><span class=\"line\">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</span><br><span class=\"line\">            &lt;/intent-filter&gt;</span><br><span class=\"line\">        &lt;/activity&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.AddContent&quot;</span><br><span class=\"line\">            android:label=&quot;新增日程&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</span><br><span class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.ShowContent&quot;</span><br><span class=\"line\">            android:label=&quot;查看日程&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&lt;/activity&gt;</span><br><span class=\"line\">        &lt;activity</span><br><span class=\"line\">            android:name=&quot;.activity.UpdateContent&quot;</span><br><span class=\"line\">            android:label=&quot;修改日程&quot;</span><br><span class=\"line\">            android:screenOrientation=&quot;portrait&quot;</span><br><span class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</span><br><span class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &lt;/application&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>至此，备忘录的增删改查功能已经添加完毕。</li>\n</ul>\n<h3 id=\"云端同步功能实现\"><a href=\"#云端同步功能实现\" class=\"headerlink\" title=\"云端同步功能实现\"></a>云端同步功能实现</h3><h4 id=\"同步功能概述\"><a href=\"#同步功能概述\" class=\"headerlink\" title=\"同步功能概述\"></a>同步功能概述</h4><p>备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：</p>\n<ol>\n<li>数据存储方案</li>\n<li>用户认证</li>\n<li>同步策略</li>\n<li>冲突处理</li>\n</ol>\n<h4 id=\"推荐的技术方案\"><a href=\"#推荐的技术方案\" class=\"headerlink\" title=\"推荐的技术方案\"></a>推荐的技术方案</h4><h5 id=\"1-后端存储选择\"><a href=\"#1-后端存储选择\" class=\"headerlink\" title=\"1. 后端存储选择\"></a>1. 后端存储选择</h5><ul>\n<li>LeanCloud (推荐)<ul>\n<li>提供开箱即用的数据存储</li>\n<li>内置用户系统</li>\n<li>有完整的Android SDK</li>\n<li>免费额度足够个人开发者使用</li>\n</ul>\n</li>\n<li>Firebase (替代方案)<ul>\n<li>Google官方支持</li>\n<li>实时数据同步</li>\n<li>较完善的离线支持</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-数据表设计\"><a href=\"#2-数据表设计\" class=\"headerlink\" title=\"2. 数据表设计\"></a>2. 数据表设计</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Note &#123;</span><br><span class=\"line\">  objectId: String    <span class=\"operator\">/</span><span class=\"operator\">/</span> 唯一标识</span><br><span class=\"line\">  content: String     <span class=\"operator\">/</span><span class=\"operator\">/</span> 备忘内容</span><br><span class=\"line\">  createTime: <span class=\"type\">Date</span>    <span class=\"operator\">/</span><span class=\"operator\">/</span> 创建时间</span><br><span class=\"line\">  updateTime: <span class=\"type\">Date</span>    <span class=\"operator\">/</span><span class=\"operator\">/</span> 更新时间</span><br><span class=\"line\">  userId: String      <span class=\"operator\">/</span><span class=\"operator\">/</span> 用户ID</span><br><span class=\"line\">  isDeleted: <span class=\"type\">Boolean</span>  <span class=\"operator\">/</span><span class=\"operator\">/</span> 软删除标记</span><br><span class=\"line\">  version: Number     <span class=\"operator\">/</span><span class=\"operator\">/</span> 版本号(用于冲突处理)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现步骤-TodoList\"><a href=\"#实现步骤-TodoList\" class=\"headerlink\" title=\"实现步骤 (TodoList)\"></a>实现步骤 (TodoList)</h4><h5 id=\"1-基础配置\"><a href=\"#1-基础配置\" class=\"headerlink\" title=\"1. 基础配置\"></a>1. 基础配置</h5><ul>\n<li>[ ] 注册LeanCloud账号并创建应用</li>\n<li>[ ] 添加LeanCloud SDK依赖</li>\n<li>[ ] 在Application中初始化SDK</li>\n<li>[ ] 配置AndroidManifest添加所需权限</li>\n</ul>\n<h5 id=\"2-用户系统\"><a href=\"#2-用户系统\" class=\"headerlink\" title=\"2. 用户系统\"></a>2. 用户系统</h5><ul>\n<li>[ ] 实现注册界面</li>\n<li>[ ] 实现登录界面</li>\n<li>[ ] 实现用户信息存储</li>\n<li>[ ] 添加登出功能</li>\n</ul>\n<h5 id=\"3-数据同步\"><a href=\"#3-数据同步\" class=\"headerlink\" title=\"3. 数据同步\"></a>3. 数据同步</h5><ul>\n<li>[ ] 修改本地数据库结构，增加同步相关字段</li>\n<li>[ ] 实现数据上传功能</li>\n<li>[ ] 实现数据下载功能</li>\n<li>[ ] 添加定时同步服务</li>\n</ul>\n<h5 id=\"4-冲突处理\"><a href=\"#4-冲突处理\" class=\"headerlink\" title=\"4. 冲突处理\"></a>4. 冲突处理</h5><ul>\n<li>[ ] 实现版本控制</li>\n<li>[ ] 添加冲突检测逻辑</li>\n<li>[ ] 实现冲突解决策略</li>\n</ul>\n<h5 id=\"5-离线支持\"><a href=\"#5-离线支持\" class=\"headerlink\" title=\"5. 离线支持\"></a>5. 离线支持</h5><ul>\n<li>[ ] 实现本地缓存</li>\n<li>[ ] 添加离线操作队列</li>\n<li>[ ] 网络恢复后自动同步</li>\n</ul>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><h5 id=\"LeanCloud初始化\"><a href=\"#LeanCloud初始化\" class=\"headerlink\" title=\"LeanCloud初始化\"></a>LeanCloud初始化</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onCreate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.onCreate();</span><br><span class=\"line\">        <span class=\"comment\">// 初始化参数依次为 this, AppId, AppKey</span></span><br><span class=\"line\">        AVOSCloud.initialize(<span class=\"built_in\">this</span>,<span class=\"string\">&quot;your_app_id&quot;</span>,<span class=\"string\">&quot;your_app_key&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"数据同步示例\"><a href=\"#数据同步示例\" class=\"headerlink\" title=\"数据同步示例\"></a>数据同步示例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SyncService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">syncNote</span><span class=\"params\">(Note note)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">AVObject</span> <span class=\"variable\">avNote</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AVObject</span>(<span class=\"string\">&quot;Note&quot;</span>);</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;content&quot;</span>, note.getContent());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;createTime&quot;</span>, note.getCreateTime());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;updateTime&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;userId&quot;</span>, AVUser.getCurrentUser().getObjectId());</span><br><span class=\"line\">        avNote.put(<span class=\"string\">&quot;version&quot;</span>, note.getVersion());</span><br><span class=\"line\">        </span><br><span class=\"line\">        avNote.saveInBackground().subscribe(<span class=\"keyword\">new</span> <span class=\"title class_\">Observer</span>&lt;AVObject&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onSuccess</span><span class=\"params\">(AVObject avObject)</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 同步成功处理</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Throwable throwable)</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 错误处理</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>数据安全</li>\n</ol>\n<ul>\n<li>设置适当的ACL权限</li>\n<li>敏感数据加密存储</li>\n<li>使用HTTPS传输</li>\n</ul>\n<ol start=\"2\">\n<li>性能优化</li>\n</ol>\n<ul>\n<li>批量同步而不是单条同步</li>\n<li>合理设置同步频率</li>\n<li>压缩数据包大小</li>\n</ul>\n<ol start=\"3\">\n<li>用户体验</li>\n</ol>\n<ul>\n<li>同步状态提示</li>\n<li>网络异常处理</li>\n<li>后台静默同步</li>\n</ul>\n<ol start=\"4\">\n<li>耗电优化</li>\n</ol>\n<ul>\n<li>使用WorkManager调度同步任务</li>\n<li>根据网络状态调整同步策略</li>\n<li>避免频繁同步</li>\n</ul>\n<h4 id=\"后续优化方向\"><a href=\"#后续优化方向\" class=\"headerlink\" title=\"后续优化方向\"></a>后续优化方向</h4><ol>\n<li>支持多设备同步</li>\n<li>添加同步历史记录</li>\n<li>实现数据版本回滚</li>\n<li>添加同步设置选项</li>\n<li>支持选择性同步</li>\n</ol>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://leancloud.cn/docs/\">LeanCloud 文档中心</a></li>\n<li><a href=\"https://developer.android.com/topic/libraries/architecture/workmanager\">Android WorkManager</a></li>\n<li><a href=\"https://developer.android.com/training/sync-adapters\">Android 数据同步最佳实践</a></li>\n</ul>"},{"title":"百日囚徒问题","date":"2017-12-27T15:09:37.000Z","_content":"\n有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。\n\n一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！\n\n囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。\n\n<!--more-->\n\n#### 思路\n\n1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：\n\t\n- 计数人\n\t- 首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)\n\n\n- 已知囚徒\n\t- 设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数\n\n\n- 未知囚徒\n\t- 设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数\n\n这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。\n\n2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：\n\n- 已知囚徒放风\n\t- 不进行任何操作\n\n- 未知囚徒放风\n\t- 若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。\n\t- 若灯为关闭状态，说明此次通信未结束，不进行任何操作\n\n- 计数人放风\n\t- 若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息\n\t- 若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作\n\n当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。\n\n#### 代码\n\n\timport random\n\n\tdays = 1\t# 天数\n\tlight = 0\t# 灯\n\ttimes = [0 for i in range(0,100)]\t# 每个囚徒放风次数的统计数组\n\tcounter = -1\t# 计数人\n\tremainer = 100\t# 剩余未知人\n\t\n\twhile 1==1:\n\t\tprint(\"第%d天: \"%days)\n\t\tprint(\"\t\t剩余未知人: %d\"%remainer)\n\t\t# 随机抽选一人放风\n\t\tP = random.randint(0, 99)\n\t\n\t\t# 前100天确认身份\n\t\tif days <= 100:\n\t\t\tif light == 0:\n\t\t\t\ttimes[P] += 1\t# 灯灭放风有效\n\t\t\t\tif times == 1:\n\t\t\t\t\tpass\n\t\t\t\tif times[P] == 2:\t# 灯灭且第二次放风\n\t\t\t\t\tcounter = P\n\t\t\t\t\tprint(\"\t\t确定计数人: %d\" %counter)\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= (days-1)\t# 开灯计数\n\t\t\telse:\n\t\t\t\tpass\t# 在灯亮放风无效\n\t\n\t\t\tif days == 100 and light == 0:\t# 100天灯仍灭，获救\n\t\t\t\tprint(\"获救\")\n\t\t\t\tbreak\n\t\n\t\telse:\t# 100天后通过灯通信\n\t\t\tif light == 1:\n\t\t\t\ttimes[P] += 1\t# 灯亮放风有效\n\t\t\t\tif times[P] == 1:\t#(未知者)关灯发出信息\n\t\t\t\t\tlight = 0\n\t\n\t\t\telse:\n\t\t\t\tif P == counter:\t# 灯灭计数人开灯计数\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= 1\n\t\t\t\t\tif remainer == 0:\n\t\t\t\t\t\tprint(\"\t\t计数人%d宣布获救\" %counter)\n\t\t\t\t\t\tbreak\n\t\tdays += 1\n\n#### 日志\n\n\t第1天: \n\t\t剩余未知人: 100\n\t第2天: \n\t\t\t剩余未知人: 100\n\t第3天: \n\t\t\t剩余未知人: 100\n\t第4天: \n\t\t\t剩余未知人: 100\n\t第5天: \n\t\t\t剩余未知人: 100\n\t第6天: \n\t\t\t剩余未知人: 100\n\t第7天: \n\t\t\t剩余未知人: 100\n\t\t\t确定计数人: 53\n\t第8天: \n\t\t\t剩余未知人: 94\n\t第9天: \n\t\t\t剩余未知人: 94\n\n\t······\n\n\t第9538天: \n\t\t剩余未知人: 1\n\t第9539天: \n\t\t\t剩余未知人: 1\n\t第9540天: \n\t\t\t剩余未知人: 1\n\t第9541天: \n\t\t\t剩余未知人: 1\n\t\t\t计数人53宣布获救","source":"_posts/06_百日囚徒问题.md","raw":"---\ntitle: 百日囚徒问题\ndate: 2017-12-27 23:09:37\ntags: 算法\n---\n\n有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。\n\n一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！\n\n囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。\n\n<!--more-->\n\n#### 思路\n\n1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：\n\t\n- 计数人\n\t- 首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)\n\n\n- 已知囚徒\n\t- 设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数\n\n\n- 未知囚徒\n\t- 设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数\n\n这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。\n\n2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：\n\n- 已知囚徒放风\n\t- 不进行任何操作\n\n- 未知囚徒放风\n\t- 若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。\n\t- 若灯为关闭状态，说明此次通信未结束，不进行任何操作\n\n- 计数人放风\n\t- 若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息\n\t- 若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作\n\n当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。\n\n#### 代码\n\n\timport random\n\n\tdays = 1\t# 天数\n\tlight = 0\t# 灯\n\ttimes = [0 for i in range(0,100)]\t# 每个囚徒放风次数的统计数组\n\tcounter = -1\t# 计数人\n\tremainer = 100\t# 剩余未知人\n\t\n\twhile 1==1:\n\t\tprint(\"第%d天: \"%days)\n\t\tprint(\"\t\t剩余未知人: %d\"%remainer)\n\t\t# 随机抽选一人放风\n\t\tP = random.randint(0, 99)\n\t\n\t\t# 前100天确认身份\n\t\tif days <= 100:\n\t\t\tif light == 0:\n\t\t\t\ttimes[P] += 1\t# 灯灭放风有效\n\t\t\t\tif times == 1:\n\t\t\t\t\tpass\n\t\t\t\tif times[P] == 2:\t# 灯灭且第二次放风\n\t\t\t\t\tcounter = P\n\t\t\t\t\tprint(\"\t\t确定计数人: %d\" %counter)\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= (days-1)\t# 开灯计数\n\t\t\telse:\n\t\t\t\tpass\t# 在灯亮放风无效\n\t\n\t\t\tif days == 100 and light == 0:\t# 100天灯仍灭，获救\n\t\t\t\tprint(\"获救\")\n\t\t\t\tbreak\n\t\n\t\telse:\t# 100天后通过灯通信\n\t\t\tif light == 1:\n\t\t\t\ttimes[P] += 1\t# 灯亮放风有效\n\t\t\t\tif times[P] == 1:\t#(未知者)关灯发出信息\n\t\t\t\t\tlight = 0\n\t\n\t\t\telse:\n\t\t\t\tif P == counter:\t# 灯灭计数人开灯计数\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= 1\n\t\t\t\t\tif remainer == 0:\n\t\t\t\t\t\tprint(\"\t\t计数人%d宣布获救\" %counter)\n\t\t\t\t\t\tbreak\n\t\tdays += 1\n\n#### 日志\n\n\t第1天: \n\t\t剩余未知人: 100\n\t第2天: \n\t\t\t剩余未知人: 100\n\t第3天: \n\t\t\t剩余未知人: 100\n\t第4天: \n\t\t\t剩余未知人: 100\n\t第5天: \n\t\t\t剩余未知人: 100\n\t第6天: \n\t\t\t剩余未知人: 100\n\t第7天: \n\t\t\t剩余未知人: 100\n\t\t\t确定计数人: 53\n\t第8天: \n\t\t\t剩余未知人: 94\n\t第9天: \n\t\t\t剩余未知人: 94\n\n\t······\n\n\t第9538天: \n\t\t剩余未知人: 1\n\t第9539天: \n\t\t\t剩余未知人: 1\n\t第9540天: \n\t\t\t剩余未知人: 1\n\t第9541天: \n\t\t\t剩余未知人: 1\n\t\t\t计数人53宣布获救","slug":"06_百日囚徒问题","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rei000efd2zaw9keenx","content":"<p>有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。</p>\n<p>一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！</p>\n<p>囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。</p>\n<span id=\"more\"></span>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：</p>\n<ul>\n<li>计数人<ul>\n<li>首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>已知囚徒<ul>\n<li>设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>未知囚徒<ul>\n<li>设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数</li>\n</ul>\n</li>\n</ul>\n<p>这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。</p>\n<p>2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：</p>\n<ul>\n<li><p>已知囚徒放风</p>\n<ul>\n<li>不进行任何操作</li>\n</ul>\n</li>\n<li><p>未知囚徒放风</p>\n<ul>\n<li>若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。</li>\n<li>若灯为关闭状态，说明此次通信未结束，不进行任何操作</li>\n</ul>\n</li>\n<li><p>计数人放风</p>\n<ul>\n<li>若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息</li>\n<li>若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作</li>\n</ul>\n</li>\n</ul>\n<p>当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>import random\n\ndays = 1    # 天数\nlight = 0    # 灯\ntimes = [0 for i in range(0,100)]    # 每个囚徒放风次数的统计数组\ncounter = -1    # 计数人\nremainer = 100    # 剩余未知人\n\nwhile 1==1:\n    print(&quot;第%d天: &quot;%days)\n    print(&quot;        剩余未知人: %d&quot;%remainer)\n    # 随机抽选一人放风\n    P = random.randint(0, 99)\n\n    # 前100天确认身份\n    if days &lt;= 100:\n        if light == 0:\n            times[P] += 1    # 灯灭放风有效\n            if times == 1:\n                pass\n            if times[P] == 2:    # 灯灭且第二次放风\n                counter = P\n                print(&quot;        确定计数人: %d&quot; %counter)\n                light = 1\n                remainer -= (days-1)    # 开灯计数\n        else:\n            pass    # 在灯亮放风无效\n\n        if days == 100 and light == 0:    # 100天灯仍灭，获救\n            print(&quot;获救&quot;)\n            break\n\n    else:    # 100天后通过灯通信\n        if light == 1:\n            times[P] += 1    # 灯亮放风有效\n            if times[P] == 1:    #(未知者)关灯发出信息\n                light = 0\n\n        else:\n            if P == counter:    # 灯灭计数人开灯计数\n                light = 1\n                remainer -= 1\n                if remainer == 0:\n                    print(&quot;        计数人%d宣布获救&quot; %counter)\n                    break\n    days += 1\n</code></pre><h4 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h4><pre><code>第1天: \n    剩余未知人: 100\n第2天: \n        剩余未知人: 100\n第3天: \n        剩余未知人: 100\n第4天: \n        剩余未知人: 100\n第5天: \n        剩余未知人: 100\n第6天: \n        剩余未知人: 100\n第7天: \n        剩余未知人: 100\n        确定计数人: 53\n第8天: \n        剩余未知人: 94\n第9天: \n        剩余未知人: 94\n\n······\n\n第9538天: \n    剩余未知人: 1\n第9539天: \n        剩余未知人: 1\n第9540天: \n        剩余未知人: 1\n第9541天: \n        剩余未知人: 1\n        计数人53宣布获救\n</code></pre><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。</p>\n<p>一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！</p>\n<p>囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。</p>","more":"<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：</p>\n<ul>\n<li>计数人<ul>\n<li>首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>已知囚徒<ul>\n<li>设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>未知囚徒<ul>\n<li>设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数</li>\n</ul>\n</li>\n</ul>\n<p>这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。</p>\n<p>2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：</p>\n<ul>\n<li><p>已知囚徒放风</p>\n<ul>\n<li>不进行任何操作</li>\n</ul>\n</li>\n<li><p>未知囚徒放风</p>\n<ul>\n<li>若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。</li>\n<li>若灯为关闭状态，说明此次通信未结束，不进行任何操作</li>\n</ul>\n</li>\n<li><p>计数人放风</p>\n<ul>\n<li>若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息</li>\n<li>若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作</li>\n</ul>\n</li>\n</ul>\n<p>当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>import random\n\ndays = 1    # 天数\nlight = 0    # 灯\ntimes = [0 for i in range(0,100)]    # 每个囚徒放风次数的统计数组\ncounter = -1    # 计数人\nremainer = 100    # 剩余未知人\n\nwhile 1==1:\n    print(&quot;第%d天: &quot;%days)\n    print(&quot;        剩余未知人: %d&quot;%remainer)\n    # 随机抽选一人放风\n    P = random.randint(0, 99)\n\n    # 前100天确认身份\n    if days &lt;= 100:\n        if light == 0:\n            times[P] += 1    # 灯灭放风有效\n            if times == 1:\n                pass\n            if times[P] == 2:    # 灯灭且第二次放风\n                counter = P\n                print(&quot;        确定计数人: %d&quot; %counter)\n                light = 1\n                remainer -= (days-1)    # 开灯计数\n        else:\n            pass    # 在灯亮放风无效\n\n        if days == 100 and light == 0:    # 100天灯仍灭，获救\n            print(&quot;获救&quot;)\n            break\n\n    else:    # 100天后通过灯通信\n        if light == 1:\n            times[P] += 1    # 灯亮放风有效\n            if times[P] == 1:    #(未知者)关灯发出信息\n                light = 0\n\n        else:\n            if P == counter:    # 灯灭计数人开灯计数\n                light = 1\n                remainer -= 1\n                if remainer == 0:\n                    print(&quot;        计数人%d宣布获救&quot; %counter)\n                    break\n    days += 1\n</code></pre><h4 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h4><pre><code>第1天: \n    剩余未知人: 100\n第2天: \n        剩余未知人: 100\n第3天: \n        剩余未知人: 100\n第4天: \n        剩余未知人: 100\n第5天: \n        剩余未知人: 100\n第6天: \n        剩余未知人: 100\n第7天: \n        剩余未知人: 100\n        确定计数人: 53\n第8天: \n        剩余未知人: 94\n第9天: \n        剩余未知人: 94\n\n······\n\n第9538天: \n    剩余未知人: 1\n第9539天: \n        剩余未知人: 1\n第9540天: \n        剩余未知人: 1\n第9541天: \n        剩余未知人: 1\n        计数人53宣布获救\n</code></pre>"},{"title":"Markdown的使用","date":"2018-02-21T12:32:18.000Z","_content":"\nMarkdown的常用方法如下：\n\n<!--more-->\n\n## 1.标题\n\n`### 三级标题`  \n\n### 三级标题\n\n\n## 2.无序列表\n\n```\n- 列表1\n- 列表2\n- 列表2\n```\n\n- 列表1\n- 列表2\n- 列表2\n\n## 3.有序列表\n```\n1. 列表1\n2. 列表2\n3. 列表3\n```\n\n1. 列表1\n2. 列表2\n3. 列表3\n\n## 4.链接\n\n`[百度](http://www.baidu.com/)`  \n\n[百度](http://www.baidu.com/)\n\n## 5.图片\n\n`![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)`  \n\n![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n```\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n```\n\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n\n## 6.引用\n\n`> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。`  \n\n> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n## 7.代码引用\n```\n\t`hello world`\n```\n\n`hello world`\n\n\n\n    ```\n    for() {\n    i++;\n    }\n    ```\n\n```\nfor() {\n  i++;\n}\n```\n## 8.表格\n\n```\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n```\n\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n\n\n\n## 8. 换行\n1. 直接用空行来代表换行\n\n\n2. 或者在行位连续输入2个空格来代表换行  \n","source":"_posts/07_Markdown的使用.md","raw":"---\ntitle: Markdown的使用\ndate: 2018-02-21 20:32:18\ntags: markdown\n---\n\nMarkdown的常用方法如下：\n\n<!--more-->\n\n## 1.标题\n\n`### 三级标题`  \n\n### 三级标题\n\n\n## 2.无序列表\n\n```\n- 列表1\n- 列表2\n- 列表2\n```\n\n- 列表1\n- 列表2\n- 列表2\n\n## 3.有序列表\n```\n1. 列表1\n2. 列表2\n3. 列表3\n```\n\n1. 列表1\n2. 列表2\n3. 列表3\n\n## 4.链接\n\n`[百度](http://www.baidu.com/)`  \n\n[百度](http://www.baidu.com/)\n\n## 5.图片\n\n`![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)`  \n\n![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n```\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n```\n\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n\n## 6.引用\n\n`> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。`  \n\n> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n## 7.代码引用\n```\n\t`hello world`\n```\n\n`hello world`\n\n\n\n    ```\n    for() {\n    i++;\n    }\n    ```\n\n```\nfor() {\n  i++;\n}\n```\n## 8.表格\n\n```\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n```\n\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n\n\n\n## 8. 换行\n1. 直接用空行来代表换行\n\n\n2. 或者在行位连续输入2个空格来代表换行  \n","slug":"07_Markdown的使用","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rej000gfd2zboll4rla","content":"<p>Markdown的常用方法如下：</p>\n<span id=\"more\"></span>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1.标题\"></a>1.标题</h2><p><code>### 三级标题</code>  </p>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"2-无序列表\"><a href=\"#2-无序列表\" class=\"headerlink\" title=\"2.无序列表\"></a>2.无序列表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 列表1</span><br><span class=\"line\">- 列表2</span><br><span class=\"line\">- 列表2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表2</li>\n</ul>\n<h2 id=\"3-有序列表\"><a href=\"#3-有序列表\" class=\"headerlink\" title=\"3.有序列表\"></a>3.有序列表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 列表1</span><br><span class=\"line\">2. 列表2</span><br><span class=\"line\">3. 列表3</span><br></pre></td></tr></table></figure>\n<ol>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表3</li>\n</ol>\n<h2 id=\"4-链接\"><a href=\"#4-链接\" class=\"headerlink\" title=\"4.链接\"></a>4.链接</h2><p><code>[百度](http://www.baidu.com/)</code>  </p>\n<p><a href=\"http://www.baidu.com/\">百度</a></p>\n<h2 id=\"5-图片\"><a href=\"#5-图片\" class=\"headerlink\" title=\"5.图片\"></a>5.图片</h2><p><code>![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)</code>  </p>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg&quot; height = &quot;110&quot; div align=&quot;right&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/></p>\n<h2 id=\"6-引用\"><a href=\"#6-引用\" class=\"headerlink\" title=\"6.引用\"></a>6.引用</h2><p><code>&gt; *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。</code>  </p>\n<blockquote>\n<p><em>我挥舞着本子和键盘</em>，<strong>发誓要把这世界写个明明白白</strong>。</p>\n</blockquote>\n<h2 id=\"7-代码引用\"><a href=\"#7-代码引用\" class=\"headerlink\" title=\"7.代码引用\"></a>7.代码引用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`hello world`</span><br></pre></td></tr></table></figure>\n<p><code>hello world</code></p>\n<pre><code><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for() &#123;</span><br><span class=\"line\">i++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for() &#123;</span><br><span class=\"line\">  i++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-表格\"><a href=\"#8-表格\" class=\"headerlink\" title=\"8.表格\"></a>8.表格</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名|学号|成绩|</span><br><span class=\"line\">|----|:----:|----:|</span><br><span class=\"line\">|张三|35|60|</span><br><span class=\"line\">|李四|33|59|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:right\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:right\">60</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"8-换行\"><a href=\"#8-换行\" class=\"headerlink\" title=\"8. 换行\"></a>8. 换行</h2><ol>\n<li>直接用空行来代表换行</li>\n</ol>\n<ol start=\"2\">\n<li>或者在行位连续输入2个空格来代表换行  </li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>Markdown的常用方法如下：</p>","more":"<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1.标题\"></a>1.标题</h2><p><code>### 三级标题</code>  </p>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"2-无序列表\"><a href=\"#2-无序列表\" class=\"headerlink\" title=\"2.无序列表\"></a>2.无序列表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 列表1</span><br><span class=\"line\">- 列表2</span><br><span class=\"line\">- 列表2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表2</li>\n</ul>\n<h2 id=\"3-有序列表\"><a href=\"#3-有序列表\" class=\"headerlink\" title=\"3.有序列表\"></a>3.有序列表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 列表1</span><br><span class=\"line\">2. 列表2</span><br><span class=\"line\">3. 列表3</span><br></pre></td></tr></table></figure>\n<ol>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表3</li>\n</ol>\n<h2 id=\"4-链接\"><a href=\"#4-链接\" class=\"headerlink\" title=\"4.链接\"></a>4.链接</h2><p><code>[百度](http://www.baidu.com/)</code>  </p>\n<p><a href=\"http://www.baidu.com/\">百度</a></p>\n<h2 id=\"5-图片\"><a href=\"#5-图片\" class=\"headerlink\" title=\"5.图片\"></a>5.图片</h2><p><code>![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)</code>  </p>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg&quot; height = &quot;110&quot; div align=&quot;right&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/></p>\n<h2 id=\"6-引用\"><a href=\"#6-引用\" class=\"headerlink\" title=\"6.引用\"></a>6.引用</h2><p><code>&gt; *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。</code>  </p>\n<blockquote>\n<p><em>我挥舞着本子和键盘</em>，<strong>发誓要把这世界写个明明白白</strong>。</p>\n</blockquote>\n<h2 id=\"7-代码引用\"><a href=\"#7-代码引用\" class=\"headerlink\" title=\"7.代码引用\"></a>7.代码引用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`hello world`</span><br></pre></td></tr></table></figure>\n<p><code>hello world</code></p>\n<pre><code><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for() &#123;</span><br><span class=\"line\">i++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for() &#123;</span><br><span class=\"line\">  i++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-表格\"><a href=\"#8-表格\" class=\"headerlink\" title=\"8.表格\"></a>8.表格</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名|学号|成绩|</span><br><span class=\"line\">|----|:----:|----:|</span><br><span class=\"line\">|张三|35|60|</span><br><span class=\"line\">|李四|33|59|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:right\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:right\">60</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"8-换行\"><a href=\"#8-换行\" class=\"headerlink\" title=\"8. 换行\"></a>8. 换行</h2><ol>\n<li>直接用空行来代表换行</li>\n</ol>\n<ol start=\"2\">\n<li>或者在行位连续输入2个空格来代表换行  </li>\n</ol>"},{"title":"使用selenium+wget实现自动下载图片","date":"2018-03-05T15:04:42.000Z","_content":"\n#### 操作步骤\n\nunsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。\n\n另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe\n\n<!--more-->\n\n#### 环境安装\n\n1. selenium\n2. wget\n\n\tpip install selenium\n\tpip install wget\n\n#### python脚本\n\n\tfrom selenium import webdriver\n\timport wget\n\timport os\n\timport time\n\timport subprocess\n\n\tdef mkdir(path):\n\t    # 去除首位空格\n\t    path=path.strip()\n\t    # 去除尾部 \\ 符号\n\t    path=path.rstrip(\"\\\\\")\n\n\t    # 判断路径是否存在\n\t    # 存在     True\n\t    # 不存在   False\n\t    isExists=os.path.exists(path)\n\n\t    # 判断结果\n\t    if not isExists:\n\t        # 如果不存在则创建目录\n\t        print ('%s创建成功'%path)\n\t        # 创建目录操作函数\n\t        os.makedirs(path)\n\t        return True\n\t    else:\n\t        # 如果目录存在则不创建，并提示目录已存在\n\t        print ('%s目录已存在'%path)\n\t        return False\n\n\n\tdef download_pic(folderpath='',list=[]):\n\t    i = 1\n\t    for url in list:\n\t        try:\n\t        #     wget.download(url, out='%s\\\\%d.jpg' %(folderpath,i))\n\t            cmd = 'C:\\\\Python36\\\\Scripts\\\\wget -O \"%s\\\\%d.jpg\" \"%s\"' %(folderpath,i,url)\n\t            print(cmd)\n\t            subprocess.Popen(cmd)\n\t            i += 1\n\t        except:\n\t            print('skip')\n\t    print('下载成功...')\n\n\tdef craw_url(scroll='2',web_url=''):\n\t    driver = webdriver.Chrome('C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe')\n\t    driver.get(web_url)\n\t    driver.maximize_window()\n\t    time.sleep(3)\n\t    urls = []\n\t    try:\n\t        for i in range(1,scroll):\n\t            pics = driver.find_elements_by_class_name(name='_2zEKz')\n\t            for pic in pics:\n\t                src = '%s\\n'%pic.get_attribute(name='src')\n\t                src = src.replace('1000','2592')\n\t                # print(src)\n\t                urls.append(src)\n\t            js=\"window.scrollTo(0,document.body.scrollHeight)\"\n\t            driver.execute_script(js)\n\t            time.sleep(3)\n\t            print(\"循环次数：%d\"%i)\n\t        driver.close()\n\t    except:\n\t        driver.close()\n\t    urls = list(set(urls))\n\t    print('获取图片链接成功...')\n\t    return urls\n\n\tif __name__ == \"__main__\":\n\t    download_path = 'G:\\\\02_photo\\\\unsplash'\n\t    url_list=craw_url(scroll=1000,web_url='https://unsplash.com/')\n\t    mkdir(download_path)\n\t    download_pic(folderpath=download_path,list=url_list)\n\n\t    #\tfor url in url_list:\n\t    #\t        print(url)\n\t    #\ttry:\n\t    #    \tf=open('%s\\\\0_urls.txt'%download_path,'w')\n\t    #   \tf.writelines(url_list)\n\t    #   \tf.close()\n\t    #\texcept:\n\t       \t \tpass\n\t    \t\n#### 下载成功\n\n![1.png](http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","source":"_posts/08_使用selenium-wget实现自动下载图片.md","raw":"---\ntitle: 使用selenium+wget实现自动下载图片\ndate: 2018-03-05 23:04:42\ntags: python\n---\n\n#### 操作步骤\n\nunsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。\n\n另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe\n\n<!--more-->\n\n#### 环境安装\n\n1. selenium\n2. wget\n\n\tpip install selenium\n\tpip install wget\n\n#### python脚本\n\n\tfrom selenium import webdriver\n\timport wget\n\timport os\n\timport time\n\timport subprocess\n\n\tdef mkdir(path):\n\t    # 去除首位空格\n\t    path=path.strip()\n\t    # 去除尾部 \\ 符号\n\t    path=path.rstrip(\"\\\\\")\n\n\t    # 判断路径是否存在\n\t    # 存在     True\n\t    # 不存在   False\n\t    isExists=os.path.exists(path)\n\n\t    # 判断结果\n\t    if not isExists:\n\t        # 如果不存在则创建目录\n\t        print ('%s创建成功'%path)\n\t        # 创建目录操作函数\n\t        os.makedirs(path)\n\t        return True\n\t    else:\n\t        # 如果目录存在则不创建，并提示目录已存在\n\t        print ('%s目录已存在'%path)\n\t        return False\n\n\n\tdef download_pic(folderpath='',list=[]):\n\t    i = 1\n\t    for url in list:\n\t        try:\n\t        #     wget.download(url, out='%s\\\\%d.jpg' %(folderpath,i))\n\t            cmd = 'C:\\\\Python36\\\\Scripts\\\\wget -O \"%s\\\\%d.jpg\" \"%s\"' %(folderpath,i,url)\n\t            print(cmd)\n\t            subprocess.Popen(cmd)\n\t            i += 1\n\t        except:\n\t            print('skip')\n\t    print('下载成功...')\n\n\tdef craw_url(scroll='2',web_url=''):\n\t    driver = webdriver.Chrome('C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe')\n\t    driver.get(web_url)\n\t    driver.maximize_window()\n\t    time.sleep(3)\n\t    urls = []\n\t    try:\n\t        for i in range(1,scroll):\n\t            pics = driver.find_elements_by_class_name(name='_2zEKz')\n\t            for pic in pics:\n\t                src = '%s\\n'%pic.get_attribute(name='src')\n\t                src = src.replace('1000','2592')\n\t                # print(src)\n\t                urls.append(src)\n\t            js=\"window.scrollTo(0,document.body.scrollHeight)\"\n\t            driver.execute_script(js)\n\t            time.sleep(3)\n\t            print(\"循环次数：%d\"%i)\n\t        driver.close()\n\t    except:\n\t        driver.close()\n\t    urls = list(set(urls))\n\t    print('获取图片链接成功...')\n\t    return urls\n\n\tif __name__ == \"__main__\":\n\t    download_path = 'G:\\\\02_photo\\\\unsplash'\n\t    url_list=craw_url(scroll=1000,web_url='https://unsplash.com/')\n\t    mkdir(download_path)\n\t    download_pic(folderpath=download_path,list=url_list)\n\n\t    #\tfor url in url_list:\n\t    #\t        print(url)\n\t    #\ttry:\n\t    #    \tf=open('%s\\\\0_urls.txt'%download_path,'w')\n\t    #   \tf.writelines(url_list)\n\t    #   \tf.close()\n\t    #\texcept:\n\t       \t \tpass\n\t    \t\n#### 下载成功\n\n![1.png](http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","slug":"08_使用selenium-wget实现自动下载图片","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rej000jfd2zc83i6kt7","content":"<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><p>unsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。</p>\n<p>另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe</p>\n<span id=\"more\"></span>\n<h4 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h4><ol>\n<li>selenium</li>\n<li><p>wget</p>\n<p> pip install selenium<br> pip install wget</p>\n</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><pre><code>from selenium import webdriver\nimport wget\nimport os\nimport time\nimport subprocess\n\ndef mkdir(path):\n    # 去除首位空格\n    path=path.strip()\n    # 去除尾部 \\ 符号\n    path=path.rstrip(&quot;\\\\&quot;)\n\n    # 判断路径是否存在\n    # 存在     True\n    # 不存在   False\n    isExists=os.path.exists(path)\n\n    # 判断结果\n    if not isExists:\n        # 如果不存在则创建目录\n        print (&apos;%s创建成功&apos;%path)\n        # 创建目录操作函数\n        os.makedirs(path)\n        return True\n    else:\n        # 如果目录存在则不创建，并提示目录已存在\n        print (&apos;%s目录已存在&apos;%path)\n        return False\n\n\ndef download_pic(folderpath=&apos;&apos;,list=[]):\n    i = 1\n    for url in list:\n        try:\n        #     wget.download(url, out=&apos;%s\\\\%d.jpg&apos; %(folderpath,i))\n            cmd = &apos;C:\\\\Python36\\\\Scripts\\\\wget -O &quot;%s\\\\%d.jpg&quot; &quot;%s&quot;&apos; %(folderpath,i,url)\n            print(cmd)\n            subprocess.Popen(cmd)\n            i += 1\n        except:\n            print(&apos;skip&apos;)\n    print(&apos;下载成功...&apos;)\n\ndef craw_url(scroll=&apos;2&apos;,web_url=&apos;&apos;):\n    driver = webdriver.Chrome(&apos;C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe&apos;)\n    driver.get(web_url)\n    driver.maximize_window()\n    time.sleep(3)\n    urls = []\n    try:\n        for i in range(1,scroll):\n            pics = driver.find_elements_by_class_name(name=&apos;_2zEKz&apos;)\n            for pic in pics:\n                src = &apos;%s\\n&apos;%pic.get_attribute(name=&apos;src&apos;)\n                src = src.replace(&apos;1000&apos;,&apos;2592&apos;)\n                # print(src)\n                urls.append(src)\n            js=&quot;window.scrollTo(0,document.body.scrollHeight)&quot;\n            driver.execute_script(js)\n            time.sleep(3)\n            print(&quot;循环次数：%d&quot;%i)\n        driver.close()\n    except:\n        driver.close()\n    urls = list(set(urls))\n    print(&apos;获取图片链接成功...&apos;)\n    return urls\n\nif __name__ == &quot;__main__&quot;:\n    download_path = &apos;G:\\\\02_photo\\\\unsplash&apos;\n    url_list=craw_url(scroll=1000,web_url=&apos;https://unsplash.com/&apos;)\n    mkdir(download_path)\n    download_pic(folderpath=download_path,list=url_list)\n\n    #    for url in url_list:\n    #            print(url)\n    #    try:\n    #        f=open(&apos;%s\\\\0_urls.txt&apos;%download_path,&apos;w&apos;)\n    #       f.writelines(url_list)\n    #       f.close()\n    #    except:\n                pass\n</code></pre><h4 id=\"下载成功\"><a href=\"#下载成功\" class=\"headerlink\" title=\"下载成功\"></a>下载成功</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><p>unsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。</p>\n<p>另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe</p>","more":"<h4 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h4><ol>\n<li>selenium</li>\n<li><p>wget</p>\n<p> pip install selenium<br> pip install wget</p>\n</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><pre><code>from selenium import webdriver\nimport wget\nimport os\nimport time\nimport subprocess\n\ndef mkdir(path):\n    # 去除首位空格\n    path=path.strip()\n    # 去除尾部 \\ 符号\n    path=path.rstrip(&quot;\\\\&quot;)\n\n    # 判断路径是否存在\n    # 存在     True\n    # 不存在   False\n    isExists=os.path.exists(path)\n\n    # 判断结果\n    if not isExists:\n        # 如果不存在则创建目录\n        print (&apos;%s创建成功&apos;%path)\n        # 创建目录操作函数\n        os.makedirs(path)\n        return True\n    else:\n        # 如果目录存在则不创建，并提示目录已存在\n        print (&apos;%s目录已存在&apos;%path)\n        return False\n\n\ndef download_pic(folderpath=&apos;&apos;,list=[]):\n    i = 1\n    for url in list:\n        try:\n        #     wget.download(url, out=&apos;%s\\\\%d.jpg&apos; %(folderpath,i))\n            cmd = &apos;C:\\\\Python36\\\\Scripts\\\\wget -O &quot;%s\\\\%d.jpg&quot; &quot;%s&quot;&apos; %(folderpath,i,url)\n            print(cmd)\n            subprocess.Popen(cmd)\n            i += 1\n        except:\n            print(&apos;skip&apos;)\n    print(&apos;下载成功...&apos;)\n\ndef craw_url(scroll=&apos;2&apos;,web_url=&apos;&apos;):\n    driver = webdriver.Chrome(&apos;C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe&apos;)\n    driver.get(web_url)\n    driver.maximize_window()\n    time.sleep(3)\n    urls = []\n    try:\n        for i in range(1,scroll):\n            pics = driver.find_elements_by_class_name(name=&apos;_2zEKz&apos;)\n            for pic in pics:\n                src = &apos;%s\\n&apos;%pic.get_attribute(name=&apos;src&apos;)\n                src = src.replace(&apos;1000&apos;,&apos;2592&apos;)\n                # print(src)\n                urls.append(src)\n            js=&quot;window.scrollTo(0,document.body.scrollHeight)&quot;\n            driver.execute_script(js)\n            time.sleep(3)\n            print(&quot;循环次数：%d&quot;%i)\n        driver.close()\n    except:\n        driver.close()\n    urls = list(set(urls))\n    print(&apos;获取图片链接成功...&apos;)\n    return urls\n\nif __name__ == &quot;__main__&quot;:\n    download_path = &apos;G:\\\\02_photo\\\\unsplash&apos;\n    url_list=craw_url(scroll=1000,web_url=&apos;https://unsplash.com/&apos;)\n    mkdir(download_path)\n    download_pic(folderpath=download_path,list=url_list)\n\n    #    for url in url_list:\n    #            print(url)\n    #    try:\n    #        f=open(&apos;%s\\\\0_urls.txt&apos;%download_path,&apos;w&apos;)\n    #       f.writelines(url_list)\n    #       f.close()\n    #    except:\n                pass\n</code></pre><h4 id=\"下载成功\"><a href=\"#下载成功\" class=\"headerlink\" title=\"下载成功\"></a>下载成功</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>"},{"title":"ADB常用命令","date":"2018-07-01T12:32:18.000Z","_content":"\n|    adb    | 命令                                       | 含义                                 |\n| :-------: | ------------------------------------------ | ------------------------------------ |\n| adb shell | adb shell \"dumpsys window \\| grep mCurrentFocus\"                  | 获取应用包名（打开应用）             |\n|           | adb shell pm path 包名                     | 获取应用安装路径                     |\n|           | adb shell \"pm dump 包名                    | 获取应用版本号                       |\n|           | adb shell \"cat /system/build.prop          | 获取手机系统信息（ CPU，厂商名称等） |\n|           | adb shell getprop ro.build.version.release | 获取手机系统版本                     |\n|           | adb shell getprop ro.build.version.sdk     | 获取手机系统api版本                  |\n|           | adb -d shell getprop ro.product.model      | 获取手机设备型号                     |\n|           | adb -d shell getprop ro.product.brand      | 获取手机厂商名称                     |\n|           | adb shell getprop ro.serialno              | 获取手机的序列号                     |\n|           | adb shell dumpsys iphonesubinfo            | 获取手机的IMEI                       |\n|           | adb shell cat /sys/class/net/wlan/address  | 获取手机mac地址                      |\n|           | adb shell cat /proc/meminfo                | 获取手机内存信息                     |\n|           | adb shell df                               | 获取手机存储信息                     |\n|           | adb shell df /mnt/shell/emulated           | 获取手机内部存储信息：               |\n|           | adb shell df /storage/sdcard               | 获取sdcard存储信息：                 |\n|           | adb shell \"dumpsys window                  | 获取手机分辨率                       |\n|           | adb shell wm density                       | 获取手机物理密度                     |\n|           | adb shell \"dumpsys window                  | 获取当前界面对应的活动和包名         |\n\n  \n\n待刷新","source":"_posts/09_ADB常用命令.md","raw":"---\ntitle: ADB常用命令\ndate: 2018-07-01 20:32:18\ntags: ADB\n---\n\n|    adb    | 命令                                       | 含义                                 |\n| :-------: | ------------------------------------------ | ------------------------------------ |\n| adb shell | adb shell \"dumpsys window \\| grep mCurrentFocus\"                  | 获取应用包名（打开应用）             |\n|           | adb shell pm path 包名                     | 获取应用安装路径                     |\n|           | adb shell \"pm dump 包名                    | 获取应用版本号                       |\n|           | adb shell \"cat /system/build.prop          | 获取手机系统信息（ CPU，厂商名称等） |\n|           | adb shell getprop ro.build.version.release | 获取手机系统版本                     |\n|           | adb shell getprop ro.build.version.sdk     | 获取手机系统api版本                  |\n|           | adb -d shell getprop ro.product.model      | 获取手机设备型号                     |\n|           | adb -d shell getprop ro.product.brand      | 获取手机厂商名称                     |\n|           | adb shell getprop ro.serialno              | 获取手机的序列号                     |\n|           | adb shell dumpsys iphonesubinfo            | 获取手机的IMEI                       |\n|           | adb shell cat /sys/class/net/wlan/address  | 获取手机mac地址                      |\n|           | adb shell cat /proc/meminfo                | 获取手机内存信息                     |\n|           | adb shell df                               | 获取手机存储信息                     |\n|           | adb shell df /mnt/shell/emulated           | 获取手机内部存储信息：               |\n|           | adb shell df /storage/sdcard               | 获取sdcard存储信息：                 |\n|           | adb shell \"dumpsys window                  | 获取手机分辨率                       |\n|           | adb shell wm density                       | 获取手机物理密度                     |\n|           | adb shell \"dumpsys window                  | 获取当前界面对应的活动和包名         |\n\n  \n\n待刷新","slug":"09_ADB常用命令","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rek000mfd2z1c9y12cs","content":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">adb</th>\n<th>命令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">adb shell</td>\n<td>adb shell “dumpsys window \\</td>\n<td>grep mCurrentFocus”</td>\n<td>获取应用包名（打开应用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell pm path 包名</td>\n<td>获取应用安装路径</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “pm dump 包名</td>\n<td>获取应用版本号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “cat /system/build.prop</td>\n<td>获取手机系统信息（ CPU，厂商名称等）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.release</td>\n<td>获取手机系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.sdk</td>\n<td>获取手机系统api版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.model</td>\n<td>获取手机设备型号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.brand</td>\n<td>获取手机厂商名称</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.serialno</td>\n<td>获取手机的序列号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell dumpsys iphonesubinfo</td>\n<td>获取手机的IMEI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /sys/class/net/wlan/address</td>\n<td>获取手机mac地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /proc/meminfo</td>\n<td>获取手机内存信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df</td>\n<td>获取手机存储信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /mnt/shell/emulated</td>\n<td>获取手机内部存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /storage/sdcard</td>\n<td>获取sdcard存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取手机分辨率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell wm density</td>\n<td>获取手机物理密度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取当前界面对应的活动和包名</td>\n</tr>\n</tbody>\n</table>\n<p>待刷新</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">adb</th>\n<th>命令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">adb shell</td>\n<td>adb shell “dumpsys window \\</td>\n<td>grep mCurrentFocus”</td>\n<td>获取应用包名（打开应用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell pm path 包名</td>\n<td>获取应用安装路径</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “pm dump 包名</td>\n<td>获取应用版本号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “cat /system/build.prop</td>\n<td>获取手机系统信息（ CPU，厂商名称等）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.release</td>\n<td>获取手机系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.sdk</td>\n<td>获取手机系统api版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.model</td>\n<td>获取手机设备型号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.brand</td>\n<td>获取手机厂商名称</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.serialno</td>\n<td>获取手机的序列号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell dumpsys iphonesubinfo</td>\n<td>获取手机的IMEI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /sys/class/net/wlan/address</td>\n<td>获取手机mac地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /proc/meminfo</td>\n<td>获取手机内存信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df</td>\n<td>获取手机存储信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /mnt/shell/emulated</td>\n<td>获取手机内部存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /storage/sdcard</td>\n<td>获取sdcard存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取手机分辨率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell wm density</td>\n<td>获取手机物理密度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取当前界面对应的活动和包名</td>\n</tr>\n</tbody>\n</table>\n<p>待刷新</p>\n"},{"title":"安卓客户端取日志脚本","date":"2019-04-01T12:32:18.000Z","_content":"\n安卓客户端取日志脚本：8ii8i i\n<!--more-->\n\n```\n@echo off\n\n::初始化脚本\n:start\ncls\necho ****************************************\necho [请输入：0]        退出\necho [请输入：1]        获取applog\necho [请输入：2]        清理applog\necho [直接输入回车]   执行默认操作\necho ****************************************\n\nset FOLDER=%~dp0\nset TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\nset /p opt=请输入:\n\nif \"%opt%\"==\"0\" goto exit\nif \"%opt%\"==\"1\" goto get_log\nif \"%opt%\"==\"\" goto default\n\n:default\necho 执行默认操作\necho 我啥也没干\npause\ngoto start\n\n:get_log\necho opt=%opt%\necho 获取applog\necho 目标路径为 %FOLDER%%TIMESTAMP%\n::adb pull applog路径 目标路径\npause\ngoto start\n\n:clean_log\necho opt=%opt%\necho 清理applog\nadb remount\n::adb shell rm -r xxx\npause\ngoto start\n```","source":"_posts/10_安卓客户端取日志脚本.md","raw":"---\ntitle: 安卓客户端取日志脚本\ndate: 2019-04-01 20:32:18\ntags: bat\n---\n\n安卓客户端取日志脚本：8ii8i i\n<!--more-->\n\n```\n@echo off\n\n::初始化脚本\n:start\ncls\necho ****************************************\necho [请输入：0]        退出\necho [请输入：1]        获取applog\necho [请输入：2]        清理applog\necho [直接输入回车]   执行默认操作\necho ****************************************\n\nset FOLDER=%~dp0\nset TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\nset /p opt=请输入:\n\nif \"%opt%\"==\"0\" goto exit\nif \"%opt%\"==\"1\" goto get_log\nif \"%opt%\"==\"\" goto default\n\n:default\necho 执行默认操作\necho 我啥也没干\npause\ngoto start\n\n:get_log\necho opt=%opt%\necho 获取applog\necho 目标路径为 %FOLDER%%TIMESTAMP%\n::adb pull applog路径 目标路径\npause\ngoto start\n\n:clean_log\necho opt=%opt%\necho 清理applog\nadb remount\n::adb shell rm -r xxx\npause\ngoto start\n```","slug":"10_安卓客户端取日志脚本","published":1,"updated":"2024-04-14T04:15:16.109Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rek000pfd2zbwtsbmex","content":"<p>安卓客户端取日志脚本：8ii8i i<br><span id=\"more\"></span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\"></span><br><span class=\"line\">::初始化脚本</span><br><span class=\"line\">:start</span><br><span class=\"line\">cls</span><br><span class=\"line\">echo ****************************************</span><br><span class=\"line\">echo [请输入：0]        退出</span><br><span class=\"line\">echo [请输入：1]        获取applog</span><br><span class=\"line\">echo [请输入：2]        清理applog</span><br><span class=\"line\">echo [直接输入回车]   执行默认操作</span><br><span class=\"line\">echo ****************************************</span><br><span class=\"line\"></span><br><span class=\"line\">set FOLDER=%~dp0</span><br><span class=\"line\">set TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</span><br><span class=\"line\">set /p opt=请输入:</span><br><span class=\"line\"></span><br><span class=\"line\">if &quot;%opt%&quot;==&quot;0&quot; goto exit</span><br><span class=\"line\">if &quot;%opt%&quot;==&quot;1&quot; goto get_log</span><br><span class=\"line\">if &quot;%opt%&quot;==&quot;&quot; goto default</span><br><span class=\"line\"></span><br><span class=\"line\">:default</span><br><span class=\"line\">echo 执行默认操作</span><br><span class=\"line\">echo 我啥也没干</span><br><span class=\"line\">pause</span><br><span class=\"line\">goto start</span><br><span class=\"line\"></span><br><span class=\"line\">:get_log</span><br><span class=\"line\">echo opt=%opt%</span><br><span class=\"line\">echo 获取applog</span><br><span class=\"line\">echo 目标路径为 %FOLDER%%TIMESTAMP%</span><br><span class=\"line\">::adb pull applog路径 目标路径</span><br><span class=\"line\">pause</span><br><span class=\"line\">goto start</span><br><span class=\"line\"></span><br><span class=\"line\">:clean_log</span><br><span class=\"line\">echo opt=%opt%</span><br><span class=\"line\">echo 清理applog</span><br><span class=\"line\">adb remount</span><br><span class=\"line\">::adb shell rm -r xxx</span><br><span class=\"line\">pause</span><br><span class=\"line\">goto start</span><br></pre></td></tr></table></figure><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<p>安卓客户端取日志脚本：8ii8i i<br>","more":"</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\"></span><br><span class=\"line\">::初始化脚本</span><br><span class=\"line\">:start</span><br><span class=\"line\">cls</span><br><span class=\"line\">echo ****************************************</span><br><span class=\"line\">echo [请输入：0]        退出</span><br><span class=\"line\">echo [请输入：1]        获取applog</span><br><span class=\"line\">echo [请输入：2]        清理applog</span><br><span class=\"line\">echo [直接输入回车]   执行默认操作</span><br><span class=\"line\">echo ****************************************</span><br><span class=\"line\"></span><br><span class=\"line\">set FOLDER=%~dp0</span><br><span class=\"line\">set TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</span><br><span class=\"line\">set /p opt=请输入:</span><br><span class=\"line\"></span><br><span class=\"line\">if &quot;%opt%&quot;==&quot;0&quot; goto exit</span><br><span class=\"line\">if &quot;%opt%&quot;==&quot;1&quot; goto get_log</span><br><span class=\"line\">if &quot;%opt%&quot;==&quot;&quot; goto default</span><br><span class=\"line\"></span><br><span class=\"line\">:default</span><br><span class=\"line\">echo 执行默认操作</span><br><span class=\"line\">echo 我啥也没干</span><br><span class=\"line\">pause</span><br><span class=\"line\">goto start</span><br><span class=\"line\"></span><br><span class=\"line\">:get_log</span><br><span class=\"line\">echo opt=%opt%</span><br><span class=\"line\">echo 获取applog</span><br><span class=\"line\">echo 目标路径为 %FOLDER%%TIMESTAMP%</span><br><span class=\"line\">::adb pull applog路径 目标路径</span><br><span class=\"line\">pause</span><br><span class=\"line\">goto start</span><br><span class=\"line\"></span><br><span class=\"line\">:clean_log</span><br><span class=\"line\">echo opt=%opt%</span><br><span class=\"line\">echo 清理applog</span><br><span class=\"line\">adb remount</span><br><span class=\"line\">::adb shell rm -r xxx</span><br><span class=\"line\">pause</span><br><span class=\"line\">goto start</span><br></pre></td></tr></table></figure>"},{"title":"让你的hexo支持mermaid","date":"2019-05-26T08:56:24.000Z","_content":"\n#### mermaid配置方法\n\nMermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:\n\n1. npm安装mermaid渲染插件:\n\n```bash\nnpm install hexo-filter-mermaid-diagrams --save\n```\n\n2. 在Hexo博客的根目录下,修改`_config.yml`文件,添加以下配置:\n\n```yaml\nmermaid:\n  enable: true\n  theme: default\n```\n\n3. 在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n<!--more-->\n\n参考文章：\n\n    https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\n    https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n\n####  hexo绘制脑图\n\n参考文章：\n\n    https://qsli.github.io/2017/01/01/markdown-mindmap/\n    https://github.com/HunterXuan/hexo-simple-mindmap\n\n\n#### 配置完成后，使用mermaid语法\n\n##### 流程图\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n##### 时序图\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n##### 甘特图\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```\n\n##### 脑图\n{% pullquote mindmap mindmap-md %}\n- [在 Hexo 中使用思维导图](https://hunterx.xyz/use-mindmap-in-hexo.html)\n  - 前言\n  - 操作指南\n    - 准备需要的文件\n    - 为主题添加 CSS/JS 文件\n  - 使用方法\n{% endpullquote %}","source":"_posts/11_让你的Hexo支持mermaid.md","raw":"---\ntitle: 让你的hexo支持mermaid\ndate: 2019-05-26 16:56:24\ntags: hexo\n---\n\n#### mermaid配置方法\n\nMermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:\n\n1. npm安装mermaid渲染插件:\n\n```bash\nnpm install hexo-filter-mermaid-diagrams --save\n```\n\n2. 在Hexo博客的根目录下,修改`_config.yml`文件,添加以下配置:\n\n```yaml\nmermaid:\n  enable: true\n  theme: default\n```\n\n3. 在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n<!--more-->\n\n参考文章：\n\n    https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\n    https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n\n####  hexo绘制脑图\n\n参考文章：\n\n    https://qsli.github.io/2017/01/01/markdown-mindmap/\n    https://github.com/HunterXuan/hexo-simple-mindmap\n\n\n#### 配置完成后，使用mermaid语法\n\n##### 流程图\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n##### 时序图\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n##### 甘特图\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```\n\n##### 脑图\n{% pullquote mindmap mindmap-md %}\n- [在 Hexo 中使用思维导图](https://hunterx.xyz/use-mindmap-in-hexo.html)\n  - 前言\n  - 操作指南\n    - 准备需要的文件\n    - 为主题添加 CSS/JS 文件\n  - 使用方法\n{% endpullquote %}","slug":"11_让你的Hexo支持mermaid","published":1,"updated":"2025-01-03T15:17:19.536Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rek000rfd2z9kifak6y","content":"<h4 id=\"mermaid配置方法\"><a href=\"#mermaid配置方法\" class=\"headerlink\" title=\"mermaid配置方法\"></a>mermaid配置方法</h4><p>Mermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:</p>\n<ol>\n<li>npm安装mermaid渲染插件:</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-filter-mermaid-diagrams --save</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在Hexo博客的根目录下,修改<code>_config.yml</code>文件,添加以下配置:</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mermaid:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">default</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:</li>\n</ol>\n<pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<span id=\"more\"></span>\n<p>参考文章：</p>\n<pre><code>https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\nhttps://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n</code></pre><h4 id=\"hexo绘制脑图\"><a href=\"#hexo绘制脑图\" class=\"headerlink\" title=\"hexo绘制脑图\"></a>hexo绘制脑图</h4><p>参考文章：</p>\n<pre><code>https://qsli.github.io/2017/01/01/markdown-mindmap/\nhttps://github.com/HunterXuan/hexo-simple-mindmap\n</code></pre><h4 id=\"配置完成后，使用mermaid语法\"><a href=\"#配置完成后，使用mermaid语法\" class=\"headerlink\" title=\"配置完成后，使用mermaid语法\"></a>配置完成后，使用mermaid语法</h4><h5 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h5><pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h5 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h5><pre class=\"mermaid\">sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!</pre>\n\n<h5 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h5><pre class=\"mermaid\">gantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d</pre>\n\n<h5 id=\"脑图\"><a href=\"#脑图\" class=\"headerlink\" title=\"脑图\"></a>脑图</h5><blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"https://hunterx.xyz/use-mindmap-in-hexo.html\">在 Hexo 中使用思维导图</a><ul>\n<li>前言</li>\n<li>操作指南<ul>\n<li>准备需要的文件</li>\n<li>为主题添加 CSS/JS 文件</li>\n</ul>\n</li>\n<li>使用方法</li>\n</ul>\n</li>\n</ul>\n</blockquote><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"mermaid配置方法\"><a href=\"#mermaid配置方法\" class=\"headerlink\" title=\"mermaid配置方法\"></a>mermaid配置方法</h4><p>Mermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:</p>\n<ol>\n<li>npm安装mermaid渲染插件:</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-filter-mermaid-diagrams --save</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在Hexo博客的根目录下,修改<code>_config.yml</code>文件,添加以下配置:</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mermaid:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">default</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:</li>\n</ol>\n<pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>","more":"<p>参考文章：</p>\n<pre><code>https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\nhttps://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n</code></pre><h4 id=\"hexo绘制脑图\"><a href=\"#hexo绘制脑图\" class=\"headerlink\" title=\"hexo绘制脑图\"></a>hexo绘制脑图</h4><p>参考文章：</p>\n<pre><code>https://qsli.github.io/2017/01/01/markdown-mindmap/\nhttps://github.com/HunterXuan/hexo-simple-mindmap\n</code></pre><h4 id=\"配置完成后，使用mermaid语法\"><a href=\"#配置完成后，使用mermaid语法\" class=\"headerlink\" title=\"配置完成后，使用mermaid语法\"></a>配置完成后，使用mermaid语法</h4><h5 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h5><pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h5 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h5><pre class=\"mermaid\">sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!</pre>\n\n<h5 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h5><pre class=\"mermaid\">gantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d</pre>\n\n<h5 id=\"脑图\"><a href=\"#脑图\" class=\"headerlink\" title=\"脑图\"></a>脑图</h5><blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"https://hunterx.xyz/use-mindmap-in-hexo.html\">在 Hexo 中使用思维导图</a><ul>\n<li>前言</li>\n<li>操作指南<ul>\n<li>准备需要的文件</li>\n<li>为主题添加 CSS/JS 文件</li>\n</ul>\n</li>\n<li>使用方法</li>\n</ul>\n</li>\n</ul>\n</blockquote>"},{"title":"客户端测试方案的设计思路","date":"2020-08-31T12:32:18.000Z","_content":"\n#### 5W1H原则\n\n在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。\n\nhow：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。\n\nwhy：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。\n\nwhat：我需要做什么？任务的目的是什么？\n\nwhen：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？\n\nwho：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？\n\nwhere：相关资源的位置和路径，版本、文档。\n\n测试方案对应的需要呈现以上6个方面的问题：\n1. why-需求背景、需求内容\n2. where-资源文件归档路径\n3. what-测试的范围\n4. when-测试的周期\n5. who-参与的人员\n6. how-测试的策略\n\n<!--more-->\n\n#### 测试设计需要考虑的角度\n\n{% pullquote mindmap mindmap-lg %}\n- 测试设计需要考虑的角度\n\t- 功能测试\n\t- 页面校验\n\t- 性能指标\n\t- 异常\n\t- 功能交互\n\t- 容限测试\n\t- 极限\n\t- 可靠性\n\t- 国际化\n\t- 可维护\n{% endpullquote %}\n\n\n#### 测试设计需要考虑的影响因素\n\n{% pullquote mindmap mindmap-lg %}\n- 影响因子\n\t- 空间状态\n\t\t- 云储存空间\n\t\t- 本地存储空间\n\t- 账号状态\n\t\t- AT/ST失效\n\t\t- 退出账号\n\t\t- 销户\n\t- 网络状态\n\t\t- 网络类型\n\t\t- 网络切换\n\t\t- 网络质量\n\t- 服务器状态\n\t\t- 密钥服务\n\t\t- 域名解析服务\n\t\t- 数据库服务\n\t\t- 鉴权服务\n\t\t- 存储平台\n\t\t- 负载平衡\n\t- 用户操作\n\t\t- 重试\n\t\t\t- 连续操作\n\t\t\t- 反复取消/重试\n\t\t\t- 反复暂停/重试\n\t\t\t- 失败/重试\n\t\t- 缓存\n\t\t- 进程\n\t\t- 本地数据库清理\n\t\t- 权限修改\n\t\t- 时间修改\n{% endpullquote %}","source":"_posts/12_测试方案的设计思路.md","raw":"---\ntitle: 客户端测试方案的设计思路\ndate: 2020-08-31 20:32:18\ntags: 总结\n---\n\n#### 5W1H原则\n\n在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。\n\nhow：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。\n\nwhy：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。\n\nwhat：我需要做什么？任务的目的是什么？\n\nwhen：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？\n\nwho：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？\n\nwhere：相关资源的位置和路径，版本、文档。\n\n测试方案对应的需要呈现以上6个方面的问题：\n1. why-需求背景、需求内容\n2. where-资源文件归档路径\n3. what-测试的范围\n4. when-测试的周期\n5. who-参与的人员\n6. how-测试的策略\n\n<!--more-->\n\n#### 测试设计需要考虑的角度\n\n{% pullquote mindmap mindmap-lg %}\n- 测试设计需要考虑的角度\n\t- 功能测试\n\t- 页面校验\n\t- 性能指标\n\t- 异常\n\t- 功能交互\n\t- 容限测试\n\t- 极限\n\t- 可靠性\n\t- 国际化\n\t- 可维护\n{% endpullquote %}\n\n\n#### 测试设计需要考虑的影响因素\n\n{% pullquote mindmap mindmap-lg %}\n- 影响因子\n\t- 空间状态\n\t\t- 云储存空间\n\t\t- 本地存储空间\n\t- 账号状态\n\t\t- AT/ST失效\n\t\t- 退出账号\n\t\t- 销户\n\t- 网络状态\n\t\t- 网络类型\n\t\t- 网络切换\n\t\t- 网络质量\n\t- 服务器状态\n\t\t- 密钥服务\n\t\t- 域名解析服务\n\t\t- 数据库服务\n\t\t- 鉴权服务\n\t\t- 存储平台\n\t\t- 负载平衡\n\t- 用户操作\n\t\t- 重试\n\t\t\t- 连续操作\n\t\t\t- 反复取消/重试\n\t\t\t- 反复暂停/重试\n\t\t\t- 失败/重试\n\t\t- 缓存\n\t\t- 进程\n\t\t- 本地数据库清理\n\t\t- 权限修改\n\t\t- 时间修改\n{% endpullquote %}","slug":"12_测试方案的设计思路","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rel000tfd2z6c080vah","content":"<h4 id=\"5W1H原则\"><a href=\"#5W1H原则\" class=\"headerlink\" title=\"5W1H原则\"></a>5W1H原则</h4><p>在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。</p>\n<p>how：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。</p>\n<p>why：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。</p>\n<p>what：我需要做什么？任务的目的是什么？</p>\n<p>when：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？</p>\n<p>who：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？</p>\n<p>where：相关资源的位置和路径，版本、文档。</p>\n<p>测试方案对应的需要呈现以上6个方面的问题：</p>\n<ol>\n<li>why-需求背景、需求内容</li>\n<li>where-资源文件归档路径</li>\n<li>what-测试的范围</li>\n<li>when-测试的周期</li>\n<li>who-参与的人员</li>\n<li>how-测试的策略</li>\n</ol>\n<span id=\"more\"></span>\n<h4 id=\"测试设计需要考虑的角度\"><a href=\"#测试设计需要考虑的角度\" class=\"headerlink\" title=\"测试设计需要考虑的角度\"></a>测试设计需要考虑的角度</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>测试设计需要考虑的角度<ul>\n<li>功能测试</li>\n<li>页面校验</li>\n<li>性能指标</li>\n<li>异常</li>\n<li>功能交互</li>\n<li>容限测试</li>\n<li>极限</li>\n<li>可靠性</li>\n<li>国际化</li>\n<li>可维护</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"测试设计需要考虑的影响因素\"><a href=\"#测试设计需要考虑的影响因素\" class=\"headerlink\" title=\"测试设计需要考虑的影响因素\"></a>测试设计需要考虑的影响因素</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>影响因子<ul>\n<li>空间状态<ul>\n<li>云储存空间</li>\n<li>本地存储空间</li>\n</ul>\n</li>\n<li>账号状态<ul>\n<li>AT/ST失效</li>\n<li>退出账号</li>\n<li>销户</li>\n</ul>\n</li>\n<li>网络状态<ul>\n<li>网络类型</li>\n<li>网络切换</li>\n<li>网络质量</li>\n</ul>\n</li>\n<li>服务器状态<ul>\n<li>密钥服务</li>\n<li>域名解析服务</li>\n<li>数据库服务</li>\n<li>鉴权服务</li>\n<li>存储平台</li>\n<li>负载平衡</li>\n</ul>\n</li>\n<li>用户操作<ul>\n<li>重试<ul>\n<li>连续操作</li>\n<li>反复取消/重试</li>\n<li>反复暂停/重试</li>\n<li>失败/重试</li>\n</ul>\n</li>\n<li>缓存</li>\n<li>进程</li>\n<li>本地数据库清理</li>\n<li>权限修改</li>\n<li>时间修改</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"5W1H原则\"><a href=\"#5W1H原则\" class=\"headerlink\" title=\"5W1H原则\"></a>5W1H原则</h4><p>在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。</p>\n<p>how：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。</p>\n<p>why：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。</p>\n<p>what：我需要做什么？任务的目的是什么？</p>\n<p>when：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？</p>\n<p>who：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？</p>\n<p>where：相关资源的位置和路径，版本、文档。</p>\n<p>测试方案对应的需要呈现以上6个方面的问题：</p>\n<ol>\n<li>why-需求背景、需求内容</li>\n<li>where-资源文件归档路径</li>\n<li>what-测试的范围</li>\n<li>when-测试的周期</li>\n<li>who-参与的人员</li>\n<li>how-测试的策略</li>\n</ol>","more":"<h4 id=\"测试设计需要考虑的角度\"><a href=\"#测试设计需要考虑的角度\" class=\"headerlink\" title=\"测试设计需要考虑的角度\"></a>测试设计需要考虑的角度</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>测试设计需要考虑的角度<ul>\n<li>功能测试</li>\n<li>页面校验</li>\n<li>性能指标</li>\n<li>异常</li>\n<li>功能交互</li>\n<li>容限测试</li>\n<li>极限</li>\n<li>可靠性</li>\n<li>国际化</li>\n<li>可维护</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"测试设计需要考虑的影响因素\"><a href=\"#测试设计需要考虑的影响因素\" class=\"headerlink\" title=\"测试设计需要考虑的影响因素\"></a>测试设计需要考虑的影响因素</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>影响因子<ul>\n<li>空间状态<ul>\n<li>云储存空间</li>\n<li>本地存储空间</li>\n</ul>\n</li>\n<li>账号状态<ul>\n<li>AT/ST失效</li>\n<li>退出账号</li>\n<li>销户</li>\n</ul>\n</li>\n<li>网络状态<ul>\n<li>网络类型</li>\n<li>网络切换</li>\n<li>网络质量</li>\n</ul>\n</li>\n<li>服务器状态<ul>\n<li>密钥服务</li>\n<li>域名解析服务</li>\n<li>数据库服务</li>\n<li>鉴权服务</li>\n<li>存储平台</li>\n<li>负载平衡</li>\n</ul>\n</li>\n<li>用户操作<ul>\n<li>重试<ul>\n<li>连续操作</li>\n<li>反复取消/重试</li>\n<li>反复暂停/重试</li>\n<li>失败/重试</li>\n</ul>\n</li>\n<li>缓存</li>\n<li>进程</li>\n<li>本地数据库清理</li>\n<li>权限修改</li>\n<li>时间修改</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>"},{"title":"测试工作的一些总结","date":"2019-07-07T12:32:18.000Z","_content":"\n#### 手工测试\n\n##### 测试流程规范\n1. 产品从立项到发布要经历的流程\n\n    1. 立项流程：收集需求（用户、销售、领导等）->立项（产品经理）->决策（领导）\n    2. 设计阶段：需求澄清（产品经理）->产品设计（UI、架构）->开发story->测试方案\n    3. 开发&转测：进度把控-风险评估\n    4. 客户验收：结项\n\n2. 测试的职责\n\n    1. 输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）\n    2. 执行测试用例\n    3. 缺陷跟踪\n    4. 输出测试报告、测试总结等\n\n##### 测试人员需要掌握的技能\n1. 产品从立项到发布的各个流程中，测试需要关注的地方\n\n   1. 立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理\n   2. 设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）\n   3. 测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责\n      1. 测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）\n      2. 测试用例要按照功能测试设计将操作步骤、检查点逐一细化\n      2. 测试执行要覆盖到测试用例的每一个测试步骤和检查点\n      3. 缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例\n\n参考：[怎样制定一个合格的测试方案](https://blog.csdn.net/alice_tl/article/details/80218342)\n\n<!--more-->\n\n#### 自动化测试\n1. 常见的自动化测试框架\n\n    1. Appium和Selenium了解\n    2. 开源的自动化框架上手\n\n2. 自动化脚本编写语言\n\n    java和python\n\n3. 自动化构建的思路\n    \n    1. 从脚本到aw，再到框架\n    2. 自动构建任务，远程执行\n    3. 测试报告的生成\n\n4. 从手工用例到自动化用例转化的注意点\n\n    1. 自动化用例覆盖范围的评审\n    2. 自动化用例执行失败用例的定位\n\n#### 服务端压测怎么做\nhttps://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\n\n#### 关于兼容性测试\n兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。\n\n\n#### 关于测试的一些想法\n我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？\n\n看到一个个很好的建议：\n\n1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力\n\n2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿\n\n3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中\n\n4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试\n\n5、测试的本质是发现问题，而不是解决问题，解决问题是开发的事情，测试的职责是发现问题，并给出解决方案\n\n\n// ... 前面的内容保持不变 ...\n\n#### 测试工作的本质思考\n\n##### 核心问题\n测试工作的本质是什么？这个职业存在是为了解决什么问题？\n- 提升质量\n- 增加效率\n\n##### 1. 测试的本质目标\n- **质量提升**\n  - 发现并预防缺陷\n  - 保证产品可用性\n  - 提升用户体验\n- **效率增加**\n  - 优化测试流程\n  - 减少重复工作\n  - 加快反馈速度\n\n##### 2. 数据分析能力的重要性\n\n##### 缺陷分析维度\n- **功能分布**\n  - 哪些模块缺陷多发\n  - 是否存在模块间关联性\n  - 功能覆盖度分析\n\n- **时间分布**\n  - 缺陷发现的时间节点\n  - 项目周期的关键时间点\n  - 修复时间分析\n\n- **用例效率**\n  - 高效用例的特征\n  - 用例设计的优化方向\n  - 测试策略的调整依据\n\n##### 分析方法\n- 数据可视化\n- 趋势分析\n- 根因分析\n- 相关性分析\n\n##### 3. 个人能力复盘\n\n##### 复盘维度\n- **技术能力**\n  - 测试理论基础\n  - 自动化测试水平\n  - 问题分析能力\n  \n- **业务能力**\n  - 业务理解深度\n  - 需求分析能力\n  - 场景设计能力\n\n- **软技能**\n  - 沟通协作\n  - 项目管理\n  - 文档输出\n\n##### 复盘方法\n- 定期总结文档\n- 技能图谱绘制\n- 能力模型对标\n\n#####  4. 效率提升方法\n\n##### 工具层面\n- 自动化脚本\n- 效率工具开发\n- 测试框架搭建\n\n##### 流程层面\n- 流程优化\n- 协作模式改进\n- 文档标准化\n\n##### 5. 全面认知\n\n##### 系统认知\n- **业务架构**\n  - 业务流程\n  - 业务规则\n  - 业务价值\n\n- **技术架构**\n  - 系统组件\n  - 接口设计\n  - 数据流转\n\n- **部署架构**\n  - 环境配置\n  - 部署策略\n  - 监控告警\n\n- **数据架构**\n  - 数据模型\n  - 数据流向\n  - 数据质量\n\n##### 实践建议\n\n1. **建立数据意识**\n   - 收集关键指标\n   - 建立分析模型\n   - 形成决策依据\n\n2. **持续学习**\n   - 技术栈扩展\n   - 业务深度理解\n   - 工具方法创新\n\n3. **效率工具**\n   - 从小工具开始\n   - 解决实际问题\n   - 循序渐进提升\n\n4. **全局视角**\n   - 理解系统全貌\n   - 把握核心架构\n   - 关注业务价值\n","source":"_posts/14_测试工作的一些总结.md","raw":"---\ntitle: 测试工作的一些总结\ndate: 2019-07-07 20:32:18\ntags: 总结,android\n---\n\n#### 手工测试\n\n##### 测试流程规范\n1. 产品从立项到发布要经历的流程\n\n    1. 立项流程：收集需求（用户、销售、领导等）->立项（产品经理）->决策（领导）\n    2. 设计阶段：需求澄清（产品经理）->产品设计（UI、架构）->开发story->测试方案\n    3. 开发&转测：进度把控-风险评估\n    4. 客户验收：结项\n\n2. 测试的职责\n\n    1. 输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）\n    2. 执行测试用例\n    3. 缺陷跟踪\n    4. 输出测试报告、测试总结等\n\n##### 测试人员需要掌握的技能\n1. 产品从立项到发布的各个流程中，测试需要关注的地方\n\n   1. 立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理\n   2. 设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）\n   3. 测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责\n      1. 测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）\n      2. 测试用例要按照功能测试设计将操作步骤、检查点逐一细化\n      2. 测试执行要覆盖到测试用例的每一个测试步骤和检查点\n      3. 缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例\n\n参考：[怎样制定一个合格的测试方案](https://blog.csdn.net/alice_tl/article/details/80218342)\n\n<!--more-->\n\n#### 自动化测试\n1. 常见的自动化测试框架\n\n    1. Appium和Selenium了解\n    2. 开源的自动化框架上手\n\n2. 自动化脚本编写语言\n\n    java和python\n\n3. 自动化构建的思路\n    \n    1. 从脚本到aw，再到框架\n    2. 自动构建任务，远程执行\n    3. 测试报告的生成\n\n4. 从手工用例到自动化用例转化的注意点\n\n    1. 自动化用例覆盖范围的评审\n    2. 自动化用例执行失败用例的定位\n\n#### 服务端压测怎么做\nhttps://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\n\n#### 关于兼容性测试\n兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。\n\n\n#### 关于测试的一些想法\n我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？\n\n看到一个个很好的建议：\n\n1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力\n\n2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿\n\n3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中\n\n4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试\n\n5、测试的本质是发现问题，而不是解决问题，解决问题是开发的事情，测试的职责是发现问题，并给出解决方案\n\n\n// ... 前面的内容保持不变 ...\n\n#### 测试工作的本质思考\n\n##### 核心问题\n测试工作的本质是什么？这个职业存在是为了解决什么问题？\n- 提升质量\n- 增加效率\n\n##### 1. 测试的本质目标\n- **质量提升**\n  - 发现并预防缺陷\n  - 保证产品可用性\n  - 提升用户体验\n- **效率增加**\n  - 优化测试流程\n  - 减少重复工作\n  - 加快反馈速度\n\n##### 2. 数据分析能力的重要性\n\n##### 缺陷分析维度\n- **功能分布**\n  - 哪些模块缺陷多发\n  - 是否存在模块间关联性\n  - 功能覆盖度分析\n\n- **时间分布**\n  - 缺陷发现的时间节点\n  - 项目周期的关键时间点\n  - 修复时间分析\n\n- **用例效率**\n  - 高效用例的特征\n  - 用例设计的优化方向\n  - 测试策略的调整依据\n\n##### 分析方法\n- 数据可视化\n- 趋势分析\n- 根因分析\n- 相关性分析\n\n##### 3. 个人能力复盘\n\n##### 复盘维度\n- **技术能力**\n  - 测试理论基础\n  - 自动化测试水平\n  - 问题分析能力\n  \n- **业务能力**\n  - 业务理解深度\n  - 需求分析能力\n  - 场景设计能力\n\n- **软技能**\n  - 沟通协作\n  - 项目管理\n  - 文档输出\n\n##### 复盘方法\n- 定期总结文档\n- 技能图谱绘制\n- 能力模型对标\n\n#####  4. 效率提升方法\n\n##### 工具层面\n- 自动化脚本\n- 效率工具开发\n- 测试框架搭建\n\n##### 流程层面\n- 流程优化\n- 协作模式改进\n- 文档标准化\n\n##### 5. 全面认知\n\n##### 系统认知\n- **业务架构**\n  - 业务流程\n  - 业务规则\n  - 业务价值\n\n- **技术架构**\n  - 系统组件\n  - 接口设计\n  - 数据流转\n\n- **部署架构**\n  - 环境配置\n  - 部署策略\n  - 监控告警\n\n- **数据架构**\n  - 数据模型\n  - 数据流向\n  - 数据质量\n\n##### 实践建议\n\n1. **建立数据意识**\n   - 收集关键指标\n   - 建立分析模型\n   - 形成决策依据\n\n2. **持续学习**\n   - 技术栈扩展\n   - 业务深度理解\n   - 工具方法创新\n\n3. **效率工具**\n   - 从小工具开始\n   - 解决实际问题\n   - 循序渐进提升\n\n4. **全局视角**\n   - 理解系统全貌\n   - 把握核心架构\n   - 关注业务价值\n","slug":"14_测试工作的一些总结","published":1,"updated":"2025-01-05T15:49:53.546Z","_id":"cm5jr7rel000vfd2z08sj8vof","comments":1,"layout":"post","photos":[],"content":"<h4 id=\"手工测试\"><a href=\"#手工测试\" class=\"headerlink\" title=\"手工测试\"></a>手工测试</h4><h5 id=\"测试流程规范\"><a href=\"#测试流程规范\" class=\"headerlink\" title=\"测试流程规范\"></a>测试流程规范</h5><ol>\n<li><p>产品从立项到发布要经历的流程</p>\n<ol>\n<li>立项流程：收集需求（用户、销售、领导等）-&gt;立项（产品经理）-&gt;决策（领导）</li>\n<li>设计阶段：需求澄清（产品经理）-&gt;产品设计（UI、架构）-&gt;开发story-&gt;测试方案</li>\n<li>开发&amp;转测：进度把控-风险评估</li>\n<li>客户验收：结项</li>\n</ol>\n</li>\n<li><p>测试的职责</p>\n<ol>\n<li>输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）</li>\n<li>执行测试用例</li>\n<li>缺陷跟踪</li>\n<li>输出测试报告、测试总结等</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"测试人员需要掌握的技能\"><a href=\"#测试人员需要掌握的技能\" class=\"headerlink\" title=\"测试人员需要掌握的技能\"></a>测试人员需要掌握的技能</h5><ol>\n<li><p>产品从立项到发布的各个流程中，测试需要关注的地方</p>\n<ol>\n<li>立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理</li>\n<li>设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）</li>\n<li>测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责<ol>\n<li>测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）</li>\n<li>测试用例要按照功能测试设计将操作步骤、检查点逐一细化</li>\n<li>测试执行要覆盖到测试用例的每一个测试步骤和检查点</li>\n<li>缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>参考：<a href=\"https://blog.csdn.net/alice_tl/article/details/80218342\">怎样制定一个合格的测试方案</a></p>\n<span id=\"more\"></span>\n<h4 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h4><ol>\n<li><p>常见的自动化测试框架</p>\n<ol>\n<li>Appium和Selenium了解</li>\n<li>开源的自动化框架上手</li>\n</ol>\n</li>\n<li><p>自动化脚本编写语言</p>\n<p> java和python</p>\n</li>\n<li><p>自动化构建的思路</p>\n<ol>\n<li>从脚本到aw，再到框架</li>\n<li>自动构建任务，远程执行</li>\n<li>测试报告的生成</li>\n</ol>\n</li>\n<li><p>从手工用例到自动化用例转化的注意点</p>\n<ol>\n<li>自动化用例覆盖范围的评审</li>\n<li>自动化用例执行失败用例的定位</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"服务端压测怎么做\"><a href=\"#服务端压测怎么做\" class=\"headerlink\" title=\"服务端压测怎么做\"></a>服务端压测怎么做</h4><p><a href=\"https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\">https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/</a></p>\n<h4 id=\"关于兼容性测试\"><a href=\"#关于兼容性测试\" class=\"headerlink\" title=\"关于兼容性测试\"></a>关于兼容性测试</h4><p>兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。</p>\n<h4 id=\"关于测试的一些想法\"><a href=\"#关于测试的一些想法\" class=\"headerlink\" title=\"关于测试的一些想法\"></a>关于测试的一些想法</h4><p>我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？</p>\n<p>看到一个个很好的建议：</p>\n<p>1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力</p>\n<p>2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿</p>\n<p>3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中</p>\n<p>4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试</p>\n<p>5、测试的本质是发现问题，而不是解决问题，解决问题是开发的事情，测试的职责是发现问题，并给出解决方案</p>\n<p>// … 前面的内容保持不变 …</p>\n<h4 id=\"测试工作的本质思考\"><a href=\"#测试工作的本质思考\" class=\"headerlink\" title=\"测试工作的本质思考\"></a>测试工作的本质思考</h4><h5 id=\"核心问题\"><a href=\"#核心问题\" class=\"headerlink\" title=\"核心问题\"></a>核心问题</h5><p>测试工作的本质是什么？这个职业存在是为了解决什么问题？</p>\n<ul>\n<li>提升质量</li>\n<li>增加效率</li>\n</ul>\n<h5 id=\"1-测试的本质目标\"><a href=\"#1-测试的本质目标\" class=\"headerlink\" title=\"1. 测试的本质目标\"></a>1. 测试的本质目标</h5><ul>\n<li><strong>质量提升</strong><ul>\n<li>发现并预防缺陷</li>\n<li>保证产品可用性</li>\n<li>提升用户体验</li>\n</ul>\n</li>\n<li><strong>效率增加</strong><ul>\n<li>优化测试流程</li>\n<li>减少重复工作</li>\n<li>加快反馈速度</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-数据分析能力的重要性\"><a href=\"#2-数据分析能力的重要性\" class=\"headerlink\" title=\"2. 数据分析能力的重要性\"></a>2. 数据分析能力的重要性</h5><h5 id=\"缺陷分析维度\"><a href=\"#缺陷分析维度\" class=\"headerlink\" title=\"缺陷分析维度\"></a>缺陷分析维度</h5><ul>\n<li><p><strong>功能分布</strong></p>\n<ul>\n<li>哪些模块缺陷多发</li>\n<li>是否存在模块间关联性</li>\n<li>功能覆盖度分析</li>\n</ul>\n</li>\n<li><p><strong>时间分布</strong></p>\n<ul>\n<li>缺陷发现的时间节点</li>\n<li>项目周期的关键时间点</li>\n<li>修复时间分析</li>\n</ul>\n</li>\n<li><p><strong>用例效率</strong></p>\n<ul>\n<li>高效用例的特征</li>\n<li>用例设计的优化方向</li>\n<li>测试策略的调整依据</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"分析方法\"><a href=\"#分析方法\" class=\"headerlink\" title=\"分析方法\"></a>分析方法</h5><ul>\n<li>数据可视化</li>\n<li>趋势分析</li>\n<li>根因分析</li>\n<li>相关性分析</li>\n</ul>\n<h5 id=\"3-个人能力复盘\"><a href=\"#3-个人能力复盘\" class=\"headerlink\" title=\"3. 个人能力复盘\"></a>3. 个人能力复盘</h5><h5 id=\"复盘维度\"><a href=\"#复盘维度\" class=\"headerlink\" title=\"复盘维度\"></a>复盘维度</h5><ul>\n<li><p><strong>技术能力</strong></p>\n<ul>\n<li>测试理论基础</li>\n<li>自动化测试水平</li>\n<li>问题分析能力</li>\n</ul>\n</li>\n<li><p><strong>业务能力</strong></p>\n<ul>\n<li>业务理解深度</li>\n<li>需求分析能力</li>\n<li>场景设计能力</li>\n</ul>\n</li>\n<li><p><strong>软技能</strong></p>\n<ul>\n<li>沟通协作</li>\n<li>项目管理</li>\n<li>文档输出</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"复盘方法\"><a href=\"#复盘方法\" class=\"headerlink\" title=\"复盘方法\"></a>复盘方法</h5><ul>\n<li>定期总结文档</li>\n<li>技能图谱绘制</li>\n<li>能力模型对标</li>\n</ul>\n<h5 id=\"4-效率提升方法\"><a href=\"#4-效率提升方法\" class=\"headerlink\" title=\"4. 效率提升方法\"></a>4. 效率提升方法</h5><h5 id=\"工具层面\"><a href=\"#工具层面\" class=\"headerlink\" title=\"工具层面\"></a>工具层面</h5><ul>\n<li>自动化脚本</li>\n<li>效率工具开发</li>\n<li>测试框架搭建</li>\n</ul>\n<h5 id=\"流程层面\"><a href=\"#流程层面\" class=\"headerlink\" title=\"流程层面\"></a>流程层面</h5><ul>\n<li>流程优化</li>\n<li>协作模式改进</li>\n<li>文档标准化</li>\n</ul>\n<h5 id=\"5-全面认知\"><a href=\"#5-全面认知\" class=\"headerlink\" title=\"5. 全面认知\"></a>5. 全面认知</h5><h5 id=\"系统认知\"><a href=\"#系统认知\" class=\"headerlink\" title=\"系统认知\"></a>系统认知</h5><ul>\n<li><p><strong>业务架构</strong></p>\n<ul>\n<li>业务流程</li>\n<li>业务规则</li>\n<li>业务价值</li>\n</ul>\n</li>\n<li><p><strong>技术架构</strong></p>\n<ul>\n<li>系统组件</li>\n<li>接口设计</li>\n<li>数据流转</li>\n</ul>\n</li>\n<li><p><strong>部署架构</strong></p>\n<ul>\n<li>环境配置</li>\n<li>部署策略</li>\n<li>监控告警</li>\n</ul>\n</li>\n<li><p><strong>数据架构</strong></p>\n<ul>\n<li>数据模型</li>\n<li>数据流向</li>\n<li>数据质量</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"实践建议\"><a href=\"#实践建议\" class=\"headerlink\" title=\"实践建议\"></a>实践建议</h5><ol>\n<li><p><strong>建立数据意识</strong></p>\n<ul>\n<li>收集关键指标</li>\n<li>建立分析模型</li>\n<li>形成决策依据</li>\n</ul>\n</li>\n<li><p><strong>持续学习</strong></p>\n<ul>\n<li>技术栈扩展</li>\n<li>业务深度理解</li>\n<li>工具方法创新</li>\n</ul>\n</li>\n<li><p><strong>效率工具</strong></p>\n<ul>\n<li>从小工具开始</li>\n<li>解决实际问题</li>\n<li>循序渐进提升</li>\n</ul>\n</li>\n<li><p><strong>全局视角</strong></p>\n<ul>\n<li>理解系统全貌</li>\n<li>把握核心架构</li>\n<li>关注业务价值</li>\n</ul>\n</li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"手工测试\"><a href=\"#手工测试\" class=\"headerlink\" title=\"手工测试\"></a>手工测试</h4><h5 id=\"测试流程规范\"><a href=\"#测试流程规范\" class=\"headerlink\" title=\"测试流程规范\"></a>测试流程规范</h5><ol>\n<li><p>产品从立项到发布要经历的流程</p>\n<ol>\n<li>立项流程：收集需求（用户、销售、领导等）-&gt;立项（产品经理）-&gt;决策（领导）</li>\n<li>设计阶段：需求澄清（产品经理）-&gt;产品设计（UI、架构）-&gt;开发story-&gt;测试方案</li>\n<li>开发&amp;转测：进度把控-风险评估</li>\n<li>客户验收：结项</li>\n</ol>\n</li>\n<li><p>测试的职责</p>\n<ol>\n<li>输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）</li>\n<li>执行测试用例</li>\n<li>缺陷跟踪</li>\n<li>输出测试报告、测试总结等</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"测试人员需要掌握的技能\"><a href=\"#测试人员需要掌握的技能\" class=\"headerlink\" title=\"测试人员需要掌握的技能\"></a>测试人员需要掌握的技能</h5><ol>\n<li><p>产品从立项到发布的各个流程中，测试需要关注的地方</p>\n<ol>\n<li>立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理</li>\n<li>设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）</li>\n<li>测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责<ol>\n<li>测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）</li>\n<li>测试用例要按照功能测试设计将操作步骤、检查点逐一细化</li>\n<li>测试执行要覆盖到测试用例的每一个测试步骤和检查点</li>\n<li>缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>参考：<a href=\"https://blog.csdn.net/alice_tl/article/details/80218342\">怎样制定一个合格的测试方案</a></p>","more":"<h4 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h4><ol>\n<li><p>常见的自动化测试框架</p>\n<ol>\n<li>Appium和Selenium了解</li>\n<li>开源的自动化框架上手</li>\n</ol>\n</li>\n<li><p>自动化脚本编写语言</p>\n<p> java和python</p>\n</li>\n<li><p>自动化构建的思路</p>\n<ol>\n<li>从脚本到aw，再到框架</li>\n<li>自动构建任务，远程执行</li>\n<li>测试报告的生成</li>\n</ol>\n</li>\n<li><p>从手工用例到自动化用例转化的注意点</p>\n<ol>\n<li>自动化用例覆盖范围的评审</li>\n<li>自动化用例执行失败用例的定位</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"服务端压测怎么做\"><a href=\"#服务端压测怎么做\" class=\"headerlink\" title=\"服务端压测怎么做\"></a>服务端压测怎么做</h4><p><a href=\"https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\">https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/</a></p>\n<h4 id=\"关于兼容性测试\"><a href=\"#关于兼容性测试\" class=\"headerlink\" title=\"关于兼容性测试\"></a>关于兼容性测试</h4><p>兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。</p>\n<h4 id=\"关于测试的一些想法\"><a href=\"#关于测试的一些想法\" class=\"headerlink\" title=\"关于测试的一些想法\"></a>关于测试的一些想法</h4><p>我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？</p>\n<p>看到一个个很好的建议：</p>\n<p>1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力</p>\n<p>2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿</p>\n<p>3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中</p>\n<p>4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试</p>\n<p>5、测试的本质是发现问题，而不是解决问题，解决问题是开发的事情，测试的职责是发现问题，并给出解决方案</p>\n<p>// … 前面的内容保持不变 …</p>\n<h4 id=\"测试工作的本质思考\"><a href=\"#测试工作的本质思考\" class=\"headerlink\" title=\"测试工作的本质思考\"></a>测试工作的本质思考</h4><h5 id=\"核心问题\"><a href=\"#核心问题\" class=\"headerlink\" title=\"核心问题\"></a>核心问题</h5><p>测试工作的本质是什么？这个职业存在是为了解决什么问题？</p>\n<ul>\n<li>提升质量</li>\n<li>增加效率</li>\n</ul>\n<h5 id=\"1-测试的本质目标\"><a href=\"#1-测试的本质目标\" class=\"headerlink\" title=\"1. 测试的本质目标\"></a>1. 测试的本质目标</h5><ul>\n<li><strong>质量提升</strong><ul>\n<li>发现并预防缺陷</li>\n<li>保证产品可用性</li>\n<li>提升用户体验</li>\n</ul>\n</li>\n<li><strong>效率增加</strong><ul>\n<li>优化测试流程</li>\n<li>减少重复工作</li>\n<li>加快反馈速度</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-数据分析能力的重要性\"><a href=\"#2-数据分析能力的重要性\" class=\"headerlink\" title=\"2. 数据分析能力的重要性\"></a>2. 数据分析能力的重要性</h5><h5 id=\"缺陷分析维度\"><a href=\"#缺陷分析维度\" class=\"headerlink\" title=\"缺陷分析维度\"></a>缺陷分析维度</h5><ul>\n<li><p><strong>功能分布</strong></p>\n<ul>\n<li>哪些模块缺陷多发</li>\n<li>是否存在模块间关联性</li>\n<li>功能覆盖度分析</li>\n</ul>\n</li>\n<li><p><strong>时间分布</strong></p>\n<ul>\n<li>缺陷发现的时间节点</li>\n<li>项目周期的关键时间点</li>\n<li>修复时间分析</li>\n</ul>\n</li>\n<li><p><strong>用例效率</strong></p>\n<ul>\n<li>高效用例的特征</li>\n<li>用例设计的优化方向</li>\n<li>测试策略的调整依据</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"分析方法\"><a href=\"#分析方法\" class=\"headerlink\" title=\"分析方法\"></a>分析方法</h5><ul>\n<li>数据可视化</li>\n<li>趋势分析</li>\n<li>根因分析</li>\n<li>相关性分析</li>\n</ul>\n<h5 id=\"3-个人能力复盘\"><a href=\"#3-个人能力复盘\" class=\"headerlink\" title=\"3. 个人能力复盘\"></a>3. 个人能力复盘</h5><h5 id=\"复盘维度\"><a href=\"#复盘维度\" class=\"headerlink\" title=\"复盘维度\"></a>复盘维度</h5><ul>\n<li><p><strong>技术能力</strong></p>\n<ul>\n<li>测试理论基础</li>\n<li>自动化测试水平</li>\n<li>问题分析能力</li>\n</ul>\n</li>\n<li><p><strong>业务能力</strong></p>\n<ul>\n<li>业务理解深度</li>\n<li>需求分析能力</li>\n<li>场景设计能力</li>\n</ul>\n</li>\n<li><p><strong>软技能</strong></p>\n<ul>\n<li>沟通协作</li>\n<li>项目管理</li>\n<li>文档输出</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"复盘方法\"><a href=\"#复盘方法\" class=\"headerlink\" title=\"复盘方法\"></a>复盘方法</h5><ul>\n<li>定期总结文档</li>\n<li>技能图谱绘制</li>\n<li>能力模型对标</li>\n</ul>\n<h5 id=\"4-效率提升方法\"><a href=\"#4-效率提升方法\" class=\"headerlink\" title=\"4. 效率提升方法\"></a>4. 效率提升方法</h5><h5 id=\"工具层面\"><a href=\"#工具层面\" class=\"headerlink\" title=\"工具层面\"></a>工具层面</h5><ul>\n<li>自动化脚本</li>\n<li>效率工具开发</li>\n<li>测试框架搭建</li>\n</ul>\n<h5 id=\"流程层面\"><a href=\"#流程层面\" class=\"headerlink\" title=\"流程层面\"></a>流程层面</h5><ul>\n<li>流程优化</li>\n<li>协作模式改进</li>\n<li>文档标准化</li>\n</ul>\n<h5 id=\"5-全面认知\"><a href=\"#5-全面认知\" class=\"headerlink\" title=\"5. 全面认知\"></a>5. 全面认知</h5><h5 id=\"系统认知\"><a href=\"#系统认知\" class=\"headerlink\" title=\"系统认知\"></a>系统认知</h5><ul>\n<li><p><strong>业务架构</strong></p>\n<ul>\n<li>业务流程</li>\n<li>业务规则</li>\n<li>业务价值</li>\n</ul>\n</li>\n<li><p><strong>技术架构</strong></p>\n<ul>\n<li>系统组件</li>\n<li>接口设计</li>\n<li>数据流转</li>\n</ul>\n</li>\n<li><p><strong>部署架构</strong></p>\n<ul>\n<li>环境配置</li>\n<li>部署策略</li>\n<li>监控告警</li>\n</ul>\n</li>\n<li><p><strong>数据架构</strong></p>\n<ul>\n<li>数据模型</li>\n<li>数据流向</li>\n<li>数据质量</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"实践建议\"><a href=\"#实践建议\" class=\"headerlink\" title=\"实践建议\"></a>实践建议</h5><ol>\n<li><p><strong>建立数据意识</strong></p>\n<ul>\n<li>收集关键指标</li>\n<li>建立分析模型</li>\n<li>形成决策依据</li>\n</ul>\n</li>\n<li><p><strong>持续学习</strong></p>\n<ul>\n<li>技术栈扩展</li>\n<li>业务深度理解</li>\n<li>工具方法创新</li>\n</ul>\n</li>\n<li><p><strong>效率工具</strong></p>\n<ul>\n<li>从小工具开始</li>\n<li>解决实际问题</li>\n<li>循序渐进提升</li>\n</ul>\n</li>\n<li><p><strong>全局视角</strong></p>\n<ul>\n<li>理解系统全貌</li>\n<li>把握核心架构</li>\n<li>关注业务价值</li>\n</ul>\n</li>\n</ol>"},{"title":"sublime插件安装","date":"2020-10-07T16:18:18.000Z","_content":"\n#### 如何安装插件详见：https://packagecontrol.io/installation\n\n#### OmniMarkupPreviwer\n实时在浏览器中预览markdown。快捷键如下：\nCtrl+Alt+O: Preview Markup in Browser.\nCtrl+Alt+X: Export Markup as HTML.\nCtrl+Alt+C: Copy Markup as HTML\n\n<!--more-->\n#### TableEditor\n\n|         操作         |      快捷键      |                         备注                         |\n|----------------------|------------------|------------------------------------------------------|\n| 启用                 | ctrl + shift + p | Table Editor: Enable for current syntax <br>or view  |\n| 禁用                 | ctrl + shift + p | Table Editor: Disable for current syntax <br>or view |\n| 快速建表             | ctrl + k, Enter  | 要先输入表的第一行                                   |\n| 跳转到下一列的单元格 | Tab              | shift + Tab跳转到上一个单元格                        |\n| 跳转到下一行的单元格 | Enter            |                                                      |\n| 添加一列             | alt + shift + 右 | 在光标所在列左侧插入一列                             |\n| 删除一列             | alt + shift + 左 | 删除光标所在列                                       |\n| 交换列位置           | alt + 左或右     | 将光标所在列和左或右侧列交换位置                     |\n| 添加一行             | alt + shift + 下 | 在光标所在行上方插入一行                             |\n| 删除一行             | alt + shift + 上 | 删除光标所在行                                       |\n| 交换行位置           | alt + 左或右     | 将光标所在行和上或下侧行交换位置                     |\n\t\n参考：\nhttps://www.jianshu.com/p/aa30cc25c91b\nhttps://segmentfault.com/a/1190000007935021","source":"_posts/13_sublimetext插件安装.md","raw":"---\ntitle: sublime插件安装\ndate: 2020-10-08 00:18:18\ntags: 工具\n---\n\n#### 如何安装插件详见：https://packagecontrol.io/installation\n\n#### OmniMarkupPreviwer\n实时在浏览器中预览markdown。快捷键如下：\nCtrl+Alt+O: Preview Markup in Browser.\nCtrl+Alt+X: Export Markup as HTML.\nCtrl+Alt+C: Copy Markup as HTML\n\n<!--more-->\n#### TableEditor\n\n|         操作         |      快捷键      |                         备注                         |\n|----------------------|------------------|------------------------------------------------------|\n| 启用                 | ctrl + shift + p | Table Editor: Enable for current syntax <br>or view  |\n| 禁用                 | ctrl + shift + p | Table Editor: Disable for current syntax <br>or view |\n| 快速建表             | ctrl + k, Enter  | 要先输入表的第一行                                   |\n| 跳转到下一列的单元格 | Tab              | shift + Tab跳转到上一个单元格                        |\n| 跳转到下一行的单元格 | Enter            |                                                      |\n| 添加一列             | alt + shift + 右 | 在光标所在列左侧插入一列                             |\n| 删除一列             | alt + shift + 左 | 删除光标所在列                                       |\n| 交换列位置           | alt + 左或右     | 将光标所在列和左或右侧列交换位置                     |\n| 添加一行             | alt + shift + 下 | 在光标所在行上方插入一行                             |\n| 删除一行             | alt + shift + 上 | 删除光标所在行                                       |\n| 交换行位置           | alt + 左或右     | 将光标所在行和上或下侧行交换位置                     |\n\t\n参考：\nhttps://www.jianshu.com/p/aa30cc25c91b\nhttps://segmentfault.com/a/1190000007935021","slug":"13_sublimetext插件安装","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7rel000xfd2z4lwc651w","content":"<h4 id=\"如何安装插件详见：https-packagecontrol-io-installation\"><a href=\"#如何安装插件详见：https-packagecontrol-io-installation\" class=\"headerlink\" title=\"如何安装插件详见：https://packagecontrol.io/installation\"></a>如何安装插件详见：<a href=\"https://packagecontrol.io/installation\">https://packagecontrol.io/installation</a></h4><h4 id=\"OmniMarkupPreviwer\"><a href=\"#OmniMarkupPreviwer\" class=\"headerlink\" title=\"OmniMarkupPreviwer\"></a>OmniMarkupPreviwer</h4><p>实时在浏览器中预览markdown。快捷键如下：<br>Ctrl+Alt+O: Preview Markup in Browser.<br>Ctrl+Alt+X: Export Markup as HTML.<br>Ctrl+Alt+C: Copy Markup as HTML</p>\n<span id=\"more\"></span>\n<h4 id=\"TableEditor\"><a href=\"#TableEditor\" class=\"headerlink\" title=\"TableEditor\"></a>TableEditor</h4><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>快捷键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Enable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>禁用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Disable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>快速建表</td>\n<td>ctrl + k, Enter</td>\n<td>要先输入表的第一行</td>\n</tr>\n<tr>\n<td>跳转到下一列的单元格</td>\n<td>Tab</td>\n<td>shift + Tab跳转到上一个单元格</td>\n</tr>\n<tr>\n<td>跳转到下一行的单元格</td>\n<td>Enter</td>\n<td></td>\n</tr>\n<tr>\n<td>添加一列</td>\n<td>alt + shift + 右</td>\n<td>在光标所在列左侧插入一列</td>\n</tr>\n<tr>\n<td>删除一列</td>\n<td>alt + shift + 左</td>\n<td>删除光标所在列</td>\n</tr>\n<tr>\n<td>交换列位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在列和左或右侧列交换位置</td>\n</tr>\n<tr>\n<td>添加一行</td>\n<td>alt + shift + 下</td>\n<td>在光标所在行上方插入一行</td>\n</tr>\n<tr>\n<td>删除一行</td>\n<td>alt + shift + 上</td>\n<td>删除光标所在行</td>\n</tr>\n<tr>\n<td>交换行位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在行和上或下侧行交换位置</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<br><a href=\"https://www.jianshu.com/p/aa30cc25c91b\">https://www.jianshu.com/p/aa30cc25c91b</a><br><a href=\"https://segmentfault.com/a/1190000007935021\">https://segmentfault.com/a/1190000007935021</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"如何安装插件详见：https-packagecontrol-io-installation\"><a href=\"#如何安装插件详见：https-packagecontrol-io-installation\" class=\"headerlink\" title=\"如何安装插件详见：https://packagecontrol.io/installation\"></a>如何安装插件详见：<a href=\"https://packagecontrol.io/installation\">https://packagecontrol.io/installation</a></h4><h4 id=\"OmniMarkupPreviwer\"><a href=\"#OmniMarkupPreviwer\" class=\"headerlink\" title=\"OmniMarkupPreviwer\"></a>OmniMarkupPreviwer</h4><p>实时在浏览器中预览markdown。快捷键如下：<br>Ctrl+Alt+O: Preview Markup in Browser.<br>Ctrl+Alt+X: Export Markup as HTML.<br>Ctrl+Alt+C: Copy Markup as HTML</p>","more":"<h4 id=\"TableEditor\"><a href=\"#TableEditor\" class=\"headerlink\" title=\"TableEditor\"></a>TableEditor</h4><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>快捷键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Enable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>禁用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Disable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>快速建表</td>\n<td>ctrl + k, Enter</td>\n<td>要先输入表的第一行</td>\n</tr>\n<tr>\n<td>跳转到下一列的单元格</td>\n<td>Tab</td>\n<td>shift + Tab跳转到上一个单元格</td>\n</tr>\n<tr>\n<td>跳转到下一行的单元格</td>\n<td>Enter</td>\n<td></td>\n</tr>\n<tr>\n<td>添加一列</td>\n<td>alt + shift + 右</td>\n<td>在光标所在列左侧插入一列</td>\n</tr>\n<tr>\n<td>删除一列</td>\n<td>alt + shift + 左</td>\n<td>删除光标所在列</td>\n</tr>\n<tr>\n<td>交换列位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在列和左或右侧列交换位置</td>\n</tr>\n<tr>\n<td>添加一行</td>\n<td>alt + shift + 下</td>\n<td>在光标所在行上方插入一行</td>\n</tr>\n<tr>\n<td>删除一行</td>\n<td>alt + shift + 上</td>\n<td>删除光标所在行</td>\n</tr>\n<tr>\n<td>交换行位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在行和上或下侧行交换位置</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<br><a href=\"https://www.jianshu.com/p/aa30cc25c91b\">https://www.jianshu.com/p/aa30cc25c91b</a><br><a href=\"https://segmentfault.com/a/1190000007935021\">https://segmentfault.com/a/1190000007935021</a></p>"},{"title":"读书笔记收集","date":"2024-12-31T16:00:00.000Z","_content":"\n#### 待阅读清单\n\n#### 已阅读清单\n- 《蛤蟆先生去看心理医生》\n- 《心流》\n- 《牧羊少年奇幻之旅》\n- 《悉达多》\n- 《人类简史》\n- 《曾国藩传》\n- 《乔布斯传》\n- 《小王子》\n- 《邓小平时代》\n- 《易中天品三国》\n- 《乒乓球有意思》\n- 《失落的卫星》\n- 《纳瓦尔宝典》\n- 《置身事内》\n- 《李光耀观天下》\n- 《为什么精英都是时间控》\n\n##### 《蛤蟆先生去看心理医生》读书笔记\n\n###### 核心内容概述\n\n1. **心理治疗的过程**\n   - 从抗拒到接纳\n   - 建立信任关系\n   - 逐步探索内心\n   - 认知重构与成长\n\n2. **主要心理问题**\n   - 自我否定\n   - 完美主义倾向\n   - 童年创伤\n   - 情绪管理困难\n   - 人际关系障碍\n\n3. **治疗方法与启示**\n   - 认知行为疗法\n   - 内在小孩疗愈\n   - 家庭系统治疗\n   - 正念练习\n   - 自我接纳\n\n###### 个人感悟与思考\n\n1. **关于自我认知**\n   - 接纳不完美的自己\n   - 理解情绪的根源\n   - 认识内在需求\n\n2. **关于成长**\n   - 改变始于觉察\n   - 治愈需要勇气\n   - 成长是持续过程\n\n3. **关于人际关系**\n   - 建立健康界限\n   - 学会表达需求\n   - 培养同理心\n\n4. **实践建议**\n   - 保持日常觉察\n   - 写日记梳理情绪\n   - 学会自我对话\n   - 寻求专业帮助\n\n\n##### 《心流》读书笔记\n\n1. **心流的核心要素**\n   - 明确的目标和即时反馈\n   - 挑战与能力的平衡\n   - 全神贯注的状态\n\n2. **进入心流的最佳条件**\n   - 选择\"擅长但不精通\"的领域\n   - 将大目标拆解成小任务\n   - 建立清晰的任务闭环\n   - 保持正向反馈\n\n3. **个人实践心得**\n   > 从乒乓球运动的经验来看，面对挑战时的态度至关重要。选择接受挑战还是逃避，会带来完全不同的结局。真正的技能提升需要：\n   > - 从理论上改变认知\n   > - 克服心理上的惧怕\n   > - 达到身心的放松\n   > - 通过正确练习形成肌肉记忆\n   > - 获得正向心理反馈\n\n4. **心流体验在不同领域的对比**\n   - 运动领域（以乒乓球为例）：\n     * 即时反馈明确\n     * 对手水平匹配时更容易进入状态\n     * 环境单纯，易于保持专注\n\n   - 工作领域（以编程为例）：\n     * 后端开发更容易进入心流：\n       - 微服务设计自带任务拆解特性\n       - 清晰的模块定位\n       - 明确的全局作用\n     * 前端开发的挑战：\n       - 所见即所得的即时压力\n       - 频繁的需求调整\n       - 调试过程易产生挫败感\n\n5. **心态建设**\n   - 接受不完美\n   - 敢于重新开始\n   - 避免完美主义陷阱\n   - 保持持续学习的态度\n\n##### 《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\n《为什么精英都是时间控》这本书干货满满，作者是位神经科医学者，很多观点都具有医学根据，很受用。\n\n下面摘录下本书中我的读后心得~~共勉之~~\n\n1.专注力（工作效率）×时间=工作量，上午的时间价值是晚上时间价值的4倍，专注性工作选择上午做！提高专注力的小三点：第一是日光浴，第二是有节奏的运动，第三是足够的睡眠。\n\n2.为了维持白天头脑清醒的状态，人每天需要7～9个小时的高质量睡眠。\n\n科学数据表明，睡眠时间不充足的人患上癌症的风险是一般人的6倍，患上脑出血的风险是一般人的4倍，患上心肌梗死的风险是一般人的3倍，患上高血压的风险是一般人的2倍，患上糖尿病的风险是一般人的3倍。一项针对日本男性的调查显示，平时睡眠时间不足6个小时的人，与每天睡7～8个小时的人相比，死亡率要高出2.4倍。\n\n由此可见，缩短睡眠时间，无异于缩短寿命。\n\n3.有氧运动对头脑非常好。在进行有氧运动的时候，头脑会分泌一种名叫BDNF（brain derived neurotrophic factor，脑源性神经营养因子）的物质，BDNF对脑神经的成长发育和正常运转起着至关重要的作用。此外，头脑还会分泌一种叫作多巴胺的神经递质，多巴胺能够提高人的兴致，使人产生幸福感。结果，适度运动之后，不仅能提高人的专注力，就连记忆力、思考能力、工作执行能力等多种脑机能都会得到提高。\n\n4.自我投资，无限成长。学会投资自己的专长，把时间用在帮助自己成长为人生助乐的事情上。\n\n5.多读书，读完以后一定要有输出。\n\n最简单的读书输出法叫作\"3点输出法\"。就是用3个要点来总结这本书带给您的收获，每一点只需写一行字就够了。用这种方法为一本书写读后感，只需3分钟即可。\n\n6.要早起，人一天专注度最高的时间段是早上6-7点，9点过后，专注力开始下降，下午2点接近最低点！下午4-5点专注力才开始回升，每早起2小时，静心做一件事。\n\n7.早起一定要吃，多咀嚼。晚上睡觉前2小时不要吃东西。\n\n8.上班后的第一件事应该是制作\"TO DO清单\"，把今天该做的工作，列一个清单。把一天该做的工作列出来之后，再决定工作顺序，即先做哪件事，再做哪件事，即制作一个流程表。\n\n9.利用时间限制术和后有约定工作术克服拖延。\"后有约定\"工作术，其实就是一种强制性时间限制的工作方法。\"后有约定\"工作术每天都可以应用在工作中。\n\n10.早晨起床冲个淋浴之后，专注力就达到了高峰，可以开始一上午的工作。中午通过吃午餐，又可以将大脑重启，开启下午的专注工作时间。傍晚适度运动一下，再次重启身心，又可以专注地做你想做的事情。\n\n11.这个世界上最宝贵的东西莫过于时间。所以，我们珍惜自己的时间理所当然，但是，我们应该将心比心，同样尊重、珍惜别人的时间。与别人约定一定不要迟到，珍惜别人的时间也珍惜自己的时间，做一个严格守时的人。脑子里时刻要有\"For  you\"思想，这是一种礼貌，不要丧失别人对自己的信任。\n\n12.\"2分钟之内可以完成的工作\"一定不要往后拖延，马上就把它解决掉。\n\n13.\"一边……一边……\"只能使注意力分散，而合理搭配的并行工作，却能让效率显著提高。时间管理达人，通过并行工作的方式一天甚至能创造出好几个小时的额外时间。\n\n14.\"痴迷于兴趣爱好之中\"其实是锻炼专注力的最好方法。因为真心喜欢，我们才会忘记时间、忘记自我，不觉得辛苦，也只有这样才能发挥出最高的专注力和潜能。\n\n专注力×时间=专注时间。\n\n工作也好，爱好也罢，能够发挥高度专注力的人，拥有更多的专注时间。这样的人不仅工作效率高，工作质量也高。\n\n一流的\"趣味人\"一定也能成为一流的\"工作人\"。\n\n15.不知道自己什么时候最快乐的人，就不可能拥有适合自己的\"最强放松时间\"。因为无论做什么，他都不会感到快乐。\n\n不了解自己快乐瞬间的人，是因为没有竖起接收快乐的天线。\n\n16.每天晚上睡前15分钟我有一个习惯——把今天最快乐的事情记录下来发布在Facebook上。带着快乐的回忆入睡，也会为明天寻找快乐而竖起天线。\n\n17.制作一张玩乐的TO DO清单\n\n有了玩乐的TO DO清单就不同了。只要一有自由时间，就可以立刻按照清单把\"最想玩\"的事情付诸行动。自由时间就会过得很有意思，也不用浪费时间去思考该玩什么、怎么玩。\n","source":"_posts/16_读书笔记收集.md","raw":"---\ntitle: 读书笔记收集\ndate: 2025-01-01\ntags: 总结\n---\n\n#### 待阅读清单\n\n#### 已阅读清单\n- 《蛤蟆先生去看心理医生》\n- 《心流》\n- 《牧羊少年奇幻之旅》\n- 《悉达多》\n- 《人类简史》\n- 《曾国藩传》\n- 《乔布斯传》\n- 《小王子》\n- 《邓小平时代》\n- 《易中天品三国》\n- 《乒乓球有意思》\n- 《失落的卫星》\n- 《纳瓦尔宝典》\n- 《置身事内》\n- 《李光耀观天下》\n- 《为什么精英都是时间控》\n\n##### 《蛤蟆先生去看心理医生》读书笔记\n\n###### 核心内容概述\n\n1. **心理治疗的过程**\n   - 从抗拒到接纳\n   - 建立信任关系\n   - 逐步探索内心\n   - 认知重构与成长\n\n2. **主要心理问题**\n   - 自我否定\n   - 完美主义倾向\n   - 童年创伤\n   - 情绪管理困难\n   - 人际关系障碍\n\n3. **治疗方法与启示**\n   - 认知行为疗法\n   - 内在小孩疗愈\n   - 家庭系统治疗\n   - 正念练习\n   - 自我接纳\n\n###### 个人感悟与思考\n\n1. **关于自我认知**\n   - 接纳不完美的自己\n   - 理解情绪的根源\n   - 认识内在需求\n\n2. **关于成长**\n   - 改变始于觉察\n   - 治愈需要勇气\n   - 成长是持续过程\n\n3. **关于人际关系**\n   - 建立健康界限\n   - 学会表达需求\n   - 培养同理心\n\n4. **实践建议**\n   - 保持日常觉察\n   - 写日记梳理情绪\n   - 学会自我对话\n   - 寻求专业帮助\n\n\n##### 《心流》读书笔记\n\n1. **心流的核心要素**\n   - 明确的目标和即时反馈\n   - 挑战与能力的平衡\n   - 全神贯注的状态\n\n2. **进入心流的最佳条件**\n   - 选择\"擅长但不精通\"的领域\n   - 将大目标拆解成小任务\n   - 建立清晰的任务闭环\n   - 保持正向反馈\n\n3. **个人实践心得**\n   > 从乒乓球运动的经验来看，面对挑战时的态度至关重要。选择接受挑战还是逃避，会带来完全不同的结局。真正的技能提升需要：\n   > - 从理论上改变认知\n   > - 克服心理上的惧怕\n   > - 达到身心的放松\n   > - 通过正确练习形成肌肉记忆\n   > - 获得正向心理反馈\n\n4. **心流体验在不同领域的对比**\n   - 运动领域（以乒乓球为例）：\n     * 即时反馈明确\n     * 对手水平匹配时更容易进入状态\n     * 环境单纯，易于保持专注\n\n   - 工作领域（以编程为例）：\n     * 后端开发更容易进入心流：\n       - 微服务设计自带任务拆解特性\n       - 清晰的模块定位\n       - 明确的全局作用\n     * 前端开发的挑战：\n       - 所见即所得的即时压力\n       - 频繁的需求调整\n       - 调试过程易产生挫败感\n\n5. **心态建设**\n   - 接受不完美\n   - 敢于重新开始\n   - 避免完美主义陷阱\n   - 保持持续学习的态度\n\n##### 《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\n《为什么精英都是时间控》这本书干货满满，作者是位神经科医学者，很多观点都具有医学根据，很受用。\n\n下面摘录下本书中我的读后心得~~共勉之~~\n\n1.专注力（工作效率）×时间=工作量，上午的时间价值是晚上时间价值的4倍，专注性工作选择上午做！提高专注力的小三点：第一是日光浴，第二是有节奏的运动，第三是足够的睡眠。\n\n2.为了维持白天头脑清醒的状态，人每天需要7～9个小时的高质量睡眠。\n\n科学数据表明，睡眠时间不充足的人患上癌症的风险是一般人的6倍，患上脑出血的风险是一般人的4倍，患上心肌梗死的风险是一般人的3倍，患上高血压的风险是一般人的2倍，患上糖尿病的风险是一般人的3倍。一项针对日本男性的调查显示，平时睡眠时间不足6个小时的人，与每天睡7～8个小时的人相比，死亡率要高出2.4倍。\n\n由此可见，缩短睡眠时间，无异于缩短寿命。\n\n3.有氧运动对头脑非常好。在进行有氧运动的时候，头脑会分泌一种名叫BDNF（brain derived neurotrophic factor，脑源性神经营养因子）的物质，BDNF对脑神经的成长发育和正常运转起着至关重要的作用。此外，头脑还会分泌一种叫作多巴胺的神经递质，多巴胺能够提高人的兴致，使人产生幸福感。结果，适度运动之后，不仅能提高人的专注力，就连记忆力、思考能力、工作执行能力等多种脑机能都会得到提高。\n\n4.自我投资，无限成长。学会投资自己的专长，把时间用在帮助自己成长为人生助乐的事情上。\n\n5.多读书，读完以后一定要有输出。\n\n最简单的读书输出法叫作\"3点输出法\"。就是用3个要点来总结这本书带给您的收获，每一点只需写一行字就够了。用这种方法为一本书写读后感，只需3分钟即可。\n\n6.要早起，人一天专注度最高的时间段是早上6-7点，9点过后，专注力开始下降，下午2点接近最低点！下午4-5点专注力才开始回升，每早起2小时，静心做一件事。\n\n7.早起一定要吃，多咀嚼。晚上睡觉前2小时不要吃东西。\n\n8.上班后的第一件事应该是制作\"TO DO清单\"，把今天该做的工作，列一个清单。把一天该做的工作列出来之后，再决定工作顺序，即先做哪件事，再做哪件事，即制作一个流程表。\n\n9.利用时间限制术和后有约定工作术克服拖延。\"后有约定\"工作术，其实就是一种强制性时间限制的工作方法。\"后有约定\"工作术每天都可以应用在工作中。\n\n10.早晨起床冲个淋浴之后，专注力就达到了高峰，可以开始一上午的工作。中午通过吃午餐，又可以将大脑重启，开启下午的专注工作时间。傍晚适度运动一下，再次重启身心，又可以专注地做你想做的事情。\n\n11.这个世界上最宝贵的东西莫过于时间。所以，我们珍惜自己的时间理所当然，但是，我们应该将心比心，同样尊重、珍惜别人的时间。与别人约定一定不要迟到，珍惜别人的时间也珍惜自己的时间，做一个严格守时的人。脑子里时刻要有\"For  you\"思想，这是一种礼貌，不要丧失别人对自己的信任。\n\n12.\"2分钟之内可以完成的工作\"一定不要往后拖延，马上就把它解决掉。\n\n13.\"一边……一边……\"只能使注意力分散，而合理搭配的并行工作，却能让效率显著提高。时间管理达人，通过并行工作的方式一天甚至能创造出好几个小时的额外时间。\n\n14.\"痴迷于兴趣爱好之中\"其实是锻炼专注力的最好方法。因为真心喜欢，我们才会忘记时间、忘记自我，不觉得辛苦，也只有这样才能发挥出最高的专注力和潜能。\n\n专注力×时间=专注时间。\n\n工作也好，爱好也罢，能够发挥高度专注力的人，拥有更多的专注时间。这样的人不仅工作效率高，工作质量也高。\n\n一流的\"趣味人\"一定也能成为一流的\"工作人\"。\n\n15.不知道自己什么时候最快乐的人，就不可能拥有适合自己的\"最强放松时间\"。因为无论做什么，他都不会感到快乐。\n\n不了解自己快乐瞬间的人，是因为没有竖起接收快乐的天线。\n\n16.每天晚上睡前15分钟我有一个习惯——把今天最快乐的事情记录下来发布在Facebook上。带着快乐的回忆入睡，也会为明天寻找快乐而竖起天线。\n\n17.制作一张玩乐的TO DO清单\n\n有了玩乐的TO DO清单就不同了。只要一有自由时间，就可以立刻按照清单把\"最想玩\"的事情付诸行动。自由时间就会过得很有意思，也不用浪费时间去思考该玩什么、怎么玩。\n","slug":"16_读书笔记收集","published":1,"updated":"2025-01-08T16:00:06.069Z","_id":"cm5jr7rem0010fd2z3ceb4hg5","comments":1,"layout":"post","photos":[],"content":"<h4 id=\"待阅读清单\"><a href=\"#待阅读清单\" class=\"headerlink\" title=\"待阅读清单\"></a>待阅读清单</h4><h4 id=\"已阅读清单\"><a href=\"#已阅读清单\" class=\"headerlink\" title=\"已阅读清单\"></a>已阅读清单</h4><ul>\n<li>《蛤蟆先生去看心理医生》</li>\n<li>《心流》</li>\n<li>《牧羊少年奇幻之旅》</li>\n<li>《悉达多》</li>\n<li>《人类简史》</li>\n<li>《曾国藩传》</li>\n<li>《乔布斯传》</li>\n<li>《小王子》</li>\n<li>《邓小平时代》</li>\n<li>《易中天品三国》</li>\n<li>《乒乓球有意思》</li>\n<li>《失落的卫星》</li>\n<li>《纳瓦尔宝典》</li>\n<li>《置身事内》</li>\n<li>《李光耀观天下》</li>\n<li>《为什么精英都是时间控》</li>\n</ul>\n<h5 id=\"《蛤蟆先生去看心理医生》读书笔记\"><a href=\"#《蛤蟆先生去看心理医生》读书笔记\" class=\"headerlink\" title=\"《蛤蟆先生去看心理医生》读书笔记\"></a>《蛤蟆先生去看心理医生》读书笔记</h5><h6 id=\"核心内容概述\"><a href=\"#核心内容概述\" class=\"headerlink\" title=\"核心内容概述\"></a>核心内容概述</h6><ol>\n<li><p><strong>心理治疗的过程</strong></p>\n<ul>\n<li>从抗拒到接纳</li>\n<li>建立信任关系</li>\n<li>逐步探索内心</li>\n<li>认知重构与成长</li>\n</ul>\n</li>\n<li><p><strong>主要心理问题</strong></p>\n<ul>\n<li>自我否定</li>\n<li>完美主义倾向</li>\n<li>童年创伤</li>\n<li>情绪管理困难</li>\n<li>人际关系障碍</li>\n</ul>\n</li>\n<li><p><strong>治疗方法与启示</strong></p>\n<ul>\n<li>认知行为疗法</li>\n<li>内在小孩疗愈</li>\n<li>家庭系统治疗</li>\n<li>正念练习</li>\n<li>自我接纳</li>\n</ul>\n</li>\n</ol>\n<h6 id=\"个人感悟与思考\"><a href=\"#个人感悟与思考\" class=\"headerlink\" title=\"个人感悟与思考\"></a>个人感悟与思考</h6><ol>\n<li><p><strong>关于自我认知</strong></p>\n<ul>\n<li>接纳不完美的自己</li>\n<li>理解情绪的根源</li>\n<li>认识内在需求</li>\n</ul>\n</li>\n<li><p><strong>关于成长</strong></p>\n<ul>\n<li>改变始于觉察</li>\n<li>治愈需要勇气</li>\n<li>成长是持续过程</li>\n</ul>\n</li>\n<li><p><strong>关于人际关系</strong></p>\n<ul>\n<li>建立健康界限</li>\n<li>学会表达需求</li>\n<li>培养同理心</li>\n</ul>\n</li>\n<li><p><strong>实践建议</strong></p>\n<ul>\n<li>保持日常觉察</li>\n<li>写日记梳理情绪</li>\n<li>学会自我对话</li>\n<li>寻求专业帮助</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"《心流》读书笔记\"><a href=\"#《心流》读书笔记\" class=\"headerlink\" title=\"《心流》读书笔记\"></a>《心流》读书笔记</h5><ol>\n<li><p><strong>心流的核心要素</strong></p>\n<ul>\n<li>明确的目标和即时反馈</li>\n<li>挑战与能力的平衡</li>\n<li>全神贯注的状态</li>\n</ul>\n</li>\n<li><p><strong>进入心流的最佳条件</strong></p>\n<ul>\n<li>选择”擅长但不精通”的领域</li>\n<li>将大目标拆解成小任务</li>\n<li>建立清晰的任务闭环</li>\n<li>保持正向反馈</li>\n</ul>\n</li>\n<li><p><strong>个人实践心得</strong></p>\n<blockquote>\n<p>从乒乓球运动的经验来看，面对挑战时的态度至关重要。选择接受挑战还是逃避，会带来完全不同的结局。真正的技能提升需要：</p>\n<ul>\n<li>从理论上改变认知</li>\n<li>克服心理上的惧怕</li>\n<li>达到身心的放松</li>\n<li>通过正确练习形成肌肉记忆</li>\n<li>获得正向心理反馈</li>\n</ul>\n</blockquote>\n</li>\n<li><p><strong>心流体验在不同领域的对比</strong></p>\n<ul>\n<li><p>运动领域（以乒乓球为例）：</p>\n<ul>\n<li>即时反馈明确</li>\n<li>对手水平匹配时更容易进入状态</li>\n<li>环境单纯，易于保持专注</li>\n</ul>\n</li>\n<li><p>工作领域（以编程为例）：</p>\n<ul>\n<li>后端开发更容易进入心流：<ul>\n<li>微服务设计自带任务拆解特性</li>\n<li>清晰的模块定位</li>\n<li>明确的全局作用</li>\n</ul>\n</li>\n<li>前端开发的挑战：<ul>\n<li>所见即所得的即时压力</li>\n<li>频繁的需求调整</li>\n<li>调试过程易产生挫败感</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>心态建设</strong></p>\n<ul>\n<li>接受不完美</li>\n<li>敢于重新开始</li>\n<li>避免完美主义陷阱</li>\n<li>保持持续学习的态度</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\"><a href=\"#《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\" class=\"headerlink\" title=\"《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\"></a>《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）</h5><p>《为什么精英都是时间控》这本书干货满满，作者是位神经科医学者，很多观点都具有医学根据，很受用。</p>\n<p>下面摘录下本书中我的读后心得<del>共勉之</del></p>\n<p>1.专注力（工作效率）×时间=工作量，上午的时间价值是晚上时间价值的4倍，专注性工作选择上午做！提高专注力的小三点：第一是日光浴，第二是有节奏的运动，第三是足够的睡眠。</p>\n<p>2.为了维持白天头脑清醒的状态，人每天需要7～9个小时的高质量睡眠。</p>\n<p>科学数据表明，睡眠时间不充足的人患上癌症的风险是一般人的6倍，患上脑出血的风险是一般人的4倍，患上心肌梗死的风险是一般人的3倍，患上高血压的风险是一般人的2倍，患上糖尿病的风险是一般人的3倍。一项针对日本男性的调查显示，平时睡眠时间不足6个小时的人，与每天睡7～8个小时的人相比，死亡率要高出2.4倍。</p>\n<p>由此可见，缩短睡眠时间，无异于缩短寿命。</p>\n<p>3.有氧运动对头脑非常好。在进行有氧运动的时候，头脑会分泌一种名叫BDNF（brain derived neurotrophic factor，脑源性神经营养因子）的物质，BDNF对脑神经的成长发育和正常运转起着至关重要的作用。此外，头脑还会分泌一种叫作多巴胺的神经递质，多巴胺能够提高人的兴致，使人产生幸福感。结果，适度运动之后，不仅能提高人的专注力，就连记忆力、思考能力、工作执行能力等多种脑机能都会得到提高。</p>\n<p>4.自我投资，无限成长。学会投资自己的专长，把时间用在帮助自己成长为人生助乐的事情上。</p>\n<p>5.多读书，读完以后一定要有输出。</p>\n<p>最简单的读书输出法叫作”3点输出法”。就是用3个要点来总结这本书带给您的收获，每一点只需写一行字就够了。用这种方法为一本书写读后感，只需3分钟即可。</p>\n<p>6.要早起，人一天专注度最高的时间段是早上6-7点，9点过后，专注力开始下降，下午2点接近最低点！下午4-5点专注力才开始回升，每早起2小时，静心做一件事。</p>\n<p>7.早起一定要吃，多咀嚼。晚上睡觉前2小时不要吃东西。</p>\n<p>8.上班后的第一件事应该是制作”TO DO清单”，把今天该做的工作，列一个清单。把一天该做的工作列出来之后，再决定工作顺序，即先做哪件事，再做哪件事，即制作一个流程表。</p>\n<p>9.利用时间限制术和后有约定工作术克服拖延。”后有约定”工作术，其实就是一种强制性时间限制的工作方法。”后有约定”工作术每天都可以应用在工作中。</p>\n<p>10.早晨起床冲个淋浴之后，专注力就达到了高峰，可以开始一上午的工作。中午通过吃午餐，又可以将大脑重启，开启下午的专注工作时间。傍晚适度运动一下，再次重启身心，又可以专注地做你想做的事情。</p>\n<p>11.这个世界上最宝贵的东西莫过于时间。所以，我们珍惜自己的时间理所当然，但是，我们应该将心比心，同样尊重、珍惜别人的时间。与别人约定一定不要迟到，珍惜别人的时间也珍惜自己的时间，做一个严格守时的人。脑子里时刻要有”For  you”思想，这是一种礼貌，不要丧失别人对自己的信任。</p>\n<p>12.”2分钟之内可以完成的工作”一定不要往后拖延，马上就把它解决掉。</p>\n<p>13.”一边……一边……”只能使注意力分散，而合理搭配的并行工作，却能让效率显著提高。时间管理达人，通过并行工作的方式一天甚至能创造出好几个小时的额外时间。</p>\n<p>14.”痴迷于兴趣爱好之中”其实是锻炼专注力的最好方法。因为真心喜欢，我们才会忘记时间、忘记自我，不觉得辛苦，也只有这样才能发挥出最高的专注力和潜能。</p>\n<p>专注力×时间=专注时间。</p>\n<p>工作也好，爱好也罢，能够发挥高度专注力的人，拥有更多的专注时间。这样的人不仅工作效率高，工作质量也高。</p>\n<p>一流的”趣味人”一定也能成为一流的”工作人”。</p>\n<p>15.不知道自己什么时候最快乐的人，就不可能拥有适合自己的”最强放松时间”。因为无论做什么，他都不会感到快乐。</p>\n<p>不了解自己快乐瞬间的人，是因为没有竖起接收快乐的天线。</p>\n<p>16.每天晚上睡前15分钟我有一个习惯——把今天最快乐的事情记录下来发布在Facebook上。带着快乐的回忆入睡，也会为明天寻找快乐而竖起天线。</p>\n<p>17.制作一张玩乐的TO DO清单</p>\n<p>有了玩乐的TO DO清单就不同了。只要一有自由时间，就可以立刻按照清单把”最想玩”的事情付诸行动。自由时间就会过得很有意思，也不用浪费时间去思考该玩什么、怎么玩。</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h4 id=\"待阅读清单\"><a href=\"#待阅读清单\" class=\"headerlink\" title=\"待阅读清单\"></a>待阅读清单</h4><h4 id=\"已阅读清单\"><a href=\"#已阅读清单\" class=\"headerlink\" title=\"已阅读清单\"></a>已阅读清单</h4><ul>\n<li>《蛤蟆先生去看心理医生》</li>\n<li>《心流》</li>\n<li>《牧羊少年奇幻之旅》</li>\n<li>《悉达多》</li>\n<li>《人类简史》</li>\n<li>《曾国藩传》</li>\n<li>《乔布斯传》</li>\n<li>《小王子》</li>\n<li>《邓小平时代》</li>\n<li>《易中天品三国》</li>\n<li>《乒乓球有意思》</li>\n<li>《失落的卫星》</li>\n<li>《纳瓦尔宝典》</li>\n<li>《置身事内》</li>\n<li>《李光耀观天下》</li>\n<li>《为什么精英都是时间控》</li>\n</ul>\n<h5 id=\"《蛤蟆先生去看心理医生》读书笔记\"><a href=\"#《蛤蟆先生去看心理医生》读书笔记\" class=\"headerlink\" title=\"《蛤蟆先生去看心理医生》读书笔记\"></a>《蛤蟆先生去看心理医生》读书笔记</h5><h6 id=\"核心内容概述\"><a href=\"#核心内容概述\" class=\"headerlink\" title=\"核心内容概述\"></a>核心内容概述</h6><ol>\n<li><p><strong>心理治疗的过程</strong></p>\n<ul>\n<li>从抗拒到接纳</li>\n<li>建立信任关系</li>\n<li>逐步探索内心</li>\n<li>认知重构与成长</li>\n</ul>\n</li>\n<li><p><strong>主要心理问题</strong></p>\n<ul>\n<li>自我否定</li>\n<li>完美主义倾向</li>\n<li>童年创伤</li>\n<li>情绪管理困难</li>\n<li>人际关系障碍</li>\n</ul>\n</li>\n<li><p><strong>治疗方法与启示</strong></p>\n<ul>\n<li>认知行为疗法</li>\n<li>内在小孩疗愈</li>\n<li>家庭系统治疗</li>\n<li>正念练习</li>\n<li>自我接纳</li>\n</ul>\n</li>\n</ol>\n<h6 id=\"个人感悟与思考\"><a href=\"#个人感悟与思考\" class=\"headerlink\" title=\"个人感悟与思考\"></a>个人感悟与思考</h6><ol>\n<li><p><strong>关于自我认知</strong></p>\n<ul>\n<li>接纳不完美的自己</li>\n<li>理解情绪的根源</li>\n<li>认识内在需求</li>\n</ul>\n</li>\n<li><p><strong>关于成长</strong></p>\n<ul>\n<li>改变始于觉察</li>\n<li>治愈需要勇气</li>\n<li>成长是持续过程</li>\n</ul>\n</li>\n<li><p><strong>关于人际关系</strong></p>\n<ul>\n<li>建立健康界限</li>\n<li>学会表达需求</li>\n<li>培养同理心</li>\n</ul>\n</li>\n<li><p><strong>实践建议</strong></p>\n<ul>\n<li>保持日常觉察</li>\n<li>写日记梳理情绪</li>\n<li>学会自我对话</li>\n<li>寻求专业帮助</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"《心流》读书笔记\"><a href=\"#《心流》读书笔记\" class=\"headerlink\" title=\"《心流》读书笔记\"></a>《心流》读书笔记</h5><ol>\n<li><p><strong>心流的核心要素</strong></p>\n<ul>\n<li>明确的目标和即时反馈</li>\n<li>挑战与能力的平衡</li>\n<li>全神贯注的状态</li>\n</ul>\n</li>\n<li><p><strong>进入心流的最佳条件</strong></p>\n<ul>\n<li>选择”擅长但不精通”的领域</li>\n<li>将大目标拆解成小任务</li>\n<li>建立清晰的任务闭环</li>\n<li>保持正向反馈</li>\n</ul>\n</li>\n<li><p><strong>个人实践心得</strong></p>\n<blockquote>\n<p>从乒乓球运动的经验来看，面对挑战时的态度至关重要。选择接受挑战还是逃避，会带来完全不同的结局。真正的技能提升需要：</p>\n<ul>\n<li>从理论上改变认知</li>\n<li>克服心理上的惧怕</li>\n<li>达到身心的放松</li>\n<li>通过正确练习形成肌肉记忆</li>\n<li>获得正向心理反馈</li>\n</ul>\n</blockquote>\n</li>\n<li><p><strong>心流体验在不同领域的对比</strong></p>\n<ul>\n<li><p>运动领域（以乒乓球为例）：</p>\n<ul>\n<li>即时反馈明确</li>\n<li>对手水平匹配时更容易进入状态</li>\n<li>环境单纯，易于保持专注</li>\n</ul>\n</li>\n<li><p>工作领域（以编程为例）：</p>\n<ul>\n<li>后端开发更容易进入心流：<ul>\n<li>微服务设计自带任务拆解特性</li>\n<li>清晰的模块定位</li>\n<li>明确的全局作用</li>\n</ul>\n</li>\n<li>前端开发的挑战：<ul>\n<li>所见即所得的即时压力</li>\n<li>频繁的需求调整</li>\n<li>调试过程易产生挫败感</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>心态建设</strong></p>\n<ul>\n<li>接受不完美</li>\n<li>敢于重新开始</li>\n<li>避免完美主义陷阱</li>\n<li>保持持续学习的态度</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\"><a href=\"#《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\" class=\"headerlink\" title=\"《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）\"></a>《为什么精英都是时间控》读书笔记（引用自书评，这里记录一下学习用）</h5><p>《为什么精英都是时间控》这本书干货满满，作者是位神经科医学者，很多观点都具有医学根据，很受用。</p>\n<p>下面摘录下本书中我的读后心得<del>共勉之</del></p>\n<p>1.专注力（工作效率）×时间=工作量，上午的时间价值是晚上时间价值的4倍，专注性工作选择上午做！提高专注力的小三点：第一是日光浴，第二是有节奏的运动，第三是足够的睡眠。</p>\n<p>2.为了维持白天头脑清醒的状态，人每天需要7～9个小时的高质量睡眠。</p>\n<p>科学数据表明，睡眠时间不充足的人患上癌症的风险是一般人的6倍，患上脑出血的风险是一般人的4倍，患上心肌梗死的风险是一般人的3倍，患上高血压的风险是一般人的2倍，患上糖尿病的风险是一般人的3倍。一项针对日本男性的调查显示，平时睡眠时间不足6个小时的人，与每天睡7～8个小时的人相比，死亡率要高出2.4倍。</p>\n<p>由此可见，缩短睡眠时间，无异于缩短寿命。</p>\n<p>3.有氧运动对头脑非常好。在进行有氧运动的时候，头脑会分泌一种名叫BDNF（brain derived neurotrophic factor，脑源性神经营养因子）的物质，BDNF对脑神经的成长发育和正常运转起着至关重要的作用。此外，头脑还会分泌一种叫作多巴胺的神经递质，多巴胺能够提高人的兴致，使人产生幸福感。结果，适度运动之后，不仅能提高人的专注力，就连记忆力、思考能力、工作执行能力等多种脑机能都会得到提高。</p>\n<p>4.自我投资，无限成长。学会投资自己的专长，把时间用在帮助自己成长为人生助乐的事情上。</p>\n<p>5.多读书，读完以后一定要有输出。</p>\n<p>最简单的读书输出法叫作”3点输出法”。就是用3个要点来总结这本书带给您的收获，每一点只需写一行字就够了。用这种方法为一本书写读后感，只需3分钟即可。</p>\n<p>6.要早起，人一天专注度最高的时间段是早上6-7点，9点过后，专注力开始下降，下午2点接近最低点！下午4-5点专注力才开始回升，每早起2小时，静心做一件事。</p>\n<p>7.早起一定要吃，多咀嚼。晚上睡觉前2小时不要吃东西。</p>\n<p>8.上班后的第一件事应该是制作”TO DO清单”，把今天该做的工作，列一个清单。把一天该做的工作列出来之后，再决定工作顺序，即先做哪件事，再做哪件事，即制作一个流程表。</p>\n<p>9.利用时间限制术和后有约定工作术克服拖延。”后有约定”工作术，其实就是一种强制性时间限制的工作方法。”后有约定”工作术每天都可以应用在工作中。</p>\n<p>10.早晨起床冲个淋浴之后，专注力就达到了高峰，可以开始一上午的工作。中午通过吃午餐，又可以将大脑重启，开启下午的专注工作时间。傍晚适度运动一下，再次重启身心，又可以专注地做你想做的事情。</p>\n<p>11.这个世界上最宝贵的东西莫过于时间。所以，我们珍惜自己的时间理所当然，但是，我们应该将心比心，同样尊重、珍惜别人的时间。与别人约定一定不要迟到，珍惜别人的时间也珍惜自己的时间，做一个严格守时的人。脑子里时刻要有”For  you”思想，这是一种礼貌，不要丧失别人对自己的信任。</p>\n<p>12.”2分钟之内可以完成的工作”一定不要往后拖延，马上就把它解决掉。</p>\n<p>13.”一边……一边……”只能使注意力分散，而合理搭配的并行工作，却能让效率显著提高。时间管理达人，通过并行工作的方式一天甚至能创造出好几个小时的额外时间。</p>\n<p>14.”痴迷于兴趣爱好之中”其实是锻炼专注力的最好方法。因为真心喜欢，我们才会忘记时间、忘记自我，不觉得辛苦，也只有这样才能发挥出最高的专注力和潜能。</p>\n<p>专注力×时间=专注时间。</p>\n<p>工作也好，爱好也罢，能够发挥高度专注力的人，拥有更多的专注时间。这样的人不仅工作效率高，工作质量也高。</p>\n<p>一流的”趣味人”一定也能成为一流的”工作人”。</p>\n<p>15.不知道自己什么时候最快乐的人，就不可能拥有适合自己的”最强放松时间”。因为无论做什么，他都不会感到快乐。</p>\n<p>不了解自己快乐瞬间的人，是因为没有竖起接收快乐的天线。</p>\n<p>16.每天晚上睡前15分钟我有一个习惯——把今天最快乐的事情记录下来发布在Facebook上。带着快乐的回忆入睡，也会为明天寻找快乐而竖起天线。</p>\n<p>17.制作一张玩乐的TO DO清单</p>\n<p>有了玩乐的TO DO清单就不同了。只要一有自由时间，就可以立刻按照清单把”最想玩”的事情付诸行动。自由时间就会过得很有意思，也不用浪费时间去思考该玩什么、怎么玩。</p>\n"},{"title":"开发相关内容记录","date":"2023-01-01T12:32:18.000Z","_content":"\nsql 优化\nhttps://www.51cto.com/article/623584.html\n\n\nMySQL索引学习\nhttps://juejin.cn/post/7047433474264793095\n\nredis 详解  \nhttps://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\n","source":"_posts/15_开发相关内容记录.md","raw":"---\ntitle: 开发相关内容记录\ndate: 2023-01-01 20:32:18\ntags: 总结\n---\n\nsql 优化\nhttps://www.51cto.com/article/623584.html\n\n\nMySQL索引学习\nhttps://juejin.cn/post/7047433474264793095\n\nredis 详解  \nhttps://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\n","slug":"15_开发相关内容记录","published":1,"updated":"2024-01-01T10:02:05.452Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7reo001ifd2z2e77doz2","content":"<p>sql 优化<br><a href=\"https://www.51cto.com/article/623584.html\">https://www.51cto.com/article/623584.html</a></p>\n<p>MySQL索引学习<br><a href=\"https://juejin.cn/post/7047433474264793095\">https://juejin.cn/post/7047433474264793095</a></p>\n<p>redis 详解<br><a href=\"https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\">https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<p>sql 优化<br><a href=\"https://www.51cto.com/article/623584.html\">https://www.51cto.com/article/623584.html</a></p>\n<p>MySQL索引学习<br><a href=\"https://juejin.cn/post/7047433474264793095\">https://juejin.cn/post/7047433474264793095</a></p>\n<p>redis 详解<br><a href=\"https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\">https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ</a></p>\n"},{"title":"通过微信公众号实现自动发布文章","date":"2024-12-31T16:00:00.000Z","_content":"\n## 功能概述\n\n实现一个自动化文章发布系统，通过向微信公众号发送消息，自动将内容转换为博客文章并发布到 GitHub 仓库。\n\n### 主要功能\n1. 接收微信公众号消息\n2. 自动格式化为博客文章格式\n3. 推送到 GitHub 指定仓库的 posts 目录\n4. 触发 GitHub Actions 自动构建并部署博客\n5. 公众号推送成功的消息\n\n## 实现流程\n\n### 1. 微信公众号配置\n- 注册个人订阅号\n- 获取开发必需的 AppID 和 AppSecret\n- 配置服务器 URL 和 Token\n- 开启开发者模式\n\n### 2. 服务器准备\n- 使用免费服务器方案：\n  - Railway.app（提供每月免费额度）\n  - Heroku（提供免费套餐）\n  - Vercel（适合部署 Node.js 应用）（选这个方案）\n  - Render.com（提供免费套餐）\n\n- 免费域名和 SSL 方案：\n  - 域名：使用 .tk、.ml 等免费顶级域名\n  - SSL 证书：使用 Let's Encrypt 免费证书\n  - 或直接使用平台提供的子域名（如 xxx.vercel.app），自带 HTTPS\n\n- Web 服务环境：\n  - 使用 Flask/Django（Python）或 Express（Node.js）搭建\n  - 直接使用平台提供的一键部署功能\n\n### 3. 消息处理流程\n1. 接收微信消息\n2. 验证消息发送者身份\n3. 提取消息内容并格式化\n4. 生成符合博客要求的 Markdown 文件\n5. 通过 GitHub API 推送文件\n\n### 4. 文章格式\n消息将被转换为以下格式：\n\n```yaml\n---\ntitle: 文章标题\ndate: 发送时间\ncategories:\n博客\ntags:\n随笔\n---\n正文内容...\n```\n\n\n## 注意事项\n\n### 安全性考虑\n- 仅处理指定用户的消息\n- 安全存储各类 Token\n- 定期更新访问凭证\n\n### 使用限制\n- 仅支持文本消息\n- 第一行作为文章标题\n- 仅支持单一发送者\n\n## 后续优化方向\n1. 支持图片上传\n2. 添加文章分类和标签管理\n3. 支持文章修改功能\n4. 添加发布状态反馈\n5. 支持文章预览功能\n","source":"_posts/18_公众号实现发布文章.md","raw":"---\ntitle: 通过微信公众号实现自动发布文章\ndate: 2025-01-01\ncategories:\n  - 技术\ntags:\n  - 微信公众号\n  - GitHub\n  - Python\n---\n\n## 功能概述\n\n实现一个自动化文章发布系统，通过向微信公众号发送消息，自动将内容转换为博客文章并发布到 GitHub 仓库。\n\n### 主要功能\n1. 接收微信公众号消息\n2. 自动格式化为博客文章格式\n3. 推送到 GitHub 指定仓库的 posts 目录\n4. 触发 GitHub Actions 自动构建并部署博客\n5. 公众号推送成功的消息\n\n## 实现流程\n\n### 1. 微信公众号配置\n- 注册个人订阅号\n- 获取开发必需的 AppID 和 AppSecret\n- 配置服务器 URL 和 Token\n- 开启开发者模式\n\n### 2. 服务器准备\n- 使用免费服务器方案：\n  - Railway.app（提供每月免费额度）\n  - Heroku（提供免费套餐）\n  - Vercel（适合部署 Node.js 应用）（选这个方案）\n  - Render.com（提供免费套餐）\n\n- 免费域名和 SSL 方案：\n  - 域名：使用 .tk、.ml 等免费顶级域名\n  - SSL 证书：使用 Let's Encrypt 免费证书\n  - 或直接使用平台提供的子域名（如 xxx.vercel.app），自带 HTTPS\n\n- Web 服务环境：\n  - 使用 Flask/Django（Python）或 Express（Node.js）搭建\n  - 直接使用平台提供的一键部署功能\n\n### 3. 消息处理流程\n1. 接收微信消息\n2. 验证消息发送者身份\n3. 提取消息内容并格式化\n4. 生成符合博客要求的 Markdown 文件\n5. 通过 GitHub API 推送文件\n\n### 4. 文章格式\n消息将被转换为以下格式：\n\n```yaml\n---\ntitle: 文章标题\ndate: 发送时间\ncategories:\n博客\ntags:\n随笔\n---\n正文内容...\n```\n\n\n## 注意事项\n\n### 安全性考虑\n- 仅处理指定用户的消息\n- 安全存储各类 Token\n- 定期更新访问凭证\n\n### 使用限制\n- 仅支持文本消息\n- 第一行作为文章标题\n- 仅支持单一发送者\n\n## 后续优化方向\n1. 支持图片上传\n2. 添加文章分类和标签管理\n3. 支持文章修改功能\n4. 添加发布状态反馈\n5. 支持文章预览功能\n","slug":"18_公众号实现发布文章","published":1,"updated":"2025-01-12T13:17:26.097Z","_id":"cm5jr7reo001jfd2z0v8ycz3d","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><p>实现一个自动化文章发布系统，通过向微信公众号发送消息，自动将内容转换为博客文章并发布到 GitHub 仓库。</p>\n<h3 id=\"主要功能\"><a href=\"#主要功能\" class=\"headerlink\" title=\"主要功能\"></a>主要功能</h3><ol>\n<li>接收微信公众号消息</li>\n<li>自动格式化为博客文章格式</li>\n<li>推送到 GitHub 指定仓库的 posts 目录</li>\n<li>触发 GitHub Actions 自动构建并部署博客</li>\n<li>公众号推送成功的消息</li>\n</ol>\n<h2 id=\"实现流程\"><a href=\"#实现流程\" class=\"headerlink\" title=\"实现流程\"></a>实现流程</h2><h3 id=\"1-微信公众号配置\"><a href=\"#1-微信公众号配置\" class=\"headerlink\" title=\"1. 微信公众号配置\"></a>1. 微信公众号配置</h3><ul>\n<li>注册个人订阅号</li>\n<li>获取开发必需的 AppID 和 AppSecret</li>\n<li>配置服务器 URL 和 Token</li>\n<li>开启开发者模式</li>\n</ul>\n<h3 id=\"2-服务器准备\"><a href=\"#2-服务器准备\" class=\"headerlink\" title=\"2. 服务器准备\"></a>2. 服务器准备</h3><ul>\n<li><p>使用免费服务器方案：</p>\n<ul>\n<li>Railway.app（提供每月免费额度）</li>\n<li>Heroku（提供免费套餐）</li>\n<li>Vercel（适合部署 Node.js 应用）（选这个方案）</li>\n<li>Render.com（提供免费套餐）</li>\n</ul>\n</li>\n<li><p>免费域名和 SSL 方案：</p>\n<ul>\n<li>域名：使用 .tk、.ml 等免费顶级域名</li>\n<li>SSL 证书：使用 Let’s Encrypt 免费证书</li>\n<li>或直接使用平台提供的子域名（如 xxx.vercel.app），自带 HTTPS</li>\n</ul>\n</li>\n<li><p>Web 服务环境：</p>\n<ul>\n<li>使用 Flask/Django（Python）或 Express（Node.js）搭建</li>\n<li>直接使用平台提供的一键部署功能</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-消息处理流程\"><a href=\"#3-消息处理流程\" class=\"headerlink\" title=\"3. 消息处理流程\"></a>3. 消息处理流程</h3><ol>\n<li>接收微信消息</li>\n<li>验证消息发送者身份</li>\n<li>提取消息内容并格式化</li>\n<li>生成符合博客要求的 Markdown 文件</li>\n<li>通过 GitHub API 推送文件</li>\n</ol>\n<h3 id=\"4-文章格式\"><a href=\"#4-文章格式\" class=\"headerlink\" title=\"4. 文章格式\"></a>4. 文章格式</h3><p>消息将被转换为以下格式：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"string\">发送时间</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"string\">博客</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"string\">随笔</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">正文内容...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><h3 id=\"安全性考虑\"><a href=\"#安全性考虑\" class=\"headerlink\" title=\"安全性考虑\"></a>安全性考虑</h3><ul>\n<li>仅处理指定用户的消息</li>\n<li>安全存储各类 Token</li>\n<li>定期更新访问凭证</li>\n</ul>\n<h3 id=\"使用限制\"><a href=\"#使用限制\" class=\"headerlink\" title=\"使用限制\"></a>使用限制</h3><ul>\n<li>仅支持文本消息</li>\n<li>第一行作为文章标题</li>\n<li>仅支持单一发送者</li>\n</ul>\n<h2 id=\"后续优化方向\"><a href=\"#后续优化方向\" class=\"headerlink\" title=\"后续优化方向\"></a>后续优化方向</h2><ol>\n<li>支持图片上传</li>\n<li>添加文章分类和标签管理</li>\n<li>支持文章修改功能</li>\n<li>添加发布状态反馈</li>\n<li>支持文章预览功能</li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h2 id=\"功能概述\"><a href=\"#功能概述\" class=\"headerlink\" title=\"功能概述\"></a>功能概述</h2><p>实现一个自动化文章发布系统，通过向微信公众号发送消息，自动将内容转换为博客文章并发布到 GitHub 仓库。</p>\n<h3 id=\"主要功能\"><a href=\"#主要功能\" class=\"headerlink\" title=\"主要功能\"></a>主要功能</h3><ol>\n<li>接收微信公众号消息</li>\n<li>自动格式化为博客文章格式</li>\n<li>推送到 GitHub 指定仓库的 posts 目录</li>\n<li>触发 GitHub Actions 自动构建并部署博客</li>\n<li>公众号推送成功的消息</li>\n</ol>\n<h2 id=\"实现流程\"><a href=\"#实现流程\" class=\"headerlink\" title=\"实现流程\"></a>实现流程</h2><h3 id=\"1-微信公众号配置\"><a href=\"#1-微信公众号配置\" class=\"headerlink\" title=\"1. 微信公众号配置\"></a>1. 微信公众号配置</h3><ul>\n<li>注册个人订阅号</li>\n<li>获取开发必需的 AppID 和 AppSecret</li>\n<li>配置服务器 URL 和 Token</li>\n<li>开启开发者模式</li>\n</ul>\n<h3 id=\"2-服务器准备\"><a href=\"#2-服务器准备\" class=\"headerlink\" title=\"2. 服务器准备\"></a>2. 服务器准备</h3><ul>\n<li><p>使用免费服务器方案：</p>\n<ul>\n<li>Railway.app（提供每月免费额度）</li>\n<li>Heroku（提供免费套餐）</li>\n<li>Vercel（适合部署 Node.js 应用）（选这个方案）</li>\n<li>Render.com（提供免费套餐）</li>\n</ul>\n</li>\n<li><p>免费域名和 SSL 方案：</p>\n<ul>\n<li>域名：使用 .tk、.ml 等免费顶级域名</li>\n<li>SSL 证书：使用 Let’s Encrypt 免费证书</li>\n<li>或直接使用平台提供的子域名（如 xxx.vercel.app），自带 HTTPS</li>\n</ul>\n</li>\n<li><p>Web 服务环境：</p>\n<ul>\n<li>使用 Flask/Django（Python）或 Express（Node.js）搭建</li>\n<li>直接使用平台提供的一键部署功能</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-消息处理流程\"><a href=\"#3-消息处理流程\" class=\"headerlink\" title=\"3. 消息处理流程\"></a>3. 消息处理流程</h3><ol>\n<li>接收微信消息</li>\n<li>验证消息发送者身份</li>\n<li>提取消息内容并格式化</li>\n<li>生成符合博客要求的 Markdown 文件</li>\n<li>通过 GitHub API 推送文件</li>\n</ol>\n<h3 id=\"4-文章格式\"><a href=\"#4-文章格式\" class=\"headerlink\" title=\"4. 文章格式\"></a>4. 文章格式</h3><p>消息将被转换为以下格式：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"string\">发送时间</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"string\">博客</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\"><span class=\"string\">随笔</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">正文内容...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><h3 id=\"安全性考虑\"><a href=\"#安全性考虑\" class=\"headerlink\" title=\"安全性考虑\"></a>安全性考虑</h3><ul>\n<li>仅处理指定用户的消息</li>\n<li>安全存储各类 Token</li>\n<li>定期更新访问凭证</li>\n</ul>\n<h3 id=\"使用限制\"><a href=\"#使用限制\" class=\"headerlink\" title=\"使用限制\"></a>使用限制</h3><ul>\n<li>仅支持文本消息</li>\n<li>第一行作为文章标题</li>\n<li>仅支持单一发送者</li>\n</ul>\n<h2 id=\"后续优化方向\"><a href=\"#后续优化方向\" class=\"headerlink\" title=\"后续优化方向\"></a>后续优化方向</h2><ol>\n<li>支持图片上传</li>\n<li>添加文章分类和标签管理</li>\n<li>支持文章修改功能</li>\n<li>添加发布状态反馈</li>\n<li>支持文章预览功能</li>\n</ol>\n"},{"title":"工具类项目需求文档","date":"2024-12-31T16:00:00.000Z","_content":"\n# 工具类项目需求文档\n\n## 一、项目概述\n\n开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。\n\n## 二、功能需求\n\n### 1. 基础CRUD功能\n- 用户管理模块\n  - 用户信息的增删改查\n  - 用户登录注册\n  - 角色权限管理\n  - 部门组织管理\n  \n### 2. 文件处理功能\n- 文件上传下载\n  - 大文件断点续传\n  - 文件秒传功能\n  - 文件存储管理\n- Excel处理\n  - Excel模板导入\n  - 数据导出Excel\n  - 大数据量Excel处理\n- PDF处理\n  - PDF生成\n  - PDF模板管理\n  - PDF水印添加\n\n### 3. 定时任务模块\n- 定时任务管理\n  - 定时数据清理\n  - 定时报表生成\n  - 任务执行状态监控\n- 任务配置\n  - CRON表达式配置\n  - 任务参数设置\n  - 任务执行日志\n\n### 4. 消息处理模块\n- 消息管理\n  - 消息发送与消费\n  - 消息重试机制\n  - 死信队列处理\n- 消息监控\n  - 消息积压监控\n  - 消息处理统计\n  - 异常消息处理\n\n### 5. 异步任务处理\n- 任务执行\n  - 异步任务执行\n  - 并发任务控制\n  - 任务进度跟踪\n- 任务管理\n  - 任务优先级\n  - 任务超时处理\n  - 任务结果回调\n\n### 6. 系统监控\n- 日志管理\n  - 操作日志记录\n  - 异常日志记录\n  - 日志查询分析\n- 性能监控\n  - 系统资源监控\n  - 接口响应时间\n  - JVM监控\n- 统计分析\n  - API调用统计\n  - 用户行为分析\n  - 业务指标统计\n\n## 三、技术栈选型\n\n### 1. 基础框架\n- Spring Boot (应用框架)\n- Spring Cloud (微服务框架)\n- Maven (项目管理)\n\n### 2. 数据存储\n- MySQL (关系型数据库)\n- MongoDB (文档存储)\n- Redis (缓存)\n\n### 3. 消息队列\n- RabbitMQ (消息中间件)\n- Kafka (日志收集)\n\n### 4. 任务调度\n- XXL-Job (分布式任务调度)\n- Quartz (定时任务)\n\n### 5. 其他工具\n- EasyExcel (Excel处理)\n- iText (PDF处理)\n- MinIO (对象存储)\n\n## 四、项目结构\n\n```\nproject-root/\n├── common/                 # 公共模块\n│   ├── common-core/       # 核心工具\n│   ├── common-redis/      # Redis工具\n│   └── common-log/        # 日志工具\n├── system/                # 系统模块\n│   ├── sys-api/          # 接口定义\n│   └── sys-service/      # 服务实现\n├── message/              # 消息模块\n├── task/                 # 任务模块\n└── monitor/             # 监控模块\n```\n\n## 五、技术实现要点\n\n### 1. 数据库设计示例\n\n```sql\n-- 用户表\nCREATE TABLE sys_user (\n    id BIGINT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100),\n    status TINYINT,\n    create_time DATETIME,\n    update_time DATETIME\n);\n```\n\n### 2. 核心配置示例\n\n```yaml\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/demo\n    username: root\n    password: root\n  redis:\n    host: localhost\n    port: 6379\n```\n\n### 3. 关键代码实现示例\n\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n    @Autowired\n    private UserMapper userMapper;\n    \n    @Override\n    public UserDTO createUser(UserCreateReq req) {\n        // 参数校验\n        // 业务处理\n        // 返回结果\n    }\n}\n```\n\n## 六、项目实施计划\n\n### 第一阶段：基础框架搭建 (2周)\n- [ ] 项目结构创建\n- [ ] 基础配置完成\n- [ ] 数据库设计\n\n### 第二阶段：核心功能开发 (4周)\n- [ ] 用户管理模块\n- [ ] 文件处理功能\n- [ ] 基础CRUD实现\n\n### 第三阶段：高级特性实现 (3周)\n- [ ] 消息队列集成\n- [ ] 定时任务开发\n- [ ] 异步处理实现\n\n### 第四阶段：系统优化 (3周)\n- [ ] 性能优化\n- [ ] 单元测试\n- [ ] 文档完善\n\n## 七、注意事项\n\n### 1. 代码规范\n- 遵循阿里巴巴Java开发规范\n- 统一的命名规范\n- 完善的注释文档\n\n### 2. 性能考虑\n- 合理使用缓存\n- 数据库索引优化\n- 并发控制\n- 连接池管理\n- 大数据量处理\n\n### 3. 安全考虑\n- 数据加密传输\n- 敏感信息加密\n- 权限精细控制\n- SQL注入防护\n- XSS防护\n- CSRF防护\n\n### 4. 可维护性\n- 模块化设计\n- 接口版本控制\n- 统一异常处理\n- 统一响应格式\n- 完善的日志记录\n\n## 八、项目验收标准\n\n1. 功能完整性\n- 所有功能模块测试通过\n- 接口文档完善\n- 测试用例覆盖率>80%\n\n2. 性能指标\n- 接口响应时间<500ms\n- 并发用户数>1000\n- CPU使用率<70%\n\n3. 代码质量\n- 代码规范遵循度>90%\n- 代码重复率<5%\n- 测试覆盖率>80%\n\n","source":"_posts/17_工具类项目需求文档.md","raw":"---\ntitle: 工具类项目需求文档\ndate: 2025-01-01\ntags: 总结\n---\n\n# 工具类项目需求文档\n\n## 一、项目概述\n\n开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。\n\n## 二、功能需求\n\n### 1. 基础CRUD功能\n- 用户管理模块\n  - 用户信息的增删改查\n  - 用户登录注册\n  - 角色权限管理\n  - 部门组织管理\n  \n### 2. 文件处理功能\n- 文件上传下载\n  - 大文件断点续传\n  - 文件秒传功能\n  - 文件存储管理\n- Excel处理\n  - Excel模板导入\n  - 数据导出Excel\n  - 大数据量Excel处理\n- PDF处理\n  - PDF生成\n  - PDF模板管理\n  - PDF水印添加\n\n### 3. 定时任务模块\n- 定时任务管理\n  - 定时数据清理\n  - 定时报表生成\n  - 任务执行状态监控\n- 任务配置\n  - CRON表达式配置\n  - 任务参数设置\n  - 任务执行日志\n\n### 4. 消息处理模块\n- 消息管理\n  - 消息发送与消费\n  - 消息重试机制\n  - 死信队列处理\n- 消息监控\n  - 消息积压监控\n  - 消息处理统计\n  - 异常消息处理\n\n### 5. 异步任务处理\n- 任务执行\n  - 异步任务执行\n  - 并发任务控制\n  - 任务进度跟踪\n- 任务管理\n  - 任务优先级\n  - 任务超时处理\n  - 任务结果回调\n\n### 6. 系统监控\n- 日志管理\n  - 操作日志记录\n  - 异常日志记录\n  - 日志查询分析\n- 性能监控\n  - 系统资源监控\n  - 接口响应时间\n  - JVM监控\n- 统计分析\n  - API调用统计\n  - 用户行为分析\n  - 业务指标统计\n\n## 三、技术栈选型\n\n### 1. 基础框架\n- Spring Boot (应用框架)\n- Spring Cloud (微服务框架)\n- Maven (项目管理)\n\n### 2. 数据存储\n- MySQL (关系型数据库)\n- MongoDB (文档存储)\n- Redis (缓存)\n\n### 3. 消息队列\n- RabbitMQ (消息中间件)\n- Kafka (日志收集)\n\n### 4. 任务调度\n- XXL-Job (分布式任务调度)\n- Quartz (定时任务)\n\n### 5. 其他工具\n- EasyExcel (Excel处理)\n- iText (PDF处理)\n- MinIO (对象存储)\n\n## 四、项目结构\n\n```\nproject-root/\n├── common/                 # 公共模块\n│   ├── common-core/       # 核心工具\n│   ├── common-redis/      # Redis工具\n│   └── common-log/        # 日志工具\n├── system/                # 系统模块\n│   ├── sys-api/          # 接口定义\n│   └── sys-service/      # 服务实现\n├── message/              # 消息模块\n├── task/                 # 任务模块\n└── monitor/             # 监控模块\n```\n\n## 五、技术实现要点\n\n### 1. 数据库设计示例\n\n```sql\n-- 用户表\nCREATE TABLE sys_user (\n    id BIGINT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100),\n    status TINYINT,\n    create_time DATETIME,\n    update_time DATETIME\n);\n```\n\n### 2. 核心配置示例\n\n```yaml\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/demo\n    username: root\n    password: root\n  redis:\n    host: localhost\n    port: 6379\n```\n\n### 3. 关键代码实现示例\n\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n    @Autowired\n    private UserMapper userMapper;\n    \n    @Override\n    public UserDTO createUser(UserCreateReq req) {\n        // 参数校验\n        // 业务处理\n        // 返回结果\n    }\n}\n```\n\n## 六、项目实施计划\n\n### 第一阶段：基础框架搭建 (2周)\n- [ ] 项目结构创建\n- [ ] 基础配置完成\n- [ ] 数据库设计\n\n### 第二阶段：核心功能开发 (4周)\n- [ ] 用户管理模块\n- [ ] 文件处理功能\n- [ ] 基础CRUD实现\n\n### 第三阶段：高级特性实现 (3周)\n- [ ] 消息队列集成\n- [ ] 定时任务开发\n- [ ] 异步处理实现\n\n### 第四阶段：系统优化 (3周)\n- [ ] 性能优化\n- [ ] 单元测试\n- [ ] 文档完善\n\n## 七、注意事项\n\n### 1. 代码规范\n- 遵循阿里巴巴Java开发规范\n- 统一的命名规范\n- 完善的注释文档\n\n### 2. 性能考虑\n- 合理使用缓存\n- 数据库索引优化\n- 并发控制\n- 连接池管理\n- 大数据量处理\n\n### 3. 安全考虑\n- 数据加密传输\n- 敏感信息加密\n- 权限精细控制\n- SQL注入防护\n- XSS防护\n- CSRF防护\n\n### 4. 可维护性\n- 模块化设计\n- 接口版本控制\n- 统一异常处理\n- 统一响应格式\n- 完善的日志记录\n\n## 八、项目验收标准\n\n1. 功能完整性\n- 所有功能模块测试通过\n- 接口文档完善\n- 测试用例覆盖率>80%\n\n2. 性能指标\n- 接口响应时间<500ms\n- 并发用户数>1000\n- CPU使用率<70%\n\n3. 代码质量\n- 代码规范遵循度>90%\n- 代码重复率<5%\n- 测试覆盖率>80%\n\n","slug":"17_工具类项目需求文档","published":1,"updated":"2025-01-05T15:10:22.058Z","comments":1,"layout":"post","photos":[],"_id":"cm5jr7reo001lfd2z809rgelm","content":"<h1 id=\"工具类项目需求文档\"><a href=\"#工具类项目需求文档\" class=\"headerlink\" title=\"工具类项目需求文档\"></a>工具类项目需求文档</h1><h2 id=\"一、项目概述\"><a href=\"#一、项目概述\" class=\"headerlink\" title=\"一、项目概述\"></a>一、项目概述</h2><p>开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。</p>\n<h2 id=\"二、功能需求\"><a href=\"#二、功能需求\" class=\"headerlink\" title=\"二、功能需求\"></a>二、功能需求</h2><h3 id=\"1-基础CRUD功能\"><a href=\"#1-基础CRUD功能\" class=\"headerlink\" title=\"1. 基础CRUD功能\"></a>1. 基础CRUD功能</h3><ul>\n<li>用户管理模块<ul>\n<li>用户信息的增删改查</li>\n<li>用户登录注册</li>\n<li>角色权限管理</li>\n<li>部门组织管理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-文件处理功能\"><a href=\"#2-文件处理功能\" class=\"headerlink\" title=\"2. 文件处理功能\"></a>2. 文件处理功能</h3><ul>\n<li>文件上传下载<ul>\n<li>大文件断点续传</li>\n<li>文件秒传功能</li>\n<li>文件存储管理</li>\n</ul>\n</li>\n<li>Excel处理<ul>\n<li>Excel模板导入</li>\n<li>数据导出Excel</li>\n<li>大数据量Excel处理</li>\n</ul>\n</li>\n<li>PDF处理<ul>\n<li>PDF生成</li>\n<li>PDF模板管理</li>\n<li>PDF水印添加</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-定时任务模块\"><a href=\"#3-定时任务模块\" class=\"headerlink\" title=\"3. 定时任务模块\"></a>3. 定时任务模块</h3><ul>\n<li>定时任务管理<ul>\n<li>定时数据清理</li>\n<li>定时报表生成</li>\n<li>任务执行状态监控</li>\n</ul>\n</li>\n<li>任务配置<ul>\n<li>CRON表达式配置</li>\n<li>任务参数设置</li>\n<li>任务执行日志</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-消息处理模块\"><a href=\"#4-消息处理模块\" class=\"headerlink\" title=\"4. 消息处理模块\"></a>4. 消息处理模块</h3><ul>\n<li>消息管理<ul>\n<li>消息发送与消费</li>\n<li>消息重试机制</li>\n<li>死信队列处理</li>\n</ul>\n</li>\n<li>消息监控<ul>\n<li>消息积压监控</li>\n<li>消息处理统计</li>\n<li>异常消息处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-异步任务处理\"><a href=\"#5-异步任务处理\" class=\"headerlink\" title=\"5. 异步任务处理\"></a>5. 异步任务处理</h3><ul>\n<li>任务执行<ul>\n<li>异步任务执行</li>\n<li>并发任务控制</li>\n<li>任务进度跟踪</li>\n</ul>\n</li>\n<li>任务管理<ul>\n<li>任务优先级</li>\n<li>任务超时处理</li>\n<li>任务结果回调</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-系统监控\"><a href=\"#6-系统监控\" class=\"headerlink\" title=\"6. 系统监控\"></a>6. 系统监控</h3><ul>\n<li>日志管理<ul>\n<li>操作日志记录</li>\n<li>异常日志记录</li>\n<li>日志查询分析</li>\n</ul>\n</li>\n<li>性能监控<ul>\n<li>系统资源监控</li>\n<li>接口响应时间</li>\n<li>JVM监控</li>\n</ul>\n</li>\n<li>统计分析<ul>\n<li>API调用统计</li>\n<li>用户行为分析</li>\n<li>业务指标统计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三、技术栈选型\"><a href=\"#三、技术栈选型\" class=\"headerlink\" title=\"三、技术栈选型\"></a>三、技术栈选型</h2><h3 id=\"1-基础框架\"><a href=\"#1-基础框架\" class=\"headerlink\" title=\"1. 基础框架\"></a>1. 基础框架</h3><ul>\n<li>Spring Boot (应用框架)</li>\n<li>Spring Cloud (微服务框架)</li>\n<li>Maven (项目管理)</li>\n</ul>\n<h3 id=\"2-数据存储\"><a href=\"#2-数据存储\" class=\"headerlink\" title=\"2. 数据存储\"></a>2. 数据存储</h3><ul>\n<li>MySQL (关系型数据库)</li>\n<li>MongoDB (文档存储)</li>\n<li>Redis (缓存)</li>\n</ul>\n<h3 id=\"3-消息队列\"><a href=\"#3-消息队列\" class=\"headerlink\" title=\"3. 消息队列\"></a>3. 消息队列</h3><ul>\n<li>RabbitMQ (消息中间件)</li>\n<li>Kafka (日志收集)</li>\n</ul>\n<h3 id=\"4-任务调度\"><a href=\"#4-任务调度\" class=\"headerlink\" title=\"4. 任务调度\"></a>4. 任务调度</h3><ul>\n<li>XXL-Job (分布式任务调度)</li>\n<li>Quartz (定时任务)</li>\n</ul>\n<h3 id=\"5-其他工具\"><a href=\"#5-其他工具\" class=\"headerlink\" title=\"5. 其他工具\"></a>5. 其他工具</h3><ul>\n<li>EasyExcel (Excel处理)</li>\n<li>iText (PDF处理)</li>\n<li>MinIO (对象存储)</li>\n</ul>\n<h2 id=\"四、项目结构\"><a href=\"#四、项目结构\" class=\"headerlink\" title=\"四、项目结构\"></a>四、项目结构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project-root/</span><br><span class=\"line\">├── common/                 # 公共模块</span><br><span class=\"line\">│   ├── common-core/       # 核心工具</span><br><span class=\"line\">│   ├── common-redis/      # Redis工具</span><br><span class=\"line\">│   └── common-log/        # 日志工具</span><br><span class=\"line\">├── system/                # 系统模块</span><br><span class=\"line\">│   ├── sys-api/          # 接口定义</span><br><span class=\"line\">│   └── sys-service/      # 服务实现</span><br><span class=\"line\">├── message/              # 消息模块</span><br><span class=\"line\">├── task/                 # 任务模块</span><br><span class=\"line\">└── monitor/             # 监控模块</span><br></pre></td></tr></table></figure>\n<h2 id=\"五、技术实现要点\"><a href=\"#五、技术实现要点\" class=\"headerlink\" title=\"五、技术实现要点\"></a>五、技术实现要点</h2><h3 id=\"1-数据库设计示例\"><a href=\"#1-数据库设计示例\" class=\"headerlink\" title=\"1. 数据库设计示例\"></a>1. 数据库设计示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 用户表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> sys_user (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span>,</span><br><span class=\"line\">    username <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    password <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    email <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    status TINYINT,</span><br><span class=\"line\">    create_time DATETIME,</span><br><span class=\"line\">    update_time DATETIME</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-核心配置示例\"><a href=\"#2-核心配置示例\" class=\"headerlink\" title=\"2. 核心配置示例\"></a>2. 核心配置示例</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/demo</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-关键代码实现示例\"><a href=\"#3-关键代码实现示例\" class=\"headerlink\" title=\"3. 关键代码实现示例\"></a>3. 关键代码实现示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDTO <span class=\"title function_\">createUser</span><span class=\"params\">(UserCreateReq req)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 参数校验</span></span><br><span class=\"line\">        <span class=\"comment\">// 业务处理</span></span><br><span class=\"line\">        <span class=\"comment\">// 返回结果</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"六、项目实施计划\"><a href=\"#六、项目实施计划\" class=\"headerlink\" title=\"六、项目实施计划\"></a>六、项目实施计划</h2><h3 id=\"第一阶段：基础框架搭建-2周\"><a href=\"#第一阶段：基础框架搭建-2周\" class=\"headerlink\" title=\"第一阶段：基础框架搭建 (2周)\"></a>第一阶段：基础框架搭建 (2周)</h3><ul>\n<li>[ ] 项目结构创建</li>\n<li>[ ] 基础配置完成</li>\n<li>[ ] 数据库设计</li>\n</ul>\n<h3 id=\"第二阶段：核心功能开发-4周\"><a href=\"#第二阶段：核心功能开发-4周\" class=\"headerlink\" title=\"第二阶段：核心功能开发 (4周)\"></a>第二阶段：核心功能开发 (4周)</h3><ul>\n<li>[ ] 用户管理模块</li>\n<li>[ ] 文件处理功能</li>\n<li>[ ] 基础CRUD实现</li>\n</ul>\n<h3 id=\"第三阶段：高级特性实现-3周\"><a href=\"#第三阶段：高级特性实现-3周\" class=\"headerlink\" title=\"第三阶段：高级特性实现 (3周)\"></a>第三阶段：高级特性实现 (3周)</h3><ul>\n<li>[ ] 消息队列集成</li>\n<li>[ ] 定时任务开发</li>\n<li>[ ] 异步处理实现</li>\n</ul>\n<h3 id=\"第四阶段：系统优化-3周\"><a href=\"#第四阶段：系统优化-3周\" class=\"headerlink\" title=\"第四阶段：系统优化 (3周)\"></a>第四阶段：系统优化 (3周)</h3><ul>\n<li>[ ] 性能优化</li>\n<li>[ ] 单元测试</li>\n<li>[ ] 文档完善</li>\n</ul>\n<h2 id=\"七、注意事项\"><a href=\"#七、注意事项\" class=\"headerlink\" title=\"七、注意事项\"></a>七、注意事项</h2><h3 id=\"1-代码规范\"><a href=\"#1-代码规范\" class=\"headerlink\" title=\"1. 代码规范\"></a>1. 代码规范</h3><ul>\n<li>遵循阿里巴巴Java开发规范</li>\n<li>统一的命名规范</li>\n<li>完善的注释文档</li>\n</ul>\n<h3 id=\"2-性能考虑\"><a href=\"#2-性能考虑\" class=\"headerlink\" title=\"2. 性能考虑\"></a>2. 性能考虑</h3><ul>\n<li>合理使用缓存</li>\n<li>数据库索引优化</li>\n<li>并发控制</li>\n<li>连接池管理</li>\n<li>大数据量处理</li>\n</ul>\n<h3 id=\"3-安全考虑\"><a href=\"#3-安全考虑\" class=\"headerlink\" title=\"3. 安全考虑\"></a>3. 安全考虑</h3><ul>\n<li>数据加密传输</li>\n<li>敏感信息加密</li>\n<li>权限精细控制</li>\n<li>SQL注入防护</li>\n<li>XSS防护</li>\n<li>CSRF防护</li>\n</ul>\n<h3 id=\"4-可维护性\"><a href=\"#4-可维护性\" class=\"headerlink\" title=\"4. 可维护性\"></a>4. 可维护性</h3><ul>\n<li>模块化设计</li>\n<li>接口版本控制</li>\n<li>统一异常处理</li>\n<li>统一响应格式</li>\n<li>完善的日志记录</li>\n</ul>\n<h2 id=\"八、项目验收标准\"><a href=\"#八、项目验收标准\" class=\"headerlink\" title=\"八、项目验收标准\"></a>八、项目验收标准</h2><ol>\n<li>功能完整性</li>\n</ol>\n<ul>\n<li>所有功能模块测试通过</li>\n<li>接口文档完善</li>\n<li>测试用例覆盖率&gt;80%</li>\n</ul>\n<ol start=\"2\">\n<li>性能指标</li>\n</ol>\n<ul>\n<li>接口响应时间&lt;500ms</li>\n<li>并发用户数&gt;1000</li>\n<li>CPU使用率&lt;70%</li>\n</ul>\n<ol start=\"3\">\n<li>代码质量</li>\n</ol>\n<ul>\n<li>代码规范遵循度&gt;90%</li>\n<li>代码重复率&lt;5%</li>\n<li>测试覆盖率&gt;80%</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"工具类项目需求文档\"><a href=\"#工具类项目需求文档\" class=\"headerlink\" title=\"工具类项目需求文档\"></a>工具类项目需求文档</h1><h2 id=\"一、项目概述\"><a href=\"#一、项目概述\" class=\"headerlink\" title=\"一、项目概述\"></a>一、项目概述</h2><p>开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。</p>\n<h2 id=\"二、功能需求\"><a href=\"#二、功能需求\" class=\"headerlink\" title=\"二、功能需求\"></a>二、功能需求</h2><h3 id=\"1-基础CRUD功能\"><a href=\"#1-基础CRUD功能\" class=\"headerlink\" title=\"1. 基础CRUD功能\"></a>1. 基础CRUD功能</h3><ul>\n<li>用户管理模块<ul>\n<li>用户信息的增删改查</li>\n<li>用户登录注册</li>\n<li>角色权限管理</li>\n<li>部门组织管理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-文件处理功能\"><a href=\"#2-文件处理功能\" class=\"headerlink\" title=\"2. 文件处理功能\"></a>2. 文件处理功能</h3><ul>\n<li>文件上传下载<ul>\n<li>大文件断点续传</li>\n<li>文件秒传功能</li>\n<li>文件存储管理</li>\n</ul>\n</li>\n<li>Excel处理<ul>\n<li>Excel模板导入</li>\n<li>数据导出Excel</li>\n<li>大数据量Excel处理</li>\n</ul>\n</li>\n<li>PDF处理<ul>\n<li>PDF生成</li>\n<li>PDF模板管理</li>\n<li>PDF水印添加</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-定时任务模块\"><a href=\"#3-定时任务模块\" class=\"headerlink\" title=\"3. 定时任务模块\"></a>3. 定时任务模块</h3><ul>\n<li>定时任务管理<ul>\n<li>定时数据清理</li>\n<li>定时报表生成</li>\n<li>任务执行状态监控</li>\n</ul>\n</li>\n<li>任务配置<ul>\n<li>CRON表达式配置</li>\n<li>任务参数设置</li>\n<li>任务执行日志</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-消息处理模块\"><a href=\"#4-消息处理模块\" class=\"headerlink\" title=\"4. 消息处理模块\"></a>4. 消息处理模块</h3><ul>\n<li>消息管理<ul>\n<li>消息发送与消费</li>\n<li>消息重试机制</li>\n<li>死信队列处理</li>\n</ul>\n</li>\n<li>消息监控<ul>\n<li>消息积压监控</li>\n<li>消息处理统计</li>\n<li>异常消息处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-异步任务处理\"><a href=\"#5-异步任务处理\" class=\"headerlink\" title=\"5. 异步任务处理\"></a>5. 异步任务处理</h3><ul>\n<li>任务执行<ul>\n<li>异步任务执行</li>\n<li>并发任务控制</li>\n<li>任务进度跟踪</li>\n</ul>\n</li>\n<li>任务管理<ul>\n<li>任务优先级</li>\n<li>任务超时处理</li>\n<li>任务结果回调</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-系统监控\"><a href=\"#6-系统监控\" class=\"headerlink\" title=\"6. 系统监控\"></a>6. 系统监控</h3><ul>\n<li>日志管理<ul>\n<li>操作日志记录</li>\n<li>异常日志记录</li>\n<li>日志查询分析</li>\n</ul>\n</li>\n<li>性能监控<ul>\n<li>系统资源监控</li>\n<li>接口响应时间</li>\n<li>JVM监控</li>\n</ul>\n</li>\n<li>统计分析<ul>\n<li>API调用统计</li>\n<li>用户行为分析</li>\n<li>业务指标统计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三、技术栈选型\"><a href=\"#三、技术栈选型\" class=\"headerlink\" title=\"三、技术栈选型\"></a>三、技术栈选型</h2><h3 id=\"1-基础框架\"><a href=\"#1-基础框架\" class=\"headerlink\" title=\"1. 基础框架\"></a>1. 基础框架</h3><ul>\n<li>Spring Boot (应用框架)</li>\n<li>Spring Cloud (微服务框架)</li>\n<li>Maven (项目管理)</li>\n</ul>\n<h3 id=\"2-数据存储\"><a href=\"#2-数据存储\" class=\"headerlink\" title=\"2. 数据存储\"></a>2. 数据存储</h3><ul>\n<li>MySQL (关系型数据库)</li>\n<li>MongoDB (文档存储)</li>\n<li>Redis (缓存)</li>\n</ul>\n<h3 id=\"3-消息队列\"><a href=\"#3-消息队列\" class=\"headerlink\" title=\"3. 消息队列\"></a>3. 消息队列</h3><ul>\n<li>RabbitMQ (消息中间件)</li>\n<li>Kafka (日志收集)</li>\n</ul>\n<h3 id=\"4-任务调度\"><a href=\"#4-任务调度\" class=\"headerlink\" title=\"4. 任务调度\"></a>4. 任务调度</h3><ul>\n<li>XXL-Job (分布式任务调度)</li>\n<li>Quartz (定时任务)</li>\n</ul>\n<h3 id=\"5-其他工具\"><a href=\"#5-其他工具\" class=\"headerlink\" title=\"5. 其他工具\"></a>5. 其他工具</h3><ul>\n<li>EasyExcel (Excel处理)</li>\n<li>iText (PDF处理)</li>\n<li>MinIO (对象存储)</li>\n</ul>\n<h2 id=\"四、项目结构\"><a href=\"#四、项目结构\" class=\"headerlink\" title=\"四、项目结构\"></a>四、项目结构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project-root/</span><br><span class=\"line\">├── common/                 # 公共模块</span><br><span class=\"line\">│   ├── common-core/       # 核心工具</span><br><span class=\"line\">│   ├── common-redis/      # Redis工具</span><br><span class=\"line\">│   └── common-log/        # 日志工具</span><br><span class=\"line\">├── system/                # 系统模块</span><br><span class=\"line\">│   ├── sys-api/          # 接口定义</span><br><span class=\"line\">│   └── sys-service/      # 服务实现</span><br><span class=\"line\">├── message/              # 消息模块</span><br><span class=\"line\">├── task/                 # 任务模块</span><br><span class=\"line\">└── monitor/             # 监控模块</span><br></pre></td></tr></table></figure>\n<h2 id=\"五、技术实现要点\"><a href=\"#五、技术实现要点\" class=\"headerlink\" title=\"五、技术实现要点\"></a>五、技术实现要点</h2><h3 id=\"1-数据库设计示例\"><a href=\"#1-数据库设计示例\" class=\"headerlink\" title=\"1. 数据库设计示例\"></a>1. 数据库设计示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 用户表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> sys_user (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span>,</span><br><span class=\"line\">    username <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    password <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    email <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    status TINYINT,</span><br><span class=\"line\">    create_time DATETIME,</span><br><span class=\"line\">    update_time DATETIME</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-核心配置示例\"><a href=\"#2-核心配置示例\" class=\"headerlink\" title=\"2. 核心配置示例\"></a>2. 核心配置示例</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/demo</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-关键代码实现示例\"><a href=\"#3-关键代码实现示例\" class=\"headerlink\" title=\"3. 关键代码实现示例\"></a>3. 关键代码实现示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDTO <span class=\"title function_\">createUser</span><span class=\"params\">(UserCreateReq req)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 参数校验</span></span><br><span class=\"line\">        <span class=\"comment\">// 业务处理</span></span><br><span class=\"line\">        <span class=\"comment\">// 返回结果</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"六、项目实施计划\"><a href=\"#六、项目实施计划\" class=\"headerlink\" title=\"六、项目实施计划\"></a>六、项目实施计划</h2><h3 id=\"第一阶段：基础框架搭建-2周\"><a href=\"#第一阶段：基础框架搭建-2周\" class=\"headerlink\" title=\"第一阶段：基础框架搭建 (2周)\"></a>第一阶段：基础框架搭建 (2周)</h3><ul>\n<li>[ ] 项目结构创建</li>\n<li>[ ] 基础配置完成</li>\n<li>[ ] 数据库设计</li>\n</ul>\n<h3 id=\"第二阶段：核心功能开发-4周\"><a href=\"#第二阶段：核心功能开发-4周\" class=\"headerlink\" title=\"第二阶段：核心功能开发 (4周)\"></a>第二阶段：核心功能开发 (4周)</h3><ul>\n<li>[ ] 用户管理模块</li>\n<li>[ ] 文件处理功能</li>\n<li>[ ] 基础CRUD实现</li>\n</ul>\n<h3 id=\"第三阶段：高级特性实现-3周\"><a href=\"#第三阶段：高级特性实现-3周\" class=\"headerlink\" title=\"第三阶段：高级特性实现 (3周)\"></a>第三阶段：高级特性实现 (3周)</h3><ul>\n<li>[ ] 消息队列集成</li>\n<li>[ ] 定时任务开发</li>\n<li>[ ] 异步处理实现</li>\n</ul>\n<h3 id=\"第四阶段：系统优化-3周\"><a href=\"#第四阶段：系统优化-3周\" class=\"headerlink\" title=\"第四阶段：系统优化 (3周)\"></a>第四阶段：系统优化 (3周)</h3><ul>\n<li>[ ] 性能优化</li>\n<li>[ ] 单元测试</li>\n<li>[ ] 文档完善</li>\n</ul>\n<h2 id=\"七、注意事项\"><a href=\"#七、注意事项\" class=\"headerlink\" title=\"七、注意事项\"></a>七、注意事项</h2><h3 id=\"1-代码规范\"><a href=\"#1-代码规范\" class=\"headerlink\" title=\"1. 代码规范\"></a>1. 代码规范</h3><ul>\n<li>遵循阿里巴巴Java开发规范</li>\n<li>统一的命名规范</li>\n<li>完善的注释文档</li>\n</ul>\n<h3 id=\"2-性能考虑\"><a href=\"#2-性能考虑\" class=\"headerlink\" title=\"2. 性能考虑\"></a>2. 性能考虑</h3><ul>\n<li>合理使用缓存</li>\n<li>数据库索引优化</li>\n<li>并发控制</li>\n<li>连接池管理</li>\n<li>大数据量处理</li>\n</ul>\n<h3 id=\"3-安全考虑\"><a href=\"#3-安全考虑\" class=\"headerlink\" title=\"3. 安全考虑\"></a>3. 安全考虑</h3><ul>\n<li>数据加密传输</li>\n<li>敏感信息加密</li>\n<li>权限精细控制</li>\n<li>SQL注入防护</li>\n<li>XSS防护</li>\n<li>CSRF防护</li>\n</ul>\n<h3 id=\"4-可维护性\"><a href=\"#4-可维护性\" class=\"headerlink\" title=\"4. 可维护性\"></a>4. 可维护性</h3><ul>\n<li>模块化设计</li>\n<li>接口版本控制</li>\n<li>统一异常处理</li>\n<li>统一响应格式</li>\n<li>完善的日志记录</li>\n</ul>\n<h2 id=\"八、项目验收标准\"><a href=\"#八、项目验收标准\" class=\"headerlink\" title=\"八、项目验收标准\"></a>八、项目验收标准</h2><ol>\n<li>功能完整性</li>\n</ol>\n<ul>\n<li>所有功能模块测试通过</li>\n<li>接口文档完善</li>\n<li>测试用例覆盖率&gt;80%</li>\n</ul>\n<ol start=\"2\">\n<li>性能指标</li>\n</ol>\n<ul>\n<li>接口响应时间&lt;500ms</li>\n<li>并发用户数&gt;1000</li>\n<li>CPU使用率&lt;70%</li>\n</ul>\n<ol start=\"3\">\n<li>代码质量</li>\n</ol>\n<ul>\n<li>代码规范遵循度&gt;90%</li>\n<li>代码重复率&lt;5%</li>\n<li>测试覆盖率&gt;80%</li>\n</ul>\n"},{"title":"自动化如何设计和维护才能不成为每日工作的一部分","date":"2024-03-20T16:00:00.000Z","_content":"\n## 前言\n很多时候，我们引入自动化是为了提高效率，但如果设计和维护不当，自动化反而会变成日常工作的负担。本文将探讨如何设计和维护自动化系统，使其真正成为效率工具而不是额外负担。\n\n## 一、自动化设计的核心原则\n\n### 1. 保持简单性\n- 避免过度工程化\n- 只自动化真正重复且稳定的流程\n- 模块化设计，便于维护和更新\n\n### 2. 可观测性\n- 完善的日志系统\n- 关键节点的监控告警\n- 清晰的状态展示\n\n### 3. 容错性\n- 优雅的错误处理机制\n- 自动重试机制\n- 手动介入的接口预留\n\n## 二、避免自动化陷阱\n\n### 1. 过度自动化\n- 不是所有流程都适合自动化\n- 评估投入产出比\n- 保留必要的人工干预环节\n\n### 2. 脆弱的依赖\n- 减少外部依赖\n- 做好依赖的版本管理\n- 设计降级方案\n\n### 3. 维护成本高\n- 文档先行\n- 代码可读性优先\n- 统一的规范和标准\n\n## 三、可持续的自动化维护策略\n\n### 1. 预防性维护\n- 定期代码审查\n- 及时更新依赖\n- 性能监控和优化\n\n### 2. 文档驱动\n- 详细的设计文档\n- 操作手册和故障处理指南\n- 变更记录和版本控制\n\n### 3. 团队协作\n- 知识共享机制\n- 明确的责任分工\n- 持续的技能培训\n\n## 四、最佳实践建议\n\n### 1. 循序渐进\n- 从小规模开始\n- 逐步扩展和完善\n- 及时总结经验\n\n### 2. 标准化流程\n- 统一的开发规范\n- 固定的发布流程\n- 规范的审核机制\n\n### 3. 持续优化\n- 定期评估效果\n- 收集用户反馈\n- 及时调整改进\n\n## 总结\n好的自动化应该是\"搭建之后就不用太操心\"的系统。通过合理的设计和维护策略，我们可以让自动化真正成为提升效率的工具，而不是日常工作的负担。关键在于保持简单、重视可维护性，并建立长期有效的维护机制。\n\n## 参考资料\n1. 《持续交付：发布可靠软件的系统方法》\n2. 《SRE：Google运维解密》\n3. 《DevOps实践指南》\n","source":"_posts/19_自动化如何设计和维护才能不成为每日工作的一部分.md","raw":"---\ntitle: 自动化如何设计和维护才能不成为每日工作的一部分\ndate: 2024-03-21\ncategories:\n  - 技术思考\ntags:\n  - 自动化\n  - 系统设计\n  - 效率提升\n---\n\n## 前言\n很多时候，我们引入自动化是为了提高效率，但如果设计和维护不当，自动化反而会变成日常工作的负担。本文将探讨如何设计和维护自动化系统，使其真正成为效率工具而不是额外负担。\n\n## 一、自动化设计的核心原则\n\n### 1. 保持简单性\n- 避免过度工程化\n- 只自动化真正重复且稳定的流程\n- 模块化设计，便于维护和更新\n\n### 2. 可观测性\n- 完善的日志系统\n- 关键节点的监控告警\n- 清晰的状态展示\n\n### 3. 容错性\n- 优雅的错误处理机制\n- 自动重试机制\n- 手动介入的接口预留\n\n## 二、避免自动化陷阱\n\n### 1. 过度自动化\n- 不是所有流程都适合自动化\n- 评估投入产出比\n- 保留必要的人工干预环节\n\n### 2. 脆弱的依赖\n- 减少外部依赖\n- 做好依赖的版本管理\n- 设计降级方案\n\n### 3. 维护成本高\n- 文档先行\n- 代码可读性优先\n- 统一的规范和标准\n\n## 三、可持续的自动化维护策略\n\n### 1. 预防性维护\n- 定期代码审查\n- 及时更新依赖\n- 性能监控和优化\n\n### 2. 文档驱动\n- 详细的设计文档\n- 操作手册和故障处理指南\n- 变更记录和版本控制\n\n### 3. 团队协作\n- 知识共享机制\n- 明确的责任分工\n- 持续的技能培训\n\n## 四、最佳实践建议\n\n### 1. 循序渐进\n- 从小规模开始\n- 逐步扩展和完善\n- 及时总结经验\n\n### 2. 标准化流程\n- 统一的开发规范\n- 固定的发布流程\n- 规范的审核机制\n\n### 3. 持续优化\n- 定期评估效果\n- 收集用户反馈\n- 及时调整改进\n\n## 总结\n好的自动化应该是\"搭建之后就不用太操心\"的系统。通过合理的设计和维护策略，我们可以让自动化真正成为提升效率的工具，而不是日常工作的负担。关键在于保持简单、重视可维护性，并建立长期有效的维护机制。\n\n## 参考资料\n1. 《持续交付：发布可靠软件的系统方法》\n2. 《SRE：Google运维解密》\n3. 《DevOps实践指南》\n","slug":"19_自动化如何设计和维护才能不成为每日工作的一部分","published":1,"updated":"2025-01-05T15:30:28.822Z","_id":"cm5jrjsoj0000i02zcr2g5chc","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>很多时候，我们引入自动化是为了提高效率，但如果设计和维护不当，自动化反而会变成日常工作的负担。本文将探讨如何设计和维护自动化系统，使其真正成为效率工具而不是额外负担。</p>\n<h2 id=\"一、自动化设计的核心原则\"><a href=\"#一、自动化设计的核心原则\" class=\"headerlink\" title=\"一、自动化设计的核心原则\"></a>一、自动化设计的核心原则</h2><h3 id=\"1-保持简单性\"><a href=\"#1-保持简单性\" class=\"headerlink\" title=\"1. 保持简单性\"></a>1. 保持简单性</h3><ul>\n<li>避免过度工程化</li>\n<li>只自动化真正重复且稳定的流程</li>\n<li>模块化设计，便于维护和更新</li>\n</ul>\n<h3 id=\"2-可观测性\"><a href=\"#2-可观测性\" class=\"headerlink\" title=\"2. 可观测性\"></a>2. 可观测性</h3><ul>\n<li>完善的日志系统</li>\n<li>关键节点的监控告警</li>\n<li>清晰的状态展示</li>\n</ul>\n<h3 id=\"3-容错性\"><a href=\"#3-容错性\" class=\"headerlink\" title=\"3. 容错性\"></a>3. 容错性</h3><ul>\n<li>优雅的错误处理机制</li>\n<li>自动重试机制</li>\n<li>手动介入的接口预留</li>\n</ul>\n<h2 id=\"二、避免自动化陷阱\"><a href=\"#二、避免自动化陷阱\" class=\"headerlink\" title=\"二、避免自动化陷阱\"></a>二、避免自动化陷阱</h2><h3 id=\"1-过度自动化\"><a href=\"#1-过度自动化\" class=\"headerlink\" title=\"1. 过度自动化\"></a>1. 过度自动化</h3><ul>\n<li>不是所有流程都适合自动化</li>\n<li>评估投入产出比</li>\n<li>保留必要的人工干预环节</li>\n</ul>\n<h3 id=\"2-脆弱的依赖\"><a href=\"#2-脆弱的依赖\" class=\"headerlink\" title=\"2. 脆弱的依赖\"></a>2. 脆弱的依赖</h3><ul>\n<li>减少外部依赖</li>\n<li>做好依赖的版本管理</li>\n<li>设计降级方案</li>\n</ul>\n<h3 id=\"3-维护成本高\"><a href=\"#3-维护成本高\" class=\"headerlink\" title=\"3. 维护成本高\"></a>3. 维护成本高</h3><ul>\n<li>文档先行</li>\n<li>代码可读性优先</li>\n<li>统一的规范和标准</li>\n</ul>\n<h2 id=\"三、可持续的自动化维护策略\"><a href=\"#三、可持续的自动化维护策略\" class=\"headerlink\" title=\"三、可持续的自动化维护策略\"></a>三、可持续的自动化维护策略</h2><h3 id=\"1-预防性维护\"><a href=\"#1-预防性维护\" class=\"headerlink\" title=\"1. 预防性维护\"></a>1. 预防性维护</h3><ul>\n<li>定期代码审查</li>\n<li>及时更新依赖</li>\n<li>性能监控和优化</li>\n</ul>\n<h3 id=\"2-文档驱动\"><a href=\"#2-文档驱动\" class=\"headerlink\" title=\"2. 文档驱动\"></a>2. 文档驱动</h3><ul>\n<li>详细的设计文档</li>\n<li>操作手册和故障处理指南</li>\n<li>变更记录和版本控制</li>\n</ul>\n<h3 id=\"3-团队协作\"><a href=\"#3-团队协作\" class=\"headerlink\" title=\"3. 团队协作\"></a>3. 团队协作</h3><ul>\n<li>知识共享机制</li>\n<li>明确的责任分工</li>\n<li>持续的技能培训</li>\n</ul>\n<h2 id=\"四、最佳实践建议\"><a href=\"#四、最佳实践建议\" class=\"headerlink\" title=\"四、最佳实践建议\"></a>四、最佳实践建议</h2><h3 id=\"1-循序渐进\"><a href=\"#1-循序渐进\" class=\"headerlink\" title=\"1. 循序渐进\"></a>1. 循序渐进</h3><ul>\n<li>从小规模开始</li>\n<li>逐步扩展和完善</li>\n<li>及时总结经验</li>\n</ul>\n<h3 id=\"2-标准化流程\"><a href=\"#2-标准化流程\" class=\"headerlink\" title=\"2. 标准化流程\"></a>2. 标准化流程</h3><ul>\n<li>统一的开发规范</li>\n<li>固定的发布流程</li>\n<li>规范的审核机制</li>\n</ul>\n<h3 id=\"3-持续优化\"><a href=\"#3-持续优化\" class=\"headerlink\" title=\"3. 持续优化\"></a>3. 持续优化</h3><ul>\n<li>定期评估效果</li>\n<li>收集用户反馈</li>\n<li>及时调整改进</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>好的自动化应该是”搭建之后就不用太操心”的系统。通过合理的设计和维护策略，我们可以让自动化真正成为提升效率的工具，而不是日常工作的负担。关键在于保持简单、重视可维护性，并建立长期有效的维护机制。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li>《持续交付：发布可靠软件的系统方法》</li>\n<li>《SRE：Google运维解密》</li>\n<li>《DevOps实践指南》</li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>很多时候，我们引入自动化是为了提高效率，但如果设计和维护不当，自动化反而会变成日常工作的负担。本文将探讨如何设计和维护自动化系统，使其真正成为效率工具而不是额外负担。</p>\n<h2 id=\"一、自动化设计的核心原则\"><a href=\"#一、自动化设计的核心原则\" class=\"headerlink\" title=\"一、自动化设计的核心原则\"></a>一、自动化设计的核心原则</h2><h3 id=\"1-保持简单性\"><a href=\"#1-保持简单性\" class=\"headerlink\" title=\"1. 保持简单性\"></a>1. 保持简单性</h3><ul>\n<li>避免过度工程化</li>\n<li>只自动化真正重复且稳定的流程</li>\n<li>模块化设计，便于维护和更新</li>\n</ul>\n<h3 id=\"2-可观测性\"><a href=\"#2-可观测性\" class=\"headerlink\" title=\"2. 可观测性\"></a>2. 可观测性</h3><ul>\n<li>完善的日志系统</li>\n<li>关键节点的监控告警</li>\n<li>清晰的状态展示</li>\n</ul>\n<h3 id=\"3-容错性\"><a href=\"#3-容错性\" class=\"headerlink\" title=\"3. 容错性\"></a>3. 容错性</h3><ul>\n<li>优雅的错误处理机制</li>\n<li>自动重试机制</li>\n<li>手动介入的接口预留</li>\n</ul>\n<h2 id=\"二、避免自动化陷阱\"><a href=\"#二、避免自动化陷阱\" class=\"headerlink\" title=\"二、避免自动化陷阱\"></a>二、避免自动化陷阱</h2><h3 id=\"1-过度自动化\"><a href=\"#1-过度自动化\" class=\"headerlink\" title=\"1. 过度自动化\"></a>1. 过度自动化</h3><ul>\n<li>不是所有流程都适合自动化</li>\n<li>评估投入产出比</li>\n<li>保留必要的人工干预环节</li>\n</ul>\n<h3 id=\"2-脆弱的依赖\"><a href=\"#2-脆弱的依赖\" class=\"headerlink\" title=\"2. 脆弱的依赖\"></a>2. 脆弱的依赖</h3><ul>\n<li>减少外部依赖</li>\n<li>做好依赖的版本管理</li>\n<li>设计降级方案</li>\n</ul>\n<h3 id=\"3-维护成本高\"><a href=\"#3-维护成本高\" class=\"headerlink\" title=\"3. 维护成本高\"></a>3. 维护成本高</h3><ul>\n<li>文档先行</li>\n<li>代码可读性优先</li>\n<li>统一的规范和标准</li>\n</ul>\n<h2 id=\"三、可持续的自动化维护策略\"><a href=\"#三、可持续的自动化维护策略\" class=\"headerlink\" title=\"三、可持续的自动化维护策略\"></a>三、可持续的自动化维护策略</h2><h3 id=\"1-预防性维护\"><a href=\"#1-预防性维护\" class=\"headerlink\" title=\"1. 预防性维护\"></a>1. 预防性维护</h3><ul>\n<li>定期代码审查</li>\n<li>及时更新依赖</li>\n<li>性能监控和优化</li>\n</ul>\n<h3 id=\"2-文档驱动\"><a href=\"#2-文档驱动\" class=\"headerlink\" title=\"2. 文档驱动\"></a>2. 文档驱动</h3><ul>\n<li>详细的设计文档</li>\n<li>操作手册和故障处理指南</li>\n<li>变更记录和版本控制</li>\n</ul>\n<h3 id=\"3-团队协作\"><a href=\"#3-团队协作\" class=\"headerlink\" title=\"3. 团队协作\"></a>3. 团队协作</h3><ul>\n<li>知识共享机制</li>\n<li>明确的责任分工</li>\n<li>持续的技能培训</li>\n</ul>\n<h2 id=\"四、最佳实践建议\"><a href=\"#四、最佳实践建议\" class=\"headerlink\" title=\"四、最佳实践建议\"></a>四、最佳实践建议</h2><h3 id=\"1-循序渐进\"><a href=\"#1-循序渐进\" class=\"headerlink\" title=\"1. 循序渐进\"></a>1. 循序渐进</h3><ul>\n<li>从小规模开始</li>\n<li>逐步扩展和完善</li>\n<li>及时总结经验</li>\n</ul>\n<h3 id=\"2-标准化流程\"><a href=\"#2-标准化流程\" class=\"headerlink\" title=\"2. 标准化流程\"></a>2. 标准化流程</h3><ul>\n<li>统一的开发规范</li>\n<li>固定的发布流程</li>\n<li>规范的审核机制</li>\n</ul>\n<h3 id=\"3-持续优化\"><a href=\"#3-持续优化\" class=\"headerlink\" title=\"3. 持续优化\"></a>3. 持续优化</h3><ul>\n<li>定期评估效果</li>\n<li>收集用户反馈</li>\n<li>及时调整改进</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>好的自动化应该是”搭建之后就不用太操心”的系统。通过合理的设计和维护策略，我们可以让自动化真正成为提升效率的工具，而不是日常工作的负担。关键在于保持简单、重视可维护性，并建立长期有效的维护机制。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li>《持续交付：发布可靠软件的系统方法》</li>\n<li>《SRE：Google运维解密》</li>\n<li>《DevOps实践指南》</li>\n</ol>\n"},{"title":"乒乓球实战技术指南","date":"2025-01-07T16:00:00.000Z","_content":"\n## 基本功\n\n### 握拍技巧\n\n#### 正手利选手\n- **握拍方式**\n  - 食指和拇指呈\"V\"形自然握持\n  - 其余三指放松环绕拍柄\n  - 拍面与前臂夹角约100-110度\n\n#### 反手利选手  \n- **握拍方式**\n  - 拇指略微展开平放\n  - 食指位置靠前\n  - 拍面与前臂夹角约80-90度\n\n### 站位要领\n\n#### 正手利选手\n- **基础站位**\n  - 偏右半台为主\n  - 重心略偏右脚\n  - 便于正手进攻和衔接\n\n#### 反手利选手\n- **基础站位**\n  - 偏中间位置\n  - 重心相对居中\n  - 保持对两侧的控制能力\n  - 兼顾反手进攻和防守转换\n\n#### 共同要点\n- 保持膝盖微屈\n- 重心前倾约15度\n- 双脚与肩同宽\n- 随时准备快速移动\n\n### 站位优势分析\n\n#### 正手利选手偏左站位优势\n1. **进攻优势**\n   - 更容易形成正手抢攻\n   - 扩大正手击球范围\n   - 减少反手区域面积\n\n2. **移动优势**\n   - 便于正手位快速启动\n   - 容易完成侧身动作\n   - 有利于前后台调动\n\n#### 反手利选手中间站位优势\n1. **技术优势**\n   - 平衡两侧控制区域\n   - 反手进攻更加灵活\n   - 便于快速调整位置\n\n2. **战术优势**\n   - 兼顾台内短球控制\n   - 便于处理对手变线球\n   - 提高整体防守能力\n   - 减少死角\n\n### 正手拉球时序图\n\n```mermaid\nsequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n    Note over P: 重心略降,右脚后移\n    P->>R: 重心后移\n    Note over R: 1.大幅撤胯转腰<br>2.手臂自然后引<br>3.拍面后仰\n    R->>S: 启动挥拍\n    Note over S: 1.腿部发力蹬地带动重心前移<br>2.力量传递至腰胯形成旋转<br>3.髋部带动上身形成扭转<br>4.手臂保持放松自然跟随<br>5.形成从下到上的鞭状效应\n    S->>H: 迎击来球\n    Note over H: 1.合力点在球前上<br>2.拍面前倾45度<br>3.手指发力抓拍\n    H->>F: 击球后随动\n    Note over F: 1.手臂自然延伸<br>2.身体前倾跟随<br>3.重心前移\n    F->>B: 还原准备\n    Note over B: 1.垫步调整<br>2.重心回中<br>3.恢复预备姿势\n```\n\n### 正手启动挥拍阶段详解\n#### 1. 下肢发力\n- **右腿蹬地**\n  - 脚掌全面着地\n  - 由后向前蹬地发力\n  - 带动重心前移\n\n- **重心转换**\n  - 由后向前平稳过渡\n  - 保持身体稳定性\n  - 不要过早前倾\n\n#### 2. 核心带动\n- **髋部启动**\n  - 先于上半身发力\n  - 大幅度旋转带动\n  - 保持身体协调\n\n- **腰部跟随**\n  - 自然跟随髋部旋转\n  - 形成良好扭转\n  - 维持核心稳定\n\n#### 3. 上肢配合\n- **手臂放松**\n  - 保持自然后引\n  - 不要主动发力\n  - 跟随身体转动\n\n- **拍面控制**\n  - 保持后仰角度\n  - 等待击球时机\n  - 为抓拍做准备\n\n### 反手拉球时序图\n\n```mermaid\nsequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n\n    P->>R: 重心后移\n    Note over P: 重心略降,左脚后移,架肘抬臂\n    \n    R->>S: 启动挥拍\n    Note over R: 1.小幅撤胯转腰<br/>2.手臂架肘后引<br/>3.拍面后仰<br/>4.保持肘部架起\n    \n    S->>H: 迎击来球\n    Note over S: 1.左腿蹬地发力<br/>2.髋部带动转腰<br/>3.肘部保持架起<br/>4.手腕稳定<br/>5.拍面后仰<br/>6.手指预备\n    \n    H->>F: 击球后随动\n    Note over H: 1.球前上击球<br/>2.拍面45度<br/>3.手指抓拍\n    \n    F->>B: 还原准备\n    Note over F: 1.手臂延伸<br/>2.身体前倾<br/>3.重心前移\n    \n    Note over B: 1.垫步调整<br/>2.重心回中<br/>3.恢复预备\n```\n\n### 反手启动挥拍阶段详解\n\n#### 1. 下肢发力\n- **左腿蹬地**\n  - 脚掌全面着地\n  - 由后向前蹬地发力\n  - 带动重心前移\n\n- **重心转换**\n  - 由后向前平稳过渡\n  - 保持身体稳定性\n  - 不要过早前倾\n\n#### 2. 核心带动\n- **髋部启动**\n  - 先于上半身发力\n  - 小幅度旋转带动\n  - 保持身体协调\n\n- **腰部跟随**\n  - 自然跟随髋部旋转\n  - 不要过度扭转\n  - 维持核心稳定\n\n#### 3. 上肢控制\n- **肘部**\n  - 保持架起姿势\n  - 引导击球方向\n  - 避免下垂\n\n- **手腕**\n  - 保持稳定\n  - 不提前发力\n  - 等待击球时刻\n\n- **拍面**\n  - 保持后仰角度\n  - 准备击球角度\n  - 避免提前调整\n\n- **手指**\n  - 保持放松\n  - 准备抓拍发力\n  - 不要提前用力\n\n#### 4. 注意事项\n- 动作要协调连贯\n- 各部位发力要有先后次序\n- 保持身体稳定性\n- 为击球做好准备\n\n### 常见问题及解决方案\n\n1. **力量不足**\n   - 检查髋部发力\n   - 优化合力点位置\n   - 加强核心力量训练\n\n2. **击球不稳**\n   - 控制挥拍幅度\n   - 稳定击球点\n   - 加强基本功训练\n\n3. **动作不协调**\n   - 分解动作练习\n   - 慢动作体会\n   - 多球训练巩固\n\n### 步法\n- 并步\n- 跨步\n- 跳步\n\n### 发球\n- 正手发球\n- 反手发球\n\n### 接发球\n- 正手接发球\n- 反手接发球\n\n## 正手体系打法\n\n### 发球抢攻体系\n- **基础发球**\n  - 正手位快速下旋发球（靠近球台）\n  - 反手位短下旋发球（抢攻准备）\n  - 长球发球（直接得分或逼迫对手回球质量）\n\n- **抢攻技术**\n  - 第三板快速弧圈球（对方回球较高时）\n  - 第三板快带（对方回球较低时）\n  - 第三板爆冲（对方回球较软时）\n\n- **站位要领**\n  - 发球后快速移动到球台中间偏右位置\n  - 保持重心前倾，随时准备移动\n  - 注意观察对手站位和准备动作\n\n### 相持阶段打法\n- **正手位控制**\n  - 中台弧圈球（基本进攻）\n  - 快速侧身抽球（强势进攻）\n  - 台内快带（抢攻反击）\n\n- **步法配合**\n  - 并步移动（左右移动基础）\n  - 跨步抽球（扩大击球范围）\n  - 跳步调整（快速回位）\n\n## 反手体系打法\n\n### 近台快攻体系\n- **基本站位**\n  - 偏左站位（便于反手控制）\n  - 重心略降低（提高稳定性）\n  - 手肘保持适当距离（便于快速反应）\n\n- **技术要点**\n  - 反手快速推挡（基础技术）\n  - 反手快攻（主要得分手段）\n  - 反手搓球（变化技术）\n\n- **战术应用**\n  - 反手位发球后快攻\n  - 台内快速相持\n  - 适时结合正手进攻\n\n### 实战技巧\n\n#### 发球技巧\n- **短球发球**\n  - 球要触网，降低高度\n  - 加强旋转变化\n  - 注意发球动作相似性\n\n- **长球发球**\n  - 突然加快速度\n  - 改变落点\n  - 结合战术意图\n\n#### 接发球技巧\n- **短球处理**\n  - 轻推短球（保持主动）\n  - 突然搓长（打乱对手节奏）\n  - 快速推攻（抢攻机会）\n\n- **长球处理**\n  - 快速弧圈球（抢攻为主）\n  - 侧身抽球（强势进攻）\n  - 稳健推挡（保持相持）\n\n## 实战训练方法\n\n### 基础训练\n1. **多球训练**\n   - 固定落点移动训练\n   - 不固定落点移动训练\n   - 发球抢攻专项训练\n\n2. **对打训练**\n   - 单一技术对打\n   - 组合技术对打\n   - 实战模拟对打\n\n### 进阶训练\n1. **战术演练**\n   - 发球后三板战术\n   - 接发球后四板战术\n   - 相持阶段战术\n\n2. **实战模拟**\n   - 11分制比赛\n   - 特定分数段练习\n   - 不同打法对抗\n\n## 常见问题解决\n\n### 技术问题\n- **发球不稳定**\n  - 检查抛球高度\n  - 保持动作一致\n  - 控制触球部位\n\n- **击球不到位**\n  - 调整站位距离\n  - 检查击球点\n  - 加强步法训练\n\n### 战术问题\n- **无法形成进攻**\n  - 改善发球质量\n  - 提高抢攻意识\n  - 加强战术训练\n\n- **易失误**\n  - 降低击球力量\n  - 提高击球稳定性\n  - 选择合适进攻时机\n","source":"_posts/20_乒乓球实战技术指南.md","raw":"---\ntitle: 乒乓球实战技术指南\ndate: 2025-01-08\ntags: \n  - 技术文档\n  - 乒乓球\n---\n\n## 基本功\n\n### 握拍技巧\n\n#### 正手利选手\n- **握拍方式**\n  - 食指和拇指呈\"V\"形自然握持\n  - 其余三指放松环绕拍柄\n  - 拍面与前臂夹角约100-110度\n\n#### 反手利选手  \n- **握拍方式**\n  - 拇指略微展开平放\n  - 食指位置靠前\n  - 拍面与前臂夹角约80-90度\n\n### 站位要领\n\n#### 正手利选手\n- **基础站位**\n  - 偏右半台为主\n  - 重心略偏右脚\n  - 便于正手进攻和衔接\n\n#### 反手利选手\n- **基础站位**\n  - 偏中间位置\n  - 重心相对居中\n  - 保持对两侧的控制能力\n  - 兼顾反手进攻和防守转换\n\n#### 共同要点\n- 保持膝盖微屈\n- 重心前倾约15度\n- 双脚与肩同宽\n- 随时准备快速移动\n\n### 站位优势分析\n\n#### 正手利选手偏左站位优势\n1. **进攻优势**\n   - 更容易形成正手抢攻\n   - 扩大正手击球范围\n   - 减少反手区域面积\n\n2. **移动优势**\n   - 便于正手位快速启动\n   - 容易完成侧身动作\n   - 有利于前后台调动\n\n#### 反手利选手中间站位优势\n1. **技术优势**\n   - 平衡两侧控制区域\n   - 反手进攻更加灵活\n   - 便于快速调整位置\n\n2. **战术优势**\n   - 兼顾台内短球控制\n   - 便于处理对手变线球\n   - 提高整体防守能力\n   - 减少死角\n\n### 正手拉球时序图\n\n```mermaid\nsequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n    Note over P: 重心略降,右脚后移\n    P->>R: 重心后移\n    Note over R: 1.大幅撤胯转腰<br>2.手臂自然后引<br>3.拍面后仰\n    R->>S: 启动挥拍\n    Note over S: 1.腿部发力蹬地带动重心前移<br>2.力量传递至腰胯形成旋转<br>3.髋部带动上身形成扭转<br>4.手臂保持放松自然跟随<br>5.形成从下到上的鞭状效应\n    S->>H: 迎击来球\n    Note over H: 1.合力点在球前上<br>2.拍面前倾45度<br>3.手指发力抓拍\n    H->>F: 击球后随动\n    Note over F: 1.手臂自然延伸<br>2.身体前倾跟随<br>3.重心前移\n    F->>B: 还原准备\n    Note over B: 1.垫步调整<br>2.重心回中<br>3.恢复预备姿势\n```\n\n### 正手启动挥拍阶段详解\n#### 1. 下肢发力\n- **右腿蹬地**\n  - 脚掌全面着地\n  - 由后向前蹬地发力\n  - 带动重心前移\n\n- **重心转换**\n  - 由后向前平稳过渡\n  - 保持身体稳定性\n  - 不要过早前倾\n\n#### 2. 核心带动\n- **髋部启动**\n  - 先于上半身发力\n  - 大幅度旋转带动\n  - 保持身体协调\n\n- **腰部跟随**\n  - 自然跟随髋部旋转\n  - 形成良好扭转\n  - 维持核心稳定\n\n#### 3. 上肢配合\n- **手臂放松**\n  - 保持自然后引\n  - 不要主动发力\n  - 跟随身体转动\n\n- **拍面控制**\n  - 保持后仰角度\n  - 等待击球时机\n  - 为抓拍做准备\n\n### 反手拉球时序图\n\n```mermaid\nsequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n\n    P->>R: 重心后移\n    Note over P: 重心略降,左脚后移,架肘抬臂\n    \n    R->>S: 启动挥拍\n    Note over R: 1.小幅撤胯转腰<br/>2.手臂架肘后引<br/>3.拍面后仰<br/>4.保持肘部架起\n    \n    S->>H: 迎击来球\n    Note over S: 1.左腿蹬地发力<br/>2.髋部带动转腰<br/>3.肘部保持架起<br/>4.手腕稳定<br/>5.拍面后仰<br/>6.手指预备\n    \n    H->>F: 击球后随动\n    Note over H: 1.球前上击球<br/>2.拍面45度<br/>3.手指抓拍\n    \n    F->>B: 还原准备\n    Note over F: 1.手臂延伸<br/>2.身体前倾<br/>3.重心前移\n    \n    Note over B: 1.垫步调整<br/>2.重心回中<br/>3.恢复预备\n```\n\n### 反手启动挥拍阶段详解\n\n#### 1. 下肢发力\n- **左腿蹬地**\n  - 脚掌全面着地\n  - 由后向前蹬地发力\n  - 带动重心前移\n\n- **重心转换**\n  - 由后向前平稳过渡\n  - 保持身体稳定性\n  - 不要过早前倾\n\n#### 2. 核心带动\n- **髋部启动**\n  - 先于上半身发力\n  - 小幅度旋转带动\n  - 保持身体协调\n\n- **腰部跟随**\n  - 自然跟随髋部旋转\n  - 不要过度扭转\n  - 维持核心稳定\n\n#### 3. 上肢控制\n- **肘部**\n  - 保持架起姿势\n  - 引导击球方向\n  - 避免下垂\n\n- **手腕**\n  - 保持稳定\n  - 不提前发力\n  - 等待击球时刻\n\n- **拍面**\n  - 保持后仰角度\n  - 准备击球角度\n  - 避免提前调整\n\n- **手指**\n  - 保持放松\n  - 准备抓拍发力\n  - 不要提前用力\n\n#### 4. 注意事项\n- 动作要协调连贯\n- 各部位发力要有先后次序\n- 保持身体稳定性\n- 为击球做好准备\n\n### 常见问题及解决方案\n\n1. **力量不足**\n   - 检查髋部发力\n   - 优化合力点位置\n   - 加强核心力量训练\n\n2. **击球不稳**\n   - 控制挥拍幅度\n   - 稳定击球点\n   - 加强基本功训练\n\n3. **动作不协调**\n   - 分解动作练习\n   - 慢动作体会\n   - 多球训练巩固\n\n### 步法\n- 并步\n- 跨步\n- 跳步\n\n### 发球\n- 正手发球\n- 反手发球\n\n### 接发球\n- 正手接发球\n- 反手接发球\n\n## 正手体系打法\n\n### 发球抢攻体系\n- **基础发球**\n  - 正手位快速下旋发球（靠近球台）\n  - 反手位短下旋发球（抢攻准备）\n  - 长球发球（直接得分或逼迫对手回球质量）\n\n- **抢攻技术**\n  - 第三板快速弧圈球（对方回球较高时）\n  - 第三板快带（对方回球较低时）\n  - 第三板爆冲（对方回球较软时）\n\n- **站位要领**\n  - 发球后快速移动到球台中间偏右位置\n  - 保持重心前倾，随时准备移动\n  - 注意观察对手站位和准备动作\n\n### 相持阶段打法\n- **正手位控制**\n  - 中台弧圈球（基本进攻）\n  - 快速侧身抽球（强势进攻）\n  - 台内快带（抢攻反击）\n\n- **步法配合**\n  - 并步移动（左右移动基础）\n  - 跨步抽球（扩大击球范围）\n  - 跳步调整（快速回位）\n\n## 反手体系打法\n\n### 近台快攻体系\n- **基本站位**\n  - 偏左站位（便于反手控制）\n  - 重心略降低（提高稳定性）\n  - 手肘保持适当距离（便于快速反应）\n\n- **技术要点**\n  - 反手快速推挡（基础技术）\n  - 反手快攻（主要得分手段）\n  - 反手搓球（变化技术）\n\n- **战术应用**\n  - 反手位发球后快攻\n  - 台内快速相持\n  - 适时结合正手进攻\n\n### 实战技巧\n\n#### 发球技巧\n- **短球发球**\n  - 球要触网，降低高度\n  - 加强旋转变化\n  - 注意发球动作相似性\n\n- **长球发球**\n  - 突然加快速度\n  - 改变落点\n  - 结合战术意图\n\n#### 接发球技巧\n- **短球处理**\n  - 轻推短球（保持主动）\n  - 突然搓长（打乱对手节奏）\n  - 快速推攻（抢攻机会）\n\n- **长球处理**\n  - 快速弧圈球（抢攻为主）\n  - 侧身抽球（强势进攻）\n  - 稳健推挡（保持相持）\n\n## 实战训练方法\n\n### 基础训练\n1. **多球训练**\n   - 固定落点移动训练\n   - 不固定落点移动训练\n   - 发球抢攻专项训练\n\n2. **对打训练**\n   - 单一技术对打\n   - 组合技术对打\n   - 实战模拟对打\n\n### 进阶训练\n1. **战术演练**\n   - 发球后三板战术\n   - 接发球后四板战术\n   - 相持阶段战术\n\n2. **实战模拟**\n   - 11分制比赛\n   - 特定分数段练习\n   - 不同打法对抗\n\n## 常见问题解决\n\n### 技术问题\n- **发球不稳定**\n  - 检查抛球高度\n  - 保持动作一致\n  - 控制触球部位\n\n- **击球不到位**\n  - 调整站位距离\n  - 检查击球点\n  - 加强步法训练\n\n### 战术问题\n- **无法形成进攻**\n  - 改善发球质量\n  - 提高抢攻意识\n  - 加强战术训练\n\n- **易失误**\n  - 降低击球力量\n  - 提高击球稳定性\n  - 选择合适进攻时机\n","slug":"20_乒乓球实战技术指南","published":1,"updated":"2025-01-28T10:39:35.537Z","_id":"cm5jryl88000ai02z7bbc4o0b","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"基本功\"><a href=\"#基本功\" class=\"headerlink\" title=\"基本功\"></a>基本功</h2><h3 id=\"握拍技巧\"><a href=\"#握拍技巧\" class=\"headerlink\" title=\"握拍技巧\"></a>握拍技巧</h3><h4 id=\"正手利选手\"><a href=\"#正手利选手\" class=\"headerlink\" title=\"正手利选手\"></a>正手利选手</h4><ul>\n<li><strong>握拍方式</strong><ul>\n<li>食指和拇指呈”V”形自然握持</li>\n<li>其余三指放松环绕拍柄</li>\n<li>拍面与前臂夹角约100-110度</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"反手利选手\"><a href=\"#反手利选手\" class=\"headerlink\" title=\"反手利选手\"></a>反手利选手</h4><ul>\n<li><strong>握拍方式</strong><ul>\n<li>拇指略微展开平放</li>\n<li>食指位置靠前</li>\n<li>拍面与前臂夹角约80-90度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"站位要领\"><a href=\"#站位要领\" class=\"headerlink\" title=\"站位要领\"></a>站位要领</h3><h4 id=\"正手利选手-1\"><a href=\"#正手利选手-1\" class=\"headerlink\" title=\"正手利选手\"></a>正手利选手</h4><ul>\n<li><strong>基础站位</strong><ul>\n<li>偏右半台为主</li>\n<li>重心略偏右脚</li>\n<li>便于正手进攻和衔接</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"反手利选手-1\"><a href=\"#反手利选手-1\" class=\"headerlink\" title=\"反手利选手\"></a>反手利选手</h4><ul>\n<li><strong>基础站位</strong><ul>\n<li>偏中间位置</li>\n<li>重心相对居中</li>\n<li>保持对两侧的控制能力</li>\n<li>兼顾反手进攻和防守转换</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"共同要点\"><a href=\"#共同要点\" class=\"headerlink\" title=\"共同要点\"></a>共同要点</h4><ul>\n<li>保持膝盖微屈</li>\n<li>重心前倾约15度</li>\n<li>双脚与肩同宽</li>\n<li>随时准备快速移动</li>\n</ul>\n<h3 id=\"站位优势分析\"><a href=\"#站位优势分析\" class=\"headerlink\" title=\"站位优势分析\"></a>站位优势分析</h3><h4 id=\"正手利选手偏左站位优势\"><a href=\"#正手利选手偏左站位优势\" class=\"headerlink\" title=\"正手利选手偏左站位优势\"></a>正手利选手偏左站位优势</h4><ol>\n<li><p><strong>进攻优势</strong></p>\n<ul>\n<li>更容易形成正手抢攻</li>\n<li>扩大正手击球范围</li>\n<li>减少反手区域面积</li>\n</ul>\n</li>\n<li><p><strong>移动优势</strong></p>\n<ul>\n<li>便于正手位快速启动</li>\n<li>容易完成侧身动作</li>\n<li>有利于前后台调动</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"反手利选手中间站位优势\"><a href=\"#反手利选手中间站位优势\" class=\"headerlink\" title=\"反手利选手中间站位优势\"></a>反手利选手中间站位优势</h4><ol>\n<li><p><strong>技术优势</strong></p>\n<ul>\n<li>平衡两侧控制区域</li>\n<li>反手进攻更加灵活</li>\n<li>便于快速调整位置</li>\n</ul>\n</li>\n<li><p><strong>战术优势</strong></p>\n<ul>\n<li>兼顾台内短球控制</li>\n<li>便于处理对手变线球</li>\n<li>提高整体防守能力</li>\n<li>减少死角</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"正手拉球时序图\"><a href=\"#正手拉球时序图\" class=\"headerlink\" title=\"正手拉球时序图\"></a>正手拉球时序图</h3><pre class=\"mermaid\">sequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n    Note over P: 重心略降,右脚后移\n    P->>R: 重心后移\n    Note over R: 1.大幅撤胯转腰<br>2.手臂自然后引<br>3.拍面后仰\n    R->>S: 启动挥拍\n    Note over S: 1.腿部发力蹬地带动重心前移<br>2.力量传递至腰胯形成旋转<br>3.髋部带动上身形成扭转<br>4.手臂保持放松自然跟随<br>5.形成从下到上的鞭状效应\n    S->>H: 迎击来球\n    Note over H: 1.合力点在球前上<br>2.拍面前倾45度<br>3.手指发力抓拍\n    H->>F: 击球后随动\n    Note over F: 1.手臂自然延伸<br>2.身体前倾跟随<br>3.重心前移\n    F->>B: 还原准备\n    Note over B: 1.垫步调整<br>2.重心回中<br>3.恢复预备姿势</pre>\n\n<h3 id=\"正手启动挥拍阶段详解\"><a href=\"#正手启动挥拍阶段详解\" class=\"headerlink\" title=\"正手启动挥拍阶段详解\"></a>正手启动挥拍阶段详解</h3><h4 id=\"1-下肢发力\"><a href=\"#1-下肢发力\" class=\"headerlink\" title=\"1. 下肢发力\"></a>1. 下肢发力</h4><ul>\n<li><p><strong>右腿蹬地</strong></p>\n<ul>\n<li>脚掌全面着地</li>\n<li>由后向前蹬地发力</li>\n<li>带动重心前移</li>\n</ul>\n</li>\n<li><p><strong>重心转换</strong></p>\n<ul>\n<li>由后向前平稳过渡</li>\n<li>保持身体稳定性</li>\n<li>不要过早前倾</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-核心带动\"><a href=\"#2-核心带动\" class=\"headerlink\" title=\"2. 核心带动\"></a>2. 核心带动</h4><ul>\n<li><p><strong>髋部启动</strong></p>\n<ul>\n<li>先于上半身发力</li>\n<li>大幅度旋转带动</li>\n<li>保持身体协调</li>\n</ul>\n</li>\n<li><p><strong>腰部跟随</strong></p>\n<ul>\n<li>自然跟随髋部旋转</li>\n<li>形成良好扭转</li>\n<li>维持核心稳定</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-上肢配合\"><a href=\"#3-上肢配合\" class=\"headerlink\" title=\"3. 上肢配合\"></a>3. 上肢配合</h4><ul>\n<li><p><strong>手臂放松</strong></p>\n<ul>\n<li>保持自然后引</li>\n<li>不要主动发力</li>\n<li>跟随身体转动</li>\n</ul>\n</li>\n<li><p><strong>拍面控制</strong></p>\n<ul>\n<li>保持后仰角度</li>\n<li>等待击球时机</li>\n<li>为抓拍做准备</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"反手拉球时序图\"><a href=\"#反手拉球时序图\" class=\"headerlink\" title=\"反手拉球时序图\"></a>反手拉球时序图</h3><pre class=\"mermaid\">sequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n\n    P->>R: 重心后移\n    Note over P: 重心略降,左脚后移,架肘抬臂\n\n    R->>S: 启动挥拍\n    Note over R: 1.小幅撤胯转腰<br/>2.手臂架肘后引<br/>3.拍面后仰<br/>4.保持肘部架起\n\n    S->>H: 迎击来球\n    Note over S: 1.左腿蹬地发力<br/>2.髋部带动转腰<br/>3.肘部保持架起<br/>4.手腕稳定<br/>5.拍面后仰<br/>6.手指预备\n\n    H->>F: 击球后随动\n    Note over H: 1.球前上击球<br/>2.拍面45度<br/>3.手指抓拍\n\n    F->>B: 还原准备\n    Note over F: 1.手臂延伸<br/>2.身体前倾<br/>3.重心前移\n\n    Note over B: 1.垫步调整<br/>2.重心回中<br/>3.恢复预备</pre>\n\n<h3 id=\"反手启动挥拍阶段详解\"><a href=\"#反手启动挥拍阶段详解\" class=\"headerlink\" title=\"反手启动挥拍阶段详解\"></a>反手启动挥拍阶段详解</h3><h4 id=\"1-下肢发力-1\"><a href=\"#1-下肢发力-1\" class=\"headerlink\" title=\"1. 下肢发力\"></a>1. 下肢发力</h4><ul>\n<li><p><strong>左腿蹬地</strong></p>\n<ul>\n<li>脚掌全面着地</li>\n<li>由后向前蹬地发力</li>\n<li>带动重心前移</li>\n</ul>\n</li>\n<li><p><strong>重心转换</strong></p>\n<ul>\n<li>由后向前平稳过渡</li>\n<li>保持身体稳定性</li>\n<li>不要过早前倾</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-核心带动-1\"><a href=\"#2-核心带动-1\" class=\"headerlink\" title=\"2. 核心带动\"></a>2. 核心带动</h4><ul>\n<li><p><strong>髋部启动</strong></p>\n<ul>\n<li>先于上半身发力</li>\n<li>小幅度旋转带动</li>\n<li>保持身体协调</li>\n</ul>\n</li>\n<li><p><strong>腰部跟随</strong></p>\n<ul>\n<li>自然跟随髋部旋转</li>\n<li>不要过度扭转</li>\n<li>维持核心稳定</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-上肢控制\"><a href=\"#3-上肢控制\" class=\"headerlink\" title=\"3. 上肢控制\"></a>3. 上肢控制</h4><ul>\n<li><p><strong>肘部</strong></p>\n<ul>\n<li>保持架起姿势</li>\n<li>引导击球方向</li>\n<li>避免下垂</li>\n</ul>\n</li>\n<li><p><strong>手腕</strong></p>\n<ul>\n<li>保持稳定</li>\n<li>不提前发力</li>\n<li>等待击球时刻</li>\n</ul>\n</li>\n<li><p><strong>拍面</strong></p>\n<ul>\n<li>保持后仰角度</li>\n<li>准备击球角度</li>\n<li>避免提前调整</li>\n</ul>\n</li>\n<li><p><strong>手指</strong></p>\n<ul>\n<li>保持放松</li>\n<li>准备抓拍发力</li>\n<li>不要提前用力</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-注意事项\"><a href=\"#4-注意事项\" class=\"headerlink\" title=\"4. 注意事项\"></a>4. 注意事项</h4><ul>\n<li>动作要协调连贯</li>\n<li>各部位发力要有先后次序</li>\n<li>保持身体稳定性</li>\n<li>为击球做好准备</li>\n</ul>\n<h3 id=\"常见问题及解决方案\"><a href=\"#常见问题及解决方案\" class=\"headerlink\" title=\"常见问题及解决方案\"></a>常见问题及解决方案</h3><ol>\n<li><p><strong>力量不足</strong></p>\n<ul>\n<li>检查髋部发力</li>\n<li>优化合力点位置</li>\n<li>加强核心力量训练</li>\n</ul>\n</li>\n<li><p><strong>击球不稳</strong></p>\n<ul>\n<li>控制挥拍幅度</li>\n<li>稳定击球点</li>\n<li>加强基本功训练</li>\n</ul>\n</li>\n<li><p><strong>动作不协调</strong></p>\n<ul>\n<li>分解动作练习</li>\n<li>慢动作体会</li>\n<li>多球训练巩固</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"步法\"><a href=\"#步法\" class=\"headerlink\" title=\"步法\"></a>步法</h3><ul>\n<li>并步</li>\n<li>跨步</li>\n<li>跳步</li>\n</ul>\n<h3 id=\"发球\"><a href=\"#发球\" class=\"headerlink\" title=\"发球\"></a>发球</h3><ul>\n<li>正手发球</li>\n<li>反手发球</li>\n</ul>\n<h3 id=\"接发球\"><a href=\"#接发球\" class=\"headerlink\" title=\"接发球\"></a>接发球</h3><ul>\n<li>正手接发球</li>\n<li>反手接发球</li>\n</ul>\n<h2 id=\"正手体系打法\"><a href=\"#正手体系打法\" class=\"headerlink\" title=\"正手体系打法\"></a>正手体系打法</h2><h3 id=\"发球抢攻体系\"><a href=\"#发球抢攻体系\" class=\"headerlink\" title=\"发球抢攻体系\"></a>发球抢攻体系</h3><ul>\n<li><p><strong>基础发球</strong></p>\n<ul>\n<li>正手位快速下旋发球（靠近球台）</li>\n<li>反手位短下旋发球（抢攻准备）</li>\n<li>长球发球（直接得分或逼迫对手回球质量）</li>\n</ul>\n</li>\n<li><p><strong>抢攻技术</strong></p>\n<ul>\n<li>第三板快速弧圈球（对方回球较高时）</li>\n<li>第三板快带（对方回球较低时）</li>\n<li>第三板爆冲（对方回球较软时）</li>\n</ul>\n</li>\n<li><p><strong>站位要领</strong></p>\n<ul>\n<li>发球后快速移动到球台中间偏右位置</li>\n<li>保持重心前倾，随时准备移动</li>\n<li>注意观察对手站位和准备动作</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相持阶段打法\"><a href=\"#相持阶段打法\" class=\"headerlink\" title=\"相持阶段打法\"></a>相持阶段打法</h3><ul>\n<li><p><strong>正手位控制</strong></p>\n<ul>\n<li>中台弧圈球（基本进攻）</li>\n<li>快速侧身抽球（强势进攻）</li>\n<li>台内快带（抢攻反击）</li>\n</ul>\n</li>\n<li><p><strong>步法配合</strong></p>\n<ul>\n<li>并步移动（左右移动基础）</li>\n<li>跨步抽球（扩大击球范围）</li>\n<li>跳步调整（快速回位）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"反手体系打法\"><a href=\"#反手体系打法\" class=\"headerlink\" title=\"反手体系打法\"></a>反手体系打法</h2><h3 id=\"近台快攻体系\"><a href=\"#近台快攻体系\" class=\"headerlink\" title=\"近台快攻体系\"></a>近台快攻体系</h3><ul>\n<li><p><strong>基本站位</strong></p>\n<ul>\n<li>偏左站位（便于反手控制）</li>\n<li>重心略降低（提高稳定性）</li>\n<li>手肘保持适当距离（便于快速反应）</li>\n</ul>\n</li>\n<li><p><strong>技术要点</strong></p>\n<ul>\n<li>反手快速推挡（基础技术）</li>\n<li>反手快攻（主要得分手段）</li>\n<li>反手搓球（变化技术）</li>\n</ul>\n</li>\n<li><p><strong>战术应用</strong></p>\n<ul>\n<li>反手位发球后快攻</li>\n<li>台内快速相持</li>\n<li>适时结合正手进攻</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"实战技巧\"><a href=\"#实战技巧\" class=\"headerlink\" title=\"实战技巧\"></a>实战技巧</h3><h4 id=\"发球技巧\"><a href=\"#发球技巧\" class=\"headerlink\" title=\"发球技巧\"></a>发球技巧</h4><ul>\n<li><p><strong>短球发球</strong></p>\n<ul>\n<li>球要触网，降低高度</li>\n<li>加强旋转变化</li>\n<li>注意发球动作相似性</li>\n</ul>\n</li>\n<li><p><strong>长球发球</strong></p>\n<ul>\n<li>突然加快速度</li>\n<li>改变落点</li>\n<li>结合战术意图</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"接发球技巧\"><a href=\"#接发球技巧\" class=\"headerlink\" title=\"接发球技巧\"></a>接发球技巧</h4><ul>\n<li><p><strong>短球处理</strong></p>\n<ul>\n<li>轻推短球（保持主动）</li>\n<li>突然搓长（打乱对手节奏）</li>\n<li>快速推攻（抢攻机会）</li>\n</ul>\n</li>\n<li><p><strong>长球处理</strong></p>\n<ul>\n<li>快速弧圈球（抢攻为主）</li>\n<li>侧身抽球（强势进攻）</li>\n<li>稳健推挡（保持相持）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"实战训练方法\"><a href=\"#实战训练方法\" class=\"headerlink\" title=\"实战训练方法\"></a>实战训练方法</h2><h3 id=\"基础训练\"><a href=\"#基础训练\" class=\"headerlink\" title=\"基础训练\"></a>基础训练</h3><ol>\n<li><p><strong>多球训练</strong></p>\n<ul>\n<li>固定落点移动训练</li>\n<li>不固定落点移动训练</li>\n<li>发球抢攻专项训练</li>\n</ul>\n</li>\n<li><p><strong>对打训练</strong></p>\n<ul>\n<li>单一技术对打</li>\n<li>组合技术对打</li>\n<li>实战模拟对打</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"进阶训练\"><a href=\"#进阶训练\" class=\"headerlink\" title=\"进阶训练\"></a>进阶训练</h3><ol>\n<li><p><strong>战术演练</strong></p>\n<ul>\n<li>发球后三板战术</li>\n<li>接发球后四板战术</li>\n<li>相持阶段战术</li>\n</ul>\n</li>\n<li><p><strong>实战模拟</strong></p>\n<ul>\n<li>11分制比赛</li>\n<li>特定分数段练习</li>\n<li>不同打法对抗</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"常见问题解决\"><a href=\"#常见问题解决\" class=\"headerlink\" title=\"常见问题解决\"></a>常见问题解决</h2><h3 id=\"技术问题\"><a href=\"#技术问题\" class=\"headerlink\" title=\"技术问题\"></a>技术问题</h3><ul>\n<li><p><strong>发球不稳定</strong></p>\n<ul>\n<li>检查抛球高度</li>\n<li>保持动作一致</li>\n<li>控制触球部位</li>\n</ul>\n</li>\n<li><p><strong>击球不到位</strong></p>\n<ul>\n<li>调整站位距离</li>\n<li>检查击球点</li>\n<li>加强步法训练</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"战术问题\"><a href=\"#战术问题\" class=\"headerlink\" title=\"战术问题\"></a>战术问题</h3><ul>\n<li><p><strong>无法形成进攻</strong></p>\n<ul>\n<li>改善发球质量</li>\n<li>提高抢攻意识</li>\n<li>加强战术训练</li>\n</ul>\n</li>\n<li><p><strong>易失误</strong></p>\n<ul>\n<li>降低击球力量</li>\n<li>提高击球稳定性</li>\n<li>选择合适进攻时机</li>\n</ul>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h2 id=\"基本功\"><a href=\"#基本功\" class=\"headerlink\" title=\"基本功\"></a>基本功</h2><h3 id=\"握拍技巧\"><a href=\"#握拍技巧\" class=\"headerlink\" title=\"握拍技巧\"></a>握拍技巧</h3><h4 id=\"正手利选手\"><a href=\"#正手利选手\" class=\"headerlink\" title=\"正手利选手\"></a>正手利选手</h4><ul>\n<li><strong>握拍方式</strong><ul>\n<li>食指和拇指呈”V”形自然握持</li>\n<li>其余三指放松环绕拍柄</li>\n<li>拍面与前臂夹角约100-110度</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"反手利选手\"><a href=\"#反手利选手\" class=\"headerlink\" title=\"反手利选手\"></a>反手利选手</h4><ul>\n<li><strong>握拍方式</strong><ul>\n<li>拇指略微展开平放</li>\n<li>食指位置靠前</li>\n<li>拍面与前臂夹角约80-90度</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"站位要领\"><a href=\"#站位要领\" class=\"headerlink\" title=\"站位要领\"></a>站位要领</h3><h4 id=\"正手利选手-1\"><a href=\"#正手利选手-1\" class=\"headerlink\" title=\"正手利选手\"></a>正手利选手</h4><ul>\n<li><strong>基础站位</strong><ul>\n<li>偏右半台为主</li>\n<li>重心略偏右脚</li>\n<li>便于正手进攻和衔接</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"反手利选手-1\"><a href=\"#反手利选手-1\" class=\"headerlink\" title=\"反手利选手\"></a>反手利选手</h4><ul>\n<li><strong>基础站位</strong><ul>\n<li>偏中间位置</li>\n<li>重心相对居中</li>\n<li>保持对两侧的控制能力</li>\n<li>兼顾反手进攻和防守转换</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"共同要点\"><a href=\"#共同要点\" class=\"headerlink\" title=\"共同要点\"></a>共同要点</h4><ul>\n<li>保持膝盖微屈</li>\n<li>重心前倾约15度</li>\n<li>双脚与肩同宽</li>\n<li>随时准备快速移动</li>\n</ul>\n<h3 id=\"站位优势分析\"><a href=\"#站位优势分析\" class=\"headerlink\" title=\"站位优势分析\"></a>站位优势分析</h3><h4 id=\"正手利选手偏左站位优势\"><a href=\"#正手利选手偏左站位优势\" class=\"headerlink\" title=\"正手利选手偏左站位优势\"></a>正手利选手偏左站位优势</h4><ol>\n<li><p><strong>进攻优势</strong></p>\n<ul>\n<li>更容易形成正手抢攻</li>\n<li>扩大正手击球范围</li>\n<li>减少反手区域面积</li>\n</ul>\n</li>\n<li><p><strong>移动优势</strong></p>\n<ul>\n<li>便于正手位快速启动</li>\n<li>容易完成侧身动作</li>\n<li>有利于前后台调动</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"反手利选手中间站位优势\"><a href=\"#反手利选手中间站位优势\" class=\"headerlink\" title=\"反手利选手中间站位优势\"></a>反手利选手中间站位优势</h4><ol>\n<li><p><strong>技术优势</strong></p>\n<ul>\n<li>平衡两侧控制区域</li>\n<li>反手进攻更加灵活</li>\n<li>便于快速调整位置</li>\n</ul>\n</li>\n<li><p><strong>战术优势</strong></p>\n<ul>\n<li>兼顾台内短球控制</li>\n<li>便于处理对手变线球</li>\n<li>提高整体防守能力</li>\n<li>减少死角</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"正手拉球时序图\"><a href=\"#正手拉球时序图\" class=\"headerlink\" title=\"正手拉球时序图\"></a>正手拉球时序图</h3><pre class=\"mermaid\">sequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n    Note over P: 重心略降,右脚后移\n    P->>R: 重心后移\n    Note over R: 1.大幅撤胯转腰<br>2.手臂自然后引<br>3.拍面后仰\n    R->>S: 启动挥拍\n    Note over S: 1.腿部发力蹬地带动重心前移<br>2.力量传递至腰胯形成旋转<br>3.髋部带动上身形成扭转<br>4.手臂保持放松自然跟随<br>5.形成从下到上的鞭状效应\n    S->>H: 迎击来球\n    Note over H: 1.合力点在球前上<br>2.拍面前倾45度<br>3.手指发力抓拍\n    H->>F: 击球后随动\n    Note over F: 1.手臂自然延伸<br>2.身体前倾跟随<br>3.重心前移\n    F->>B: 还原准备\n    Note over B: 1.垫步调整<br>2.重心回中<br>3.恢复预备姿势</pre>\n\n<h3 id=\"正手启动挥拍阶段详解\"><a href=\"#正手启动挥拍阶段详解\" class=\"headerlink\" title=\"正手启动挥拍阶段详解\"></a>正手启动挥拍阶段详解</h3><h4 id=\"1-下肢发力\"><a href=\"#1-下肢发力\" class=\"headerlink\" title=\"1. 下肢发力\"></a>1. 下肢发力</h4><ul>\n<li><p><strong>右腿蹬地</strong></p>\n<ul>\n<li>脚掌全面着地</li>\n<li>由后向前蹬地发力</li>\n<li>带动重心前移</li>\n</ul>\n</li>\n<li><p><strong>重心转换</strong></p>\n<ul>\n<li>由后向前平稳过渡</li>\n<li>保持身体稳定性</li>\n<li>不要过早前倾</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-核心带动\"><a href=\"#2-核心带动\" class=\"headerlink\" title=\"2. 核心带动\"></a>2. 核心带动</h4><ul>\n<li><p><strong>髋部启动</strong></p>\n<ul>\n<li>先于上半身发力</li>\n<li>大幅度旋转带动</li>\n<li>保持身体协调</li>\n</ul>\n</li>\n<li><p><strong>腰部跟随</strong></p>\n<ul>\n<li>自然跟随髋部旋转</li>\n<li>形成良好扭转</li>\n<li>维持核心稳定</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-上肢配合\"><a href=\"#3-上肢配合\" class=\"headerlink\" title=\"3. 上肢配合\"></a>3. 上肢配合</h4><ul>\n<li><p><strong>手臂放松</strong></p>\n<ul>\n<li>保持自然后引</li>\n<li>不要主动发力</li>\n<li>跟随身体转动</li>\n</ul>\n</li>\n<li><p><strong>拍面控制</strong></p>\n<ul>\n<li>保持后仰角度</li>\n<li>等待击球时机</li>\n<li>为抓拍做准备</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"反手拉球时序图\"><a href=\"#反手拉球时序图\" class=\"headerlink\" title=\"反手拉球时序图\"></a>反手拉球时序图</h3><pre class=\"mermaid\">sequenceDiagram\n    autonumber\n    participant P as 准备阶段\n    participant R as 引拍阶段\n    participant S as 挥拍阶段\n    participant H as 击球阶段\n    participant F as 随动阶段\n    participant B as 还原阶段\n\n    P->>R: 重心后移\n    Note over P: 重心略降,左脚后移,架肘抬臂\n\n    R->>S: 启动挥拍\n    Note over R: 1.小幅撤胯转腰<br/>2.手臂架肘后引<br/>3.拍面后仰<br/>4.保持肘部架起\n\n    S->>H: 迎击来球\n    Note over S: 1.左腿蹬地发力<br/>2.髋部带动转腰<br/>3.肘部保持架起<br/>4.手腕稳定<br/>5.拍面后仰<br/>6.手指预备\n\n    H->>F: 击球后随动\n    Note over H: 1.球前上击球<br/>2.拍面45度<br/>3.手指抓拍\n\n    F->>B: 还原准备\n    Note over F: 1.手臂延伸<br/>2.身体前倾<br/>3.重心前移\n\n    Note over B: 1.垫步调整<br/>2.重心回中<br/>3.恢复预备</pre>\n\n<h3 id=\"反手启动挥拍阶段详解\"><a href=\"#反手启动挥拍阶段详解\" class=\"headerlink\" title=\"反手启动挥拍阶段详解\"></a>反手启动挥拍阶段详解</h3><h4 id=\"1-下肢发力-1\"><a href=\"#1-下肢发力-1\" class=\"headerlink\" title=\"1. 下肢发力\"></a>1. 下肢发力</h4><ul>\n<li><p><strong>左腿蹬地</strong></p>\n<ul>\n<li>脚掌全面着地</li>\n<li>由后向前蹬地发力</li>\n<li>带动重心前移</li>\n</ul>\n</li>\n<li><p><strong>重心转换</strong></p>\n<ul>\n<li>由后向前平稳过渡</li>\n<li>保持身体稳定性</li>\n<li>不要过早前倾</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-核心带动-1\"><a href=\"#2-核心带动-1\" class=\"headerlink\" title=\"2. 核心带动\"></a>2. 核心带动</h4><ul>\n<li><p><strong>髋部启动</strong></p>\n<ul>\n<li>先于上半身发力</li>\n<li>小幅度旋转带动</li>\n<li>保持身体协调</li>\n</ul>\n</li>\n<li><p><strong>腰部跟随</strong></p>\n<ul>\n<li>自然跟随髋部旋转</li>\n<li>不要过度扭转</li>\n<li>维持核心稳定</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-上肢控制\"><a href=\"#3-上肢控制\" class=\"headerlink\" title=\"3. 上肢控制\"></a>3. 上肢控制</h4><ul>\n<li><p><strong>肘部</strong></p>\n<ul>\n<li>保持架起姿势</li>\n<li>引导击球方向</li>\n<li>避免下垂</li>\n</ul>\n</li>\n<li><p><strong>手腕</strong></p>\n<ul>\n<li>保持稳定</li>\n<li>不提前发力</li>\n<li>等待击球时刻</li>\n</ul>\n</li>\n<li><p><strong>拍面</strong></p>\n<ul>\n<li>保持后仰角度</li>\n<li>准备击球角度</li>\n<li>避免提前调整</li>\n</ul>\n</li>\n<li><p><strong>手指</strong></p>\n<ul>\n<li>保持放松</li>\n<li>准备抓拍发力</li>\n<li>不要提前用力</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-注意事项\"><a href=\"#4-注意事项\" class=\"headerlink\" title=\"4. 注意事项\"></a>4. 注意事项</h4><ul>\n<li>动作要协调连贯</li>\n<li>各部位发力要有先后次序</li>\n<li>保持身体稳定性</li>\n<li>为击球做好准备</li>\n</ul>\n<h3 id=\"常见问题及解决方案\"><a href=\"#常见问题及解决方案\" class=\"headerlink\" title=\"常见问题及解决方案\"></a>常见问题及解决方案</h3><ol>\n<li><p><strong>力量不足</strong></p>\n<ul>\n<li>检查髋部发力</li>\n<li>优化合力点位置</li>\n<li>加强核心力量训练</li>\n</ul>\n</li>\n<li><p><strong>击球不稳</strong></p>\n<ul>\n<li>控制挥拍幅度</li>\n<li>稳定击球点</li>\n<li>加强基本功训练</li>\n</ul>\n</li>\n<li><p><strong>动作不协调</strong></p>\n<ul>\n<li>分解动作练习</li>\n<li>慢动作体会</li>\n<li>多球训练巩固</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"步法\"><a href=\"#步法\" class=\"headerlink\" title=\"步法\"></a>步法</h3><ul>\n<li>并步</li>\n<li>跨步</li>\n<li>跳步</li>\n</ul>\n<h3 id=\"发球\"><a href=\"#发球\" class=\"headerlink\" title=\"发球\"></a>发球</h3><ul>\n<li>正手发球</li>\n<li>反手发球</li>\n</ul>\n<h3 id=\"接发球\"><a href=\"#接发球\" class=\"headerlink\" title=\"接发球\"></a>接发球</h3><ul>\n<li>正手接发球</li>\n<li>反手接发球</li>\n</ul>\n<h2 id=\"正手体系打法\"><a href=\"#正手体系打法\" class=\"headerlink\" title=\"正手体系打法\"></a>正手体系打法</h2><h3 id=\"发球抢攻体系\"><a href=\"#发球抢攻体系\" class=\"headerlink\" title=\"发球抢攻体系\"></a>发球抢攻体系</h3><ul>\n<li><p><strong>基础发球</strong></p>\n<ul>\n<li>正手位快速下旋发球（靠近球台）</li>\n<li>反手位短下旋发球（抢攻准备）</li>\n<li>长球发球（直接得分或逼迫对手回球质量）</li>\n</ul>\n</li>\n<li><p><strong>抢攻技术</strong></p>\n<ul>\n<li>第三板快速弧圈球（对方回球较高时）</li>\n<li>第三板快带（对方回球较低时）</li>\n<li>第三板爆冲（对方回球较软时）</li>\n</ul>\n</li>\n<li><p><strong>站位要领</strong></p>\n<ul>\n<li>发球后快速移动到球台中间偏右位置</li>\n<li>保持重心前倾，随时准备移动</li>\n<li>注意观察对手站位和准备动作</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相持阶段打法\"><a href=\"#相持阶段打法\" class=\"headerlink\" title=\"相持阶段打法\"></a>相持阶段打法</h3><ul>\n<li><p><strong>正手位控制</strong></p>\n<ul>\n<li>中台弧圈球（基本进攻）</li>\n<li>快速侧身抽球（强势进攻）</li>\n<li>台内快带（抢攻反击）</li>\n</ul>\n</li>\n<li><p><strong>步法配合</strong></p>\n<ul>\n<li>并步移动（左右移动基础）</li>\n<li>跨步抽球（扩大击球范围）</li>\n<li>跳步调整（快速回位）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"反手体系打法\"><a href=\"#反手体系打法\" class=\"headerlink\" title=\"反手体系打法\"></a>反手体系打法</h2><h3 id=\"近台快攻体系\"><a href=\"#近台快攻体系\" class=\"headerlink\" title=\"近台快攻体系\"></a>近台快攻体系</h3><ul>\n<li><p><strong>基本站位</strong></p>\n<ul>\n<li>偏左站位（便于反手控制）</li>\n<li>重心略降低（提高稳定性）</li>\n<li>手肘保持适当距离（便于快速反应）</li>\n</ul>\n</li>\n<li><p><strong>技术要点</strong></p>\n<ul>\n<li>反手快速推挡（基础技术）</li>\n<li>反手快攻（主要得分手段）</li>\n<li>反手搓球（变化技术）</li>\n</ul>\n</li>\n<li><p><strong>战术应用</strong></p>\n<ul>\n<li>反手位发球后快攻</li>\n<li>台内快速相持</li>\n<li>适时结合正手进攻</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"实战技巧\"><a href=\"#实战技巧\" class=\"headerlink\" title=\"实战技巧\"></a>实战技巧</h3><h4 id=\"发球技巧\"><a href=\"#发球技巧\" class=\"headerlink\" title=\"发球技巧\"></a>发球技巧</h4><ul>\n<li><p><strong>短球发球</strong></p>\n<ul>\n<li>球要触网，降低高度</li>\n<li>加强旋转变化</li>\n<li>注意发球动作相似性</li>\n</ul>\n</li>\n<li><p><strong>长球发球</strong></p>\n<ul>\n<li>突然加快速度</li>\n<li>改变落点</li>\n<li>结合战术意图</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"接发球技巧\"><a href=\"#接发球技巧\" class=\"headerlink\" title=\"接发球技巧\"></a>接发球技巧</h4><ul>\n<li><p><strong>短球处理</strong></p>\n<ul>\n<li>轻推短球（保持主动）</li>\n<li>突然搓长（打乱对手节奏）</li>\n<li>快速推攻（抢攻机会）</li>\n</ul>\n</li>\n<li><p><strong>长球处理</strong></p>\n<ul>\n<li>快速弧圈球（抢攻为主）</li>\n<li>侧身抽球（强势进攻）</li>\n<li>稳健推挡（保持相持）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"实战训练方法\"><a href=\"#实战训练方法\" class=\"headerlink\" title=\"实战训练方法\"></a>实战训练方法</h2><h3 id=\"基础训练\"><a href=\"#基础训练\" class=\"headerlink\" title=\"基础训练\"></a>基础训练</h3><ol>\n<li><p><strong>多球训练</strong></p>\n<ul>\n<li>固定落点移动训练</li>\n<li>不固定落点移动训练</li>\n<li>发球抢攻专项训练</li>\n</ul>\n</li>\n<li><p><strong>对打训练</strong></p>\n<ul>\n<li>单一技术对打</li>\n<li>组合技术对打</li>\n<li>实战模拟对打</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"进阶训练\"><a href=\"#进阶训练\" class=\"headerlink\" title=\"进阶训练\"></a>进阶训练</h3><ol>\n<li><p><strong>战术演练</strong></p>\n<ul>\n<li>发球后三板战术</li>\n<li>接发球后四板战术</li>\n<li>相持阶段战术</li>\n</ul>\n</li>\n<li><p><strong>实战模拟</strong></p>\n<ul>\n<li>11分制比赛</li>\n<li>特定分数段练习</li>\n<li>不同打法对抗</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"常见问题解决\"><a href=\"#常见问题解决\" class=\"headerlink\" title=\"常见问题解决\"></a>常见问题解决</h2><h3 id=\"技术问题\"><a href=\"#技术问题\" class=\"headerlink\" title=\"技术问题\"></a>技术问题</h3><ul>\n<li><p><strong>发球不稳定</strong></p>\n<ul>\n<li>检查抛球高度</li>\n<li>保持动作一致</li>\n<li>控制触球部位</li>\n</ul>\n</li>\n<li><p><strong>击球不到位</strong></p>\n<ul>\n<li>调整站位距离</li>\n<li>检查击球点</li>\n<li>加强步法训练</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"战术问题\"><a href=\"#战术问题\" class=\"headerlink\" title=\"战术问题\"></a>战术问题</h3><ul>\n<li><p><strong>无法形成进攻</strong></p>\n<ul>\n<li>改善发球质量</li>\n<li>提高抢攻意识</li>\n<li>加强战术训练</li>\n</ul>\n</li>\n<li><p><strong>易失误</strong></p>\n<ul>\n<li>降低击球力量</li>\n<li>提高击球稳定性</li>\n<li>选择合适进攻时机</li>\n</ul>\n</li>\n</ul>\n"},{"title":"闲聊记录","date":"2025-01-04T16:00:00.000Z","_content":"\n## 要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\n\n### 核心理念解读\n\n#### 1. 个人定位的重要性\n- **找准优势**：每个人都有自己的长处和短板\n- **适合度优先**：不是所有工作都适合自己去做，要找到与自己能力、兴趣最匹配的方向\n- **双向选择**：既要符合个人特点，也要满足团队需求\n\n#### 2. 投入的态度\n- **全力以赴**：找到合适的事情后，要投入足够的精力和热情\n- **持续深耕**：在选定的领域不断精进，形成专业优势\n- **价值创造**：通过专注和深入，为团队创造最大价值\n\n#### 3. 放手的智慧\n- **知己知彼**：承认自己的局限，认可他人的长处\n- **合理分工**：让更适合的人去做更适合的事\n- **团队效能**：通过合理分工，提高整体效率\n\n#### 4. 管理的视角\n- **人岗匹配**：根据每个人的特点分配合适的工作\n- **扬长避短**：发挥每个人的优势，规避短板\n- **整体效益**：通过合理分工实现团队整体效能的最大化\n\n### 如何践行\n\n#### 1. 自我认知\n- **能力盘点**\n  - 列出自己的技术特长和软技能\n  - 找出自己最擅长的领域\n  - 识别需要提升的短板\n\n- **兴趣探索**\n  - 记录工作中最有热情的事情\n  - 注意自己投入时不知不觉加班的任务\n  - 观察哪些工作让自己感到有成就感\n\n#### 2. 团队需求分析\n- **与领导沟通**\n  - 了解团队的战略方向\n  - 询问最需要人手的领域\n  - 讨论可能的发展机会\n\n- **横向交流**\n  - 和同事讨论各自的强项\n  - 了解团队中的技能空缺\n  - 寻找互补合作的机会\n\n#### 3. 循序渐进\n- **小范围尝试**\n  - 先从小项目开始\n  - 在现有工作中逐步调整方向\n  - 收集反馈并及时调整\n\n- **建立反馈机制**\n  - 定期与领导复盘\n  - 请同事给出建议\n  - 评估工作成效\n\n#### 4. 主动作为\n- **提出建议**\n  - 针对团队痛点提出解决方案\n  - 主动承担符合自己特长的任务\n  - 提出创新性的工作方法\n\n- **创造价值**\n  - 将个人专长转化为团队资产\n  - 建立个人品牌和影响力\n  - 帮助他人提升能力\n\n#### 5. 合理放手\n- **识别界限**\n  - 明确什么是自己不擅长的领域\n  - 承认他人的专业优势\n  - 学会说\"不\"，但要提供建设性建议\n\n- **有效交接**\n  - 找到合适的接手人\n  - 做好知识传递\n  - 保持良好的沟通和支持\n\n#### 6. 持续成长\n- **制定计划**\n  - 设定清晰的职业目标\n  - 规划必要的技能提升路径\n  - 保持学习的动力\n\n- **建立护城河**\n  - 在自己的专长领域持续深耕\n  - 形成不可替代的竞争力\n  - 建立个人特色的工作方法\n\n### 关键要点\n1. **保持开放心态**：接受变化，愿意尝试\n2. **注重沟通**：与团队保持良好互动\n3. **结果导向**：关注实际贡献和价值\n4. **长期视角**：职业发展是一个持续的过程\n\n## 兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\n\n### 两种数据来源的差异\n\n1. **整体市场份额数据**\n   - 来自市场调研机构（如IDC、Gartner等）\n   - 反映整个市场的设备分布情况\n   - 包含所有用户群体的使用情况\n   - 数据更新周期较长\n   - 可能包含非目标用户群体\n\n2. **线上埋点数据**\n   - 来自实际产品使用数据\n   - 只反映你的用户群体的设备分布\n   - 数据更新实时\n   - 更贴近实际用户场景\n\n### 为什么会有差异\n\n1. **用户群体差异**\n   - 产品的目标用户可能集中在特定人群\n   - 不同人群的设备选择偏好不同\n   - 地域、年龄、消费能力等因素影响\n\n2. **使用场景差异**\n   - 某些设备可能更适合特定类型的应用\n   - 用户在不同场景下使用不同设备\n\n3. **产品特性影响**\n   - 产品的技术要求可能筛选掉部分设备\n   - 营销渠道可能影响用户设备分布\n\n### 实践建议\n\n1. **数据驱动决策**\n   - 优先考虑自身用户的设备分布\n   - 根据实际使用数据调整兼容性策略\n   - 持续监控数据变化\n\n2. **资源优化分配**\n   - 将测试资源集中在高频使用机型\n   - 优先解决影响用户量大的兼容性问题\n   - 平衡投入产出比\n\n3. **动态调整策略**\n   - 定期分析用户设备变化趋势\n   - 及时调整兼容性测试范围\n   - 预判未来可能的变化\n\n","source":"_posts/21_闲聊记录.md","raw":"---\ntitle: 闲聊记录\ndate: 2025-01-05\ntags: \n  - 闲聊  \n---\n\n## 要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\n\n### 核心理念解读\n\n#### 1. 个人定位的重要性\n- **找准优势**：每个人都有自己的长处和短板\n- **适合度优先**：不是所有工作都适合自己去做，要找到与自己能力、兴趣最匹配的方向\n- **双向选择**：既要符合个人特点，也要满足团队需求\n\n#### 2. 投入的态度\n- **全力以赴**：找到合适的事情后，要投入足够的精力和热情\n- **持续深耕**：在选定的领域不断精进，形成专业优势\n- **价值创造**：通过专注和深入，为团队创造最大价值\n\n#### 3. 放手的智慧\n- **知己知彼**：承认自己的局限，认可他人的长处\n- **合理分工**：让更适合的人去做更适合的事\n- **团队效能**：通过合理分工，提高整体效率\n\n#### 4. 管理的视角\n- **人岗匹配**：根据每个人的特点分配合适的工作\n- **扬长避短**：发挥每个人的优势，规避短板\n- **整体效益**：通过合理分工实现团队整体效能的最大化\n\n### 如何践行\n\n#### 1. 自我认知\n- **能力盘点**\n  - 列出自己的技术特长和软技能\n  - 找出自己最擅长的领域\n  - 识别需要提升的短板\n\n- **兴趣探索**\n  - 记录工作中最有热情的事情\n  - 注意自己投入时不知不觉加班的任务\n  - 观察哪些工作让自己感到有成就感\n\n#### 2. 团队需求分析\n- **与领导沟通**\n  - 了解团队的战略方向\n  - 询问最需要人手的领域\n  - 讨论可能的发展机会\n\n- **横向交流**\n  - 和同事讨论各自的强项\n  - 了解团队中的技能空缺\n  - 寻找互补合作的机会\n\n#### 3. 循序渐进\n- **小范围尝试**\n  - 先从小项目开始\n  - 在现有工作中逐步调整方向\n  - 收集反馈并及时调整\n\n- **建立反馈机制**\n  - 定期与领导复盘\n  - 请同事给出建议\n  - 评估工作成效\n\n#### 4. 主动作为\n- **提出建议**\n  - 针对团队痛点提出解决方案\n  - 主动承担符合自己特长的任务\n  - 提出创新性的工作方法\n\n- **创造价值**\n  - 将个人专长转化为团队资产\n  - 建立个人品牌和影响力\n  - 帮助他人提升能力\n\n#### 5. 合理放手\n- **识别界限**\n  - 明确什么是自己不擅长的领域\n  - 承认他人的专业优势\n  - 学会说\"不\"，但要提供建设性建议\n\n- **有效交接**\n  - 找到合适的接手人\n  - 做好知识传递\n  - 保持良好的沟通和支持\n\n#### 6. 持续成长\n- **制定计划**\n  - 设定清晰的职业目标\n  - 规划必要的技能提升路径\n  - 保持学习的动力\n\n- **建立护城河**\n  - 在自己的专长领域持续深耕\n  - 形成不可替代的竞争力\n  - 建立个人特色的工作方法\n\n### 关键要点\n1. **保持开放心态**：接受变化，愿意尝试\n2. **注重沟通**：与团队保持良好互动\n3. **结果导向**：关注实际贡献和价值\n4. **长期视角**：职业发展是一个持续的过程\n\n## 兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\n\n### 两种数据来源的差异\n\n1. **整体市场份额数据**\n   - 来自市场调研机构（如IDC、Gartner等）\n   - 反映整个市场的设备分布情况\n   - 包含所有用户群体的使用情况\n   - 数据更新周期较长\n   - 可能包含非目标用户群体\n\n2. **线上埋点数据**\n   - 来自实际产品使用数据\n   - 只反映你的用户群体的设备分布\n   - 数据更新实时\n   - 更贴近实际用户场景\n\n### 为什么会有差异\n\n1. **用户群体差异**\n   - 产品的目标用户可能集中在特定人群\n   - 不同人群的设备选择偏好不同\n   - 地域、年龄、消费能力等因素影响\n\n2. **使用场景差异**\n   - 某些设备可能更适合特定类型的应用\n   - 用户在不同场景下使用不同设备\n\n3. **产品特性影响**\n   - 产品的技术要求可能筛选掉部分设备\n   - 营销渠道可能影响用户设备分布\n\n### 实践建议\n\n1. **数据驱动决策**\n   - 优先考虑自身用户的设备分布\n   - 根据实际使用数据调整兼容性策略\n   - 持续监控数据变化\n\n2. **资源优化分配**\n   - 将测试资源集中在高频使用机型\n   - 优先解决影响用户量大的兼容性问题\n   - 平衡投入产出比\n\n3. **动态调整策略**\n   - 定期分析用户设备变化趋势\n   - 及时调整兼容性测试范围\n   - 预判未来可能的变化\n\n","slug":"21_闲聊记录","published":1,"updated":"2025-01-28T10:24:55.194Z","_id":"cm5js1bbo000bi02zhzgr2hlm","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\"><a href=\"#要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\" class=\"headerlink\" title=\"要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\"></a>要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做</h2><h3 id=\"核心理念解读\"><a href=\"#核心理念解读\" class=\"headerlink\" title=\"核心理念解读\"></a>核心理念解读</h3><h4 id=\"1-个人定位的重要性\"><a href=\"#1-个人定位的重要性\" class=\"headerlink\" title=\"1. 个人定位的重要性\"></a>1. 个人定位的重要性</h4><ul>\n<li><strong>找准优势</strong>：每个人都有自己的长处和短板</li>\n<li><strong>适合度优先</strong>：不是所有工作都适合自己去做，要找到与自己能力、兴趣最匹配的方向</li>\n<li><strong>双向选择</strong>：既要符合个人特点，也要满足团队需求</li>\n</ul>\n<h4 id=\"2-投入的态度\"><a href=\"#2-投入的态度\" class=\"headerlink\" title=\"2. 投入的态度\"></a>2. 投入的态度</h4><ul>\n<li><strong>全力以赴</strong>：找到合适的事情后，要投入足够的精力和热情</li>\n<li><strong>持续深耕</strong>：在选定的领域不断精进，形成专业优势</li>\n<li><strong>价值创造</strong>：通过专注和深入，为团队创造最大价值</li>\n</ul>\n<h4 id=\"3-放手的智慧\"><a href=\"#3-放手的智慧\" class=\"headerlink\" title=\"3. 放手的智慧\"></a>3. 放手的智慧</h4><ul>\n<li><strong>知己知彼</strong>：承认自己的局限，认可他人的长处</li>\n<li><strong>合理分工</strong>：让更适合的人去做更适合的事</li>\n<li><strong>团队效能</strong>：通过合理分工，提高整体效率</li>\n</ul>\n<h4 id=\"4-管理的视角\"><a href=\"#4-管理的视角\" class=\"headerlink\" title=\"4. 管理的视角\"></a>4. 管理的视角</h4><ul>\n<li><strong>人岗匹配</strong>：根据每个人的特点分配合适的工作</li>\n<li><strong>扬长避短</strong>：发挥每个人的优势，规避短板</li>\n<li><strong>整体效益</strong>：通过合理分工实现团队整体效能的最大化</li>\n</ul>\n<h3 id=\"如何践行\"><a href=\"#如何践行\" class=\"headerlink\" title=\"如何践行\"></a>如何践行</h3><h4 id=\"1-自我认知\"><a href=\"#1-自我认知\" class=\"headerlink\" title=\"1. 自我认知\"></a>1. 自我认知</h4><ul>\n<li><p><strong>能力盘点</strong></p>\n<ul>\n<li>列出自己的技术特长和软技能</li>\n<li>找出自己最擅长的领域</li>\n<li>识别需要提升的短板</li>\n</ul>\n</li>\n<li><p><strong>兴趣探索</strong></p>\n<ul>\n<li>记录工作中最有热情的事情</li>\n<li>注意自己投入时不知不觉加班的任务</li>\n<li>观察哪些工作让自己感到有成就感</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-团队需求分析\"><a href=\"#2-团队需求分析\" class=\"headerlink\" title=\"2. 团队需求分析\"></a>2. 团队需求分析</h4><ul>\n<li><p><strong>与领导沟通</strong></p>\n<ul>\n<li>了解团队的战略方向</li>\n<li>询问最需要人手的领域</li>\n<li>讨论可能的发展机会</li>\n</ul>\n</li>\n<li><p><strong>横向交流</strong></p>\n<ul>\n<li>和同事讨论各自的强项</li>\n<li>了解团队中的技能空缺</li>\n<li>寻找互补合作的机会</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-循序渐进\"><a href=\"#3-循序渐进\" class=\"headerlink\" title=\"3. 循序渐进\"></a>3. 循序渐进</h4><ul>\n<li><p><strong>小范围尝试</strong></p>\n<ul>\n<li>先从小项目开始</li>\n<li>在现有工作中逐步调整方向</li>\n<li>收集反馈并及时调整</li>\n</ul>\n</li>\n<li><p><strong>建立反馈机制</strong></p>\n<ul>\n<li>定期与领导复盘</li>\n<li>请同事给出建议</li>\n<li>评估工作成效</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-主动作为\"><a href=\"#4-主动作为\" class=\"headerlink\" title=\"4. 主动作为\"></a>4. 主动作为</h4><ul>\n<li><p><strong>提出建议</strong></p>\n<ul>\n<li>针对团队痛点提出解决方案</li>\n<li>主动承担符合自己特长的任务</li>\n<li>提出创新性的工作方法</li>\n</ul>\n</li>\n<li><p><strong>创造价值</strong></p>\n<ul>\n<li>将个人专长转化为团队资产</li>\n<li>建立个人品牌和影响力</li>\n<li>帮助他人提升能力</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"5-合理放手\"><a href=\"#5-合理放手\" class=\"headerlink\" title=\"5. 合理放手\"></a>5. 合理放手</h4><ul>\n<li><p><strong>识别界限</strong></p>\n<ul>\n<li>明确什么是自己不擅长的领域</li>\n<li>承认他人的专业优势</li>\n<li>学会说”不”，但要提供建设性建议</li>\n</ul>\n</li>\n<li><p><strong>有效交接</strong></p>\n<ul>\n<li>找到合适的接手人</li>\n<li>做好知识传递</li>\n<li>保持良好的沟通和支持</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"6-持续成长\"><a href=\"#6-持续成长\" class=\"headerlink\" title=\"6. 持续成长\"></a>6. 持续成长</h4><ul>\n<li><p><strong>制定计划</strong></p>\n<ul>\n<li>设定清晰的职业目标</li>\n<li>规划必要的技能提升路径</li>\n<li>保持学习的动力</li>\n</ul>\n</li>\n<li><p><strong>建立护城河</strong></p>\n<ul>\n<li>在自己的专长领域持续深耕</li>\n<li>形成不可替代的竞争力</li>\n<li>建立个人特色的工作方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"关键要点\"><a href=\"#关键要点\" class=\"headerlink\" title=\"关键要点\"></a>关键要点</h3><ol>\n<li><strong>保持开放心态</strong>：接受变化，愿意尝试</li>\n<li><strong>注重沟通</strong>：与团队保持良好互动</li>\n<li><strong>结果导向</strong>：关注实际贡献和价值</li>\n<li><strong>长期视角</strong>：职业发展是一个持续的过程</li>\n</ol>\n<h2 id=\"兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\"><a href=\"#兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\" class=\"headerlink\" title=\"兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\"></a>兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布</h2><h3 id=\"两种数据来源的差异\"><a href=\"#两种数据来源的差异\" class=\"headerlink\" title=\"两种数据来源的差异\"></a>两种数据来源的差异</h3><ol>\n<li><p><strong>整体市场份额数据</strong></p>\n<ul>\n<li>来自市场调研机构（如IDC、Gartner等）</li>\n<li>反映整个市场的设备分布情况</li>\n<li>包含所有用户群体的使用情况</li>\n<li>数据更新周期较长</li>\n<li>可能包含非目标用户群体</li>\n</ul>\n</li>\n<li><p><strong>线上埋点数据</strong></p>\n<ul>\n<li>来自实际产品使用数据</li>\n<li>只反映你的用户群体的设备分布</li>\n<li>数据更新实时</li>\n<li>更贴近实际用户场景</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"为什么会有差异\"><a href=\"#为什么会有差异\" class=\"headerlink\" title=\"为什么会有差异\"></a>为什么会有差异</h3><ol>\n<li><p><strong>用户群体差异</strong></p>\n<ul>\n<li>产品的目标用户可能集中在特定人群</li>\n<li>不同人群的设备选择偏好不同</li>\n<li>地域、年龄、消费能力等因素影响</li>\n</ul>\n</li>\n<li><p><strong>使用场景差异</strong></p>\n<ul>\n<li>某些设备可能更适合特定类型的应用</li>\n<li>用户在不同场景下使用不同设备</li>\n</ul>\n</li>\n<li><p><strong>产品特性影响</strong></p>\n<ul>\n<li>产品的技术要求可能筛选掉部分设备</li>\n<li>营销渠道可能影响用户设备分布</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"实践建议\"><a href=\"#实践建议\" class=\"headerlink\" title=\"实践建议\"></a>实践建议</h3><ol>\n<li><p><strong>数据驱动决策</strong></p>\n<ul>\n<li>优先考虑自身用户的设备分布</li>\n<li>根据实际使用数据调整兼容性策略</li>\n<li>持续监控数据变化</li>\n</ul>\n</li>\n<li><p><strong>资源优化分配</strong></p>\n<ul>\n<li>将测试资源集中在高频使用机型</li>\n<li>优先解决影响用户量大的兼容性问题</li>\n<li>平衡投入产出比</li>\n</ul>\n</li>\n<li><p><strong>动态调整策略</strong></p>\n<ul>\n<li>定期分析用户设备变化趋势</li>\n<li>及时调整兼容性测试范围</li>\n<li>预判未来可能的变化</li>\n</ul>\n</li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h2 id=\"要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\"><a href=\"#要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\" class=\"headerlink\" title=\"要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做\"></a>要找到最适合自己且团队也需要的事情，然后全力投入去做。自己不适合的要放手给其他适合的人做</h2><h3 id=\"核心理念解读\"><a href=\"#核心理念解读\" class=\"headerlink\" title=\"核心理念解读\"></a>核心理念解读</h3><h4 id=\"1-个人定位的重要性\"><a href=\"#1-个人定位的重要性\" class=\"headerlink\" title=\"1. 个人定位的重要性\"></a>1. 个人定位的重要性</h4><ul>\n<li><strong>找准优势</strong>：每个人都有自己的长处和短板</li>\n<li><strong>适合度优先</strong>：不是所有工作都适合自己去做，要找到与自己能力、兴趣最匹配的方向</li>\n<li><strong>双向选择</strong>：既要符合个人特点，也要满足团队需求</li>\n</ul>\n<h4 id=\"2-投入的态度\"><a href=\"#2-投入的态度\" class=\"headerlink\" title=\"2. 投入的态度\"></a>2. 投入的态度</h4><ul>\n<li><strong>全力以赴</strong>：找到合适的事情后，要投入足够的精力和热情</li>\n<li><strong>持续深耕</strong>：在选定的领域不断精进，形成专业优势</li>\n<li><strong>价值创造</strong>：通过专注和深入，为团队创造最大价值</li>\n</ul>\n<h4 id=\"3-放手的智慧\"><a href=\"#3-放手的智慧\" class=\"headerlink\" title=\"3. 放手的智慧\"></a>3. 放手的智慧</h4><ul>\n<li><strong>知己知彼</strong>：承认自己的局限，认可他人的长处</li>\n<li><strong>合理分工</strong>：让更适合的人去做更适合的事</li>\n<li><strong>团队效能</strong>：通过合理分工，提高整体效率</li>\n</ul>\n<h4 id=\"4-管理的视角\"><a href=\"#4-管理的视角\" class=\"headerlink\" title=\"4. 管理的视角\"></a>4. 管理的视角</h4><ul>\n<li><strong>人岗匹配</strong>：根据每个人的特点分配合适的工作</li>\n<li><strong>扬长避短</strong>：发挥每个人的优势，规避短板</li>\n<li><strong>整体效益</strong>：通过合理分工实现团队整体效能的最大化</li>\n</ul>\n<h3 id=\"如何践行\"><a href=\"#如何践行\" class=\"headerlink\" title=\"如何践行\"></a>如何践行</h3><h4 id=\"1-自我认知\"><a href=\"#1-自我认知\" class=\"headerlink\" title=\"1. 自我认知\"></a>1. 自我认知</h4><ul>\n<li><p><strong>能力盘点</strong></p>\n<ul>\n<li>列出自己的技术特长和软技能</li>\n<li>找出自己最擅长的领域</li>\n<li>识别需要提升的短板</li>\n</ul>\n</li>\n<li><p><strong>兴趣探索</strong></p>\n<ul>\n<li>记录工作中最有热情的事情</li>\n<li>注意自己投入时不知不觉加班的任务</li>\n<li>观察哪些工作让自己感到有成就感</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-团队需求分析\"><a href=\"#2-团队需求分析\" class=\"headerlink\" title=\"2. 团队需求分析\"></a>2. 团队需求分析</h4><ul>\n<li><p><strong>与领导沟通</strong></p>\n<ul>\n<li>了解团队的战略方向</li>\n<li>询问最需要人手的领域</li>\n<li>讨论可能的发展机会</li>\n</ul>\n</li>\n<li><p><strong>横向交流</strong></p>\n<ul>\n<li>和同事讨论各自的强项</li>\n<li>了解团队中的技能空缺</li>\n<li>寻找互补合作的机会</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-循序渐进\"><a href=\"#3-循序渐进\" class=\"headerlink\" title=\"3. 循序渐进\"></a>3. 循序渐进</h4><ul>\n<li><p><strong>小范围尝试</strong></p>\n<ul>\n<li>先从小项目开始</li>\n<li>在现有工作中逐步调整方向</li>\n<li>收集反馈并及时调整</li>\n</ul>\n</li>\n<li><p><strong>建立反馈机制</strong></p>\n<ul>\n<li>定期与领导复盘</li>\n<li>请同事给出建议</li>\n<li>评估工作成效</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-主动作为\"><a href=\"#4-主动作为\" class=\"headerlink\" title=\"4. 主动作为\"></a>4. 主动作为</h4><ul>\n<li><p><strong>提出建议</strong></p>\n<ul>\n<li>针对团队痛点提出解决方案</li>\n<li>主动承担符合自己特长的任务</li>\n<li>提出创新性的工作方法</li>\n</ul>\n</li>\n<li><p><strong>创造价值</strong></p>\n<ul>\n<li>将个人专长转化为团队资产</li>\n<li>建立个人品牌和影响力</li>\n<li>帮助他人提升能力</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"5-合理放手\"><a href=\"#5-合理放手\" class=\"headerlink\" title=\"5. 合理放手\"></a>5. 合理放手</h4><ul>\n<li><p><strong>识别界限</strong></p>\n<ul>\n<li>明确什么是自己不擅长的领域</li>\n<li>承认他人的专业优势</li>\n<li>学会说”不”，但要提供建设性建议</li>\n</ul>\n</li>\n<li><p><strong>有效交接</strong></p>\n<ul>\n<li>找到合适的接手人</li>\n<li>做好知识传递</li>\n<li>保持良好的沟通和支持</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"6-持续成长\"><a href=\"#6-持续成长\" class=\"headerlink\" title=\"6. 持续成长\"></a>6. 持续成长</h4><ul>\n<li><p><strong>制定计划</strong></p>\n<ul>\n<li>设定清晰的职业目标</li>\n<li>规划必要的技能提升路径</li>\n<li>保持学习的动力</li>\n</ul>\n</li>\n<li><p><strong>建立护城河</strong></p>\n<ul>\n<li>在自己的专长领域持续深耕</li>\n<li>形成不可替代的竞争力</li>\n<li>建立个人特色的工作方法</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"关键要点\"><a href=\"#关键要点\" class=\"headerlink\" title=\"关键要点\"></a>关键要点</h3><ol>\n<li><strong>保持开放心态</strong>：接受变化，愿意尝试</li>\n<li><strong>注重沟通</strong>：与团队保持良好互动</li>\n<li><strong>结果导向</strong>：关注实际贡献和价值</li>\n<li><strong>长期视角</strong>：职业发展是一个持续的过程</li>\n</ol>\n<h2 id=\"兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\"><a href=\"#兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\" class=\"headerlink\" title=\"兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布\"></a>兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布</h2><h3 id=\"两种数据来源的差异\"><a href=\"#两种数据来源的差异\" class=\"headerlink\" title=\"两种数据来源的差异\"></a>两种数据来源的差异</h3><ol>\n<li><p><strong>整体市场份额数据</strong></p>\n<ul>\n<li>来自市场调研机构（如IDC、Gartner等）</li>\n<li>反映整个市场的设备分布情况</li>\n<li>包含所有用户群体的使用情况</li>\n<li>数据更新周期较长</li>\n<li>可能包含非目标用户群体</li>\n</ul>\n</li>\n<li><p><strong>线上埋点数据</strong></p>\n<ul>\n<li>来自实际产品使用数据</li>\n<li>只反映你的用户群体的设备分布</li>\n<li>数据更新实时</li>\n<li>更贴近实际用户场景</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"为什么会有差异\"><a href=\"#为什么会有差异\" class=\"headerlink\" title=\"为什么会有差异\"></a>为什么会有差异</h3><ol>\n<li><p><strong>用户群体差异</strong></p>\n<ul>\n<li>产品的目标用户可能集中在特定人群</li>\n<li>不同人群的设备选择偏好不同</li>\n<li>地域、年龄、消费能力等因素影响</li>\n</ul>\n</li>\n<li><p><strong>使用场景差异</strong></p>\n<ul>\n<li>某些设备可能更适合特定类型的应用</li>\n<li>用户在不同场景下使用不同设备</li>\n</ul>\n</li>\n<li><p><strong>产品特性影响</strong></p>\n<ul>\n<li>产品的技术要求可能筛选掉部分设备</li>\n<li>营销渠道可能影响用户设备分布</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"实践建议\"><a href=\"#实践建议\" class=\"headerlink\" title=\"实践建议\"></a>实践建议</h3><ol>\n<li><p><strong>数据驱动决策</strong></p>\n<ul>\n<li>优先考虑自身用户的设备分布</li>\n<li>根据实际使用数据调整兼容性策略</li>\n<li>持续监控数据变化</li>\n</ul>\n</li>\n<li><p><strong>资源优化分配</strong></p>\n<ul>\n<li>将测试资源集中在高频使用机型</li>\n<li>优先解决影响用户量大的兼容性问题</li>\n<li>平衡投入产出比</li>\n</ul>\n</li>\n<li><p><strong>动态调整策略</strong></p>\n<ul>\n<li>定期分析用户设备变化趋势</li>\n<li>及时调整兼容性测试范围</li>\n<li>预判未来可能的变化</li>\n</ul>\n</li>\n</ol>\n"},{"title":"测试用例准备完整指南","date":"2025-01-08T16:00:00.000Z","_content":"\n## 测试用例准备时序图\n\n```mermaid\nsequenceDiagram\nparticipant P as 准备阶段\nparticipant R as 需求分析阶段\nparticipant S as 用例设计阶段\nparticipant T as 执行与总结阶段\nparticipant C as 持续优化阶段\n\nP->>R: 需求分析\nR->>S: 用例设计\nS->>T: 执行与总结\nT->>C: 持续优化 \n```\n\n## 一、需求分析阶段\n\n### 1. 需求描述解读\n- **需求背景分析**\n  - 业务目标理解\n  - 解决什么问题\n  - 预期收益评估\n\n- **模块定位**\n  - 在整体链路中的位置\n  - 上下游依赖关系\n  - 输入输出预期\n\n- **边界识别**\n  - 测试范围界定\n  - 不可测范围说明\n  - 风险点评估\n\n#### 需求分析矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 业务目标 | - 解决的核心问题<br>- 预期收益<br>- 成功标准 | - 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理 | - 目标分析文档<br>- 收益评估表 |\n| 功能范围 | - 核心功能点<br>- 可选功能<br>- 排除功能 | - 功能完整性<br>- 优先级划分<br>- 边界条件 | - 功能清单<br>- 优先级矩阵 |\n| 技术实现 | - 技术方案<br>- 架构设计<br>- 接口规范 | - 方案可行性<br>- 架构合理性<br>- 接口规范性 | - 技术评审意见<br>- 风险清单 |\n| 数据需求 | - 数据来源<br>- 数据格式<br>- 数据量级 | - 数据准确性<br>- 数据完整性<br>- 性能要求 | - 数据流程图<br>- 数据字典 |\n| 质量要求 | - 性能指标<br>- 稳定性要求<br>- 安全要求 | - 指标合理性<br>- 监控方案<br>- 应急预案 | - 质量标准表<br>- 监控方案 |\n\n\n### 2. 技术文档评审\n\n#### 2.1 预期一致性确认\n- 与需求文档的匹配度\n- 技术实现的可行性\n- 潜在风险点识别\n\n#### 2.2 数据流转分析\n- **数据链路梳理**\n  - 数据源头确认\n  - 中间存储介质\n  - 最终落地位置\n  - 数据同步机制\n\n- **关键节点识别**\n  - 定时任务特性\n  - 数据一致性要求\n  - 性能瓶颈点\n\n- **监控方案设计**\n  - 数据监控指标\n  - 异常告警机制\n  - 问题追溯方法\n\n#### 2.3 业务逻辑分析\n- **时序图梳理**\n  - 核心流程\n  - 改动点影响\n  - 异常处理机制\n\n#### 2.4 技术文档评审矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 业务目标 | - 解决的核心问题<br>- 预期收益<br>- 成功标准 | - 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理 | - 目标分析文档<br>- 收益评估表 |\n| 功能范围 | - 核心功能点<br>- 可选功能<br>- 排除功能 | - 功能完整性<br>- 优先级划分<br>- 边界条件 | - 功能清单<br>- 优先级矩阵 |\n| 技术实现 | - 技术方案<br>- 架构设计<br>- 接口规范 | - 方案可行性<br>- 架构合理性<br>- 接口规范性 | - 技术评审意见<br>- 风险清单 |\n| 数据需求 | - 数据来源<br>- 数据格式<br>- 数据量级 | - 数据准确性<br>- 数据完整性<br>- 性能要求 | - 数据流程图<br>- 数据字典 |\n| 质量要求 | - 性能指标<br>- 稳定性要求<br>- 安全要求 | - 指标合理性<br>- 监控方案<br>- 应急预案 | - 质量标准表<br>- 监控方案 | \n\n## 二、测试用例设计\n\n### 1. 测试策略制定\n- **测试类型划分**\n  - 功能测试\n  - 性能测试\n  - 接口测试\n  - 数据测试\n\n- **测试优先级**\n  - P0核心功能\n  - P1重要功能\n  - P2一般功能\n  - P3低优先级功能\n\n### 2. 用例设计原则\n- **可测性评估**\n  - 数据构造难度\n  - 环境依赖程度\n  - 测试成本评估\n\n- **覆盖度要求**\n  - 功能覆盖\n  - 场景覆盖\n  - 数据覆盖\n  - 异常覆盖\n\n### 3. 测试数据准备\n- **数据构造方案**\n  - 构造方法说明\n  - 数据固化方案\n  - 数据清理机制\n\n- **数据管理**\n  - 版本控制\n  - 环境隔离\n  - 数据保护\n\n### 测试用例设计矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 测试类型 | - 功能测试<br>- 性能测试<br>- 接口测试<br>- 数据测试 | - 测试类型是否全面<br>- 测试优先级是否合理<br>- 测试数据是否充分 | - 测试用例设计文档<br>- 测试数据字典 |\n| 测试优先级 | - P0核心功能<br>- P1重要功能<br>- P2一般功能<br>- P3低优先级功能 | - 测试优先级是否合理<br>- 测试数据是否充分<br>- 测试成本是否可接受 | - 测试用例设计文档<br>- 测试数据字典 |\n| 测试数据 | - 数据构造方案<br>- 数据管理机制<br>- 数据清理机制 | - 数据构造是否可行<br>- 数据管理是否有效<br>- 数据清理是否及时 | - 测试用例设计文档<br>- 测试数据字典 |\n| 测试覆盖 | - 功能覆盖<br>- 场景覆盖<br>- 数据覆盖<br>- 异常覆盖 | - 测试覆盖是否全面<br>- 测试场景是否多样<br>- 测试数据是否充分<br>- 测试异常是否充分 | - 测试用例设计文档<br>- 测试数据字典 |\n\n## 三、执行与总结\n\n### 1. 测试执行过程\n- **问题跟踪**\n  - 问题分类统计\n  - 解决方案追踪\n  - 回归验证确认\n\n- **文档更新**\n  - 测试方案调整\n  - 用例优化记录\n  - 经验总结沉淀\n\n### 2. 测试报告输出\n- **测试范围说明**\n  - 计划vs实际对比\n  - 未覆盖项说明\n  - 风险评估结果\n\n- **质量评估**\n  - 问题统计分析\n  - 质量结论\n  - 遗留风险说明\n\n### 3. 上线准备清单\n- **依赖关系确认**\n  - 数据依赖\n  - 服务依赖\n  - 开关配置\n\n- **回滚方案**\n  - 数据回滚\n  - 服务回滚\n  - 配置回滚\n\n### 3. 测试报告输出矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 测试范围 | - 计划vs实际对比<br>- 未覆盖项说明<br>- 风险评估结果 | - 测试范围是否全面<br>- 未覆盖项是否合理<br>- 风险评估是否充分 | - 测试报告<br>- 测试总结 |\n| 质量评估 | - 问题统计分析<br>- 质量结论<br>- 遗留风险说明 | - 问题是否全面<br>- 质量结论是否合理<br>- 遗留风险是否可接受 | - 测试报告<br>- 测试总结 | \n\n## 四、持续优化建议\n\n1. **流程优化**\n   - 自动化覆盖\n   - 工具改进\n   - 效率提升\n\n2. **经验沉淀**\n   - 问题复盘\n   - 最佳实践\n   - 知识共享\n\n3. **能力提升**\n   - 技术栈扩展\n   - 业务理解深化\n   - 测试方法创新\n\n### 持续优化矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 流程优化 | - 自动化覆盖<br>- 工具改进<br>- 效率提升 | - 自动化覆盖是否全面<br>- 工具改进是否有效<br>- 效率提升是否显著 | - 持续优化建议 |\n| 经验沉淀 | - 问题复盘<br>- 最佳实践<br>- 知识共享 | - 问题复盘是否深入<br>- 最佳实践是否可行<br>- 知识共享是否充分 | - 持续优化建议 |\n| 能力提升 | - 技术栈扩展<br>- 业务理解深化<br>- 测试方法创新 | - 技术栈扩展是否全面<br>- 业务理解是否深化<br>- 测试方法是否创新 | - 持续优化建议 | ","source":"_posts/22_测试用例准备指南.md","raw":"---\ntitle: 测试用例准备完整指南\ndate: 2025-01-09\ntags: \n  - 技术文档\n  - 测试用例\n---\n\n## 测试用例准备时序图\n\n```mermaid\nsequenceDiagram\nparticipant P as 准备阶段\nparticipant R as 需求分析阶段\nparticipant S as 用例设计阶段\nparticipant T as 执行与总结阶段\nparticipant C as 持续优化阶段\n\nP->>R: 需求分析\nR->>S: 用例设计\nS->>T: 执行与总结\nT->>C: 持续优化 \n```\n\n## 一、需求分析阶段\n\n### 1. 需求描述解读\n- **需求背景分析**\n  - 业务目标理解\n  - 解决什么问题\n  - 预期收益评估\n\n- **模块定位**\n  - 在整体链路中的位置\n  - 上下游依赖关系\n  - 输入输出预期\n\n- **边界识别**\n  - 测试范围界定\n  - 不可测范围说明\n  - 风险点评估\n\n#### 需求分析矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 业务目标 | - 解决的核心问题<br>- 预期收益<br>- 成功标准 | - 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理 | - 目标分析文档<br>- 收益评估表 |\n| 功能范围 | - 核心功能点<br>- 可选功能<br>- 排除功能 | - 功能完整性<br>- 优先级划分<br>- 边界条件 | - 功能清单<br>- 优先级矩阵 |\n| 技术实现 | - 技术方案<br>- 架构设计<br>- 接口规范 | - 方案可行性<br>- 架构合理性<br>- 接口规范性 | - 技术评审意见<br>- 风险清单 |\n| 数据需求 | - 数据来源<br>- 数据格式<br>- 数据量级 | - 数据准确性<br>- 数据完整性<br>- 性能要求 | - 数据流程图<br>- 数据字典 |\n| 质量要求 | - 性能指标<br>- 稳定性要求<br>- 安全要求 | - 指标合理性<br>- 监控方案<br>- 应急预案 | - 质量标准表<br>- 监控方案 |\n\n\n### 2. 技术文档评审\n\n#### 2.1 预期一致性确认\n- 与需求文档的匹配度\n- 技术实现的可行性\n- 潜在风险点识别\n\n#### 2.2 数据流转分析\n- **数据链路梳理**\n  - 数据源头确认\n  - 中间存储介质\n  - 最终落地位置\n  - 数据同步机制\n\n- **关键节点识别**\n  - 定时任务特性\n  - 数据一致性要求\n  - 性能瓶颈点\n\n- **监控方案设计**\n  - 数据监控指标\n  - 异常告警机制\n  - 问题追溯方法\n\n#### 2.3 业务逻辑分析\n- **时序图梳理**\n  - 核心流程\n  - 改动点影响\n  - 异常处理机制\n\n#### 2.4 技术文档评审矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 业务目标 | - 解决的核心问题<br>- 预期收益<br>- 成功标准 | - 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理 | - 目标分析文档<br>- 收益评估表 |\n| 功能范围 | - 核心功能点<br>- 可选功能<br>- 排除功能 | - 功能完整性<br>- 优先级划分<br>- 边界条件 | - 功能清单<br>- 优先级矩阵 |\n| 技术实现 | - 技术方案<br>- 架构设计<br>- 接口规范 | - 方案可行性<br>- 架构合理性<br>- 接口规范性 | - 技术评审意见<br>- 风险清单 |\n| 数据需求 | - 数据来源<br>- 数据格式<br>- 数据量级 | - 数据准确性<br>- 数据完整性<br>- 性能要求 | - 数据流程图<br>- 数据字典 |\n| 质量要求 | - 性能指标<br>- 稳定性要求<br>- 安全要求 | - 指标合理性<br>- 监控方案<br>- 应急预案 | - 质量标准表<br>- 监控方案 | \n\n## 二、测试用例设计\n\n### 1. 测试策略制定\n- **测试类型划分**\n  - 功能测试\n  - 性能测试\n  - 接口测试\n  - 数据测试\n\n- **测试优先级**\n  - P0核心功能\n  - P1重要功能\n  - P2一般功能\n  - P3低优先级功能\n\n### 2. 用例设计原则\n- **可测性评估**\n  - 数据构造难度\n  - 环境依赖程度\n  - 测试成本评估\n\n- **覆盖度要求**\n  - 功能覆盖\n  - 场景覆盖\n  - 数据覆盖\n  - 异常覆盖\n\n### 3. 测试数据准备\n- **数据构造方案**\n  - 构造方法说明\n  - 数据固化方案\n  - 数据清理机制\n\n- **数据管理**\n  - 版本控制\n  - 环境隔离\n  - 数据保护\n\n### 测试用例设计矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 测试类型 | - 功能测试<br>- 性能测试<br>- 接口测试<br>- 数据测试 | - 测试类型是否全面<br>- 测试优先级是否合理<br>- 测试数据是否充分 | - 测试用例设计文档<br>- 测试数据字典 |\n| 测试优先级 | - P0核心功能<br>- P1重要功能<br>- P2一般功能<br>- P3低优先级功能 | - 测试优先级是否合理<br>- 测试数据是否充分<br>- 测试成本是否可接受 | - 测试用例设计文档<br>- 测试数据字典 |\n| 测试数据 | - 数据构造方案<br>- 数据管理机制<br>- 数据清理机制 | - 数据构造是否可行<br>- 数据管理是否有效<br>- 数据清理是否及时 | - 测试用例设计文档<br>- 测试数据字典 |\n| 测试覆盖 | - 功能覆盖<br>- 场景覆盖<br>- 数据覆盖<br>- 异常覆盖 | - 测试覆盖是否全面<br>- 测试场景是否多样<br>- 测试数据是否充分<br>- 测试异常是否充分 | - 测试用例设计文档<br>- 测试数据字典 |\n\n## 三、执行与总结\n\n### 1. 测试执行过程\n- **问题跟踪**\n  - 问题分类统计\n  - 解决方案追踪\n  - 回归验证确认\n\n- **文档更新**\n  - 测试方案调整\n  - 用例优化记录\n  - 经验总结沉淀\n\n### 2. 测试报告输出\n- **测试范围说明**\n  - 计划vs实际对比\n  - 未覆盖项说明\n  - 风险评估结果\n\n- **质量评估**\n  - 问题统计分析\n  - 质量结论\n  - 遗留风险说明\n\n### 3. 上线准备清单\n- **依赖关系确认**\n  - 数据依赖\n  - 服务依赖\n  - 开关配置\n\n- **回滚方案**\n  - 数据回滚\n  - 服务回滚\n  - 配置回滚\n\n### 3. 测试报告输出矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 测试范围 | - 计划vs实际对比<br>- 未覆盖项说明<br>- 风险评估结果 | - 测试范围是否全面<br>- 未覆盖项是否合理<br>- 风险评估是否充分 | - 测试报告<br>- 测试总结 |\n| 质量评估 | - 问题统计分析<br>- 质量结论<br>- 遗留风险说明 | - 问题是否全面<br>- 质量结论是否合理<br>- 遗留风险是否可接受 | - 测试报告<br>- 测试总结 | \n\n## 四、持续优化建议\n\n1. **流程优化**\n   - 自动化覆盖\n   - 工具改进\n   - 效率提升\n\n2. **经验沉淀**\n   - 问题复盘\n   - 最佳实践\n   - 知识共享\n\n3. **能力提升**\n   - 技术栈扩展\n   - 业务理解深化\n   - 测试方法创新\n\n### 持续优化矩阵\n| 维度 | 分析要点 | 关注重点 | 输出物 |\n|------|----------|----------|--------|\n| 流程优化 | - 自动化覆盖<br>- 工具改进<br>- 效率提升 | - 自动化覆盖是否全面<br>- 工具改进是否有效<br>- 效率提升是否显著 | - 持续优化建议 |\n| 经验沉淀 | - 问题复盘<br>- 最佳实践<br>- 知识共享 | - 问题复盘是否深入<br>- 最佳实践是否可行<br>- 知识共享是否充分 | - 持续优化建议 |\n| 能力提升 | - 技术栈扩展<br>- 业务理解深化<br>- 测试方法创新 | - 技术栈扩展是否全面<br>- 业务理解是否深化<br>- 测试方法是否创新 | - 持续优化建议 | ","slug":"22_测试用例准备指南","published":1,"updated":"2025-01-28T10:24:29.070Z","_id":"cm5pidh4g0000dc2zdnhef4t5","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"测试用例准备时序图\"><a href=\"#测试用例准备时序图\" class=\"headerlink\" title=\"测试用例准备时序图\"></a>测试用例准备时序图</h2><pre class=\"mermaid\">sequenceDiagram\nparticipant P as 准备阶段\nparticipant R as 需求分析阶段\nparticipant S as 用例设计阶段\nparticipant T as 执行与总结阶段\nparticipant C as 持续优化阶段\n\nP->>R: 需求分析\nR->>S: 用例设计\nS->>T: 执行与总结\nT->>C: 持续优化</pre>\n\n<h2 id=\"一、需求分析阶段\"><a href=\"#一、需求分析阶段\" class=\"headerlink\" title=\"一、需求分析阶段\"></a>一、需求分析阶段</h2><h3 id=\"1-需求描述解读\"><a href=\"#1-需求描述解读\" class=\"headerlink\" title=\"1. 需求描述解读\"></a>1. 需求描述解读</h3><ul>\n<li><p><strong>需求背景分析</strong></p>\n<ul>\n<li>业务目标理解</li>\n<li>解决什么问题</li>\n<li>预期收益评估</li>\n</ul>\n</li>\n<li><p><strong>模块定位</strong></p>\n<ul>\n<li>在整体链路中的位置</li>\n<li>上下游依赖关系</li>\n<li>输入输出预期</li>\n</ul>\n</li>\n<li><p><strong>边界识别</strong></p>\n<ul>\n<li>测试范围界定</li>\n<li>不可测范围说明</li>\n<li>风险点评估</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"需求分析矩阵\"><a href=\"#需求分析矩阵\" class=\"headerlink\" title=\"需求分析矩阵\"></a>需求分析矩阵</h4><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>业务目标</td>\n<td>- 解决的核心问题<br>- 预期收益<br>- 成功标准</td>\n<td>- 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理</td>\n<td>- 目标分析文档<br>- 收益评估表</td>\n</tr>\n<tr>\n<td>功能范围</td>\n<td>- 核心功能点<br>- 可选功能<br>- 排除功能</td>\n<td>- 功能完整性<br>- 优先级划分<br>- 边界条件</td>\n<td>- 功能清单<br>- 优先级矩阵</td>\n</tr>\n<tr>\n<td>技术实现</td>\n<td>- 技术方案<br>- 架构设计<br>- 接口规范</td>\n<td>- 方案可行性<br>- 架构合理性<br>- 接口规范性</td>\n<td>- 技术评审意见<br>- 风险清单</td>\n</tr>\n<tr>\n<td>数据需求</td>\n<td>- 数据来源<br>- 数据格式<br>- 数据量级</td>\n<td>- 数据准确性<br>- 数据完整性<br>- 性能要求</td>\n<td>- 数据流程图<br>- 数据字典</td>\n</tr>\n<tr>\n<td>质量要求</td>\n<td>- 性能指标<br>- 稳定性要求<br>- 安全要求</td>\n<td>- 指标合理性<br>- 监控方案<br>- 应急预案</td>\n<td>- 质量标准表<br>- 监控方案</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-技术文档评审\"><a href=\"#2-技术文档评审\" class=\"headerlink\" title=\"2. 技术文档评审\"></a>2. 技术文档评审</h3><h4 id=\"2-1-预期一致性确认\"><a href=\"#2-1-预期一致性确认\" class=\"headerlink\" title=\"2.1 预期一致性确认\"></a>2.1 预期一致性确认</h4><ul>\n<li>与需求文档的匹配度</li>\n<li>技术实现的可行性</li>\n<li>潜在风险点识别</li>\n</ul>\n<h4 id=\"2-2-数据流转分析\"><a href=\"#2-2-数据流转分析\" class=\"headerlink\" title=\"2.2 数据流转分析\"></a>2.2 数据流转分析</h4><ul>\n<li><p><strong>数据链路梳理</strong></p>\n<ul>\n<li>数据源头确认</li>\n<li>中间存储介质</li>\n<li>最终落地位置</li>\n<li>数据同步机制</li>\n</ul>\n</li>\n<li><p><strong>关键节点识别</strong></p>\n<ul>\n<li>定时任务特性</li>\n<li>数据一致性要求</li>\n<li>性能瓶颈点</li>\n</ul>\n</li>\n<li><p><strong>监控方案设计</strong></p>\n<ul>\n<li>数据监控指标</li>\n<li>异常告警机制</li>\n<li>问题追溯方法</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-业务逻辑分析\"><a href=\"#2-3-业务逻辑分析\" class=\"headerlink\" title=\"2.3 业务逻辑分析\"></a>2.3 业务逻辑分析</h4><ul>\n<li><strong>时序图梳理</strong><ul>\n<li>核心流程</li>\n<li>改动点影响</li>\n<li>异常处理机制</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-4-技术文档评审矩阵\"><a href=\"#2-4-技术文档评审矩阵\" class=\"headerlink\" title=\"2.4 技术文档评审矩阵\"></a>2.4 技术文档评审矩阵</h4><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>业务目标</td>\n<td>- 解决的核心问题<br>- 预期收益<br>- 成功标准</td>\n<td>- 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理</td>\n<td>- 目标分析文档<br>- 收益评估表</td>\n</tr>\n<tr>\n<td>功能范围</td>\n<td>- 核心功能点<br>- 可选功能<br>- 排除功能</td>\n<td>- 功能完整性<br>- 优先级划分<br>- 边界条件</td>\n<td>- 功能清单<br>- 优先级矩阵</td>\n</tr>\n<tr>\n<td>技术实现</td>\n<td>- 技术方案<br>- 架构设计<br>- 接口规范</td>\n<td>- 方案可行性<br>- 架构合理性<br>- 接口规范性</td>\n<td>- 技术评审意见<br>- 风险清单</td>\n</tr>\n<tr>\n<td>数据需求</td>\n<td>- 数据来源<br>- 数据格式<br>- 数据量级</td>\n<td>- 数据准确性<br>- 数据完整性<br>- 性能要求</td>\n<td>- 数据流程图<br>- 数据字典</td>\n</tr>\n<tr>\n<td>质量要求</td>\n<td>- 性能指标<br>- 稳定性要求<br>- 安全要求</td>\n<td>- 指标合理性<br>- 监控方案<br>- 应急预案</td>\n<td>- 质量标准表<br>- 监控方案</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"二、测试用例设计\"><a href=\"#二、测试用例设计\" class=\"headerlink\" title=\"二、测试用例设计\"></a>二、测试用例设计</h2><h3 id=\"1-测试策略制定\"><a href=\"#1-测试策略制定\" class=\"headerlink\" title=\"1. 测试策略制定\"></a>1. 测试策略制定</h3><ul>\n<li><p><strong>测试类型划分</strong></p>\n<ul>\n<li>功能测试</li>\n<li>性能测试</li>\n<li>接口测试</li>\n<li>数据测试</li>\n</ul>\n</li>\n<li><p><strong>测试优先级</strong></p>\n<ul>\n<li>P0核心功能</li>\n<li>P1重要功能</li>\n<li>P2一般功能</li>\n<li>P3低优先级功能</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-用例设计原则\"><a href=\"#2-用例设计原则\" class=\"headerlink\" title=\"2. 用例设计原则\"></a>2. 用例设计原则</h3><ul>\n<li><p><strong>可测性评估</strong></p>\n<ul>\n<li>数据构造难度</li>\n<li>环境依赖程度</li>\n<li>测试成本评估</li>\n</ul>\n</li>\n<li><p><strong>覆盖度要求</strong></p>\n<ul>\n<li>功能覆盖</li>\n<li>场景覆盖</li>\n<li>数据覆盖</li>\n<li>异常覆盖</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-测试数据准备\"><a href=\"#3-测试数据准备\" class=\"headerlink\" title=\"3. 测试数据准备\"></a>3. 测试数据准备</h3><ul>\n<li><p><strong>数据构造方案</strong></p>\n<ul>\n<li>构造方法说明</li>\n<li>数据固化方案</li>\n<li>数据清理机制</li>\n</ul>\n</li>\n<li><p><strong>数据管理</strong></p>\n<ul>\n<li>版本控制</li>\n<li>环境隔离</li>\n<li>数据保护</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"测试用例设计矩阵\"><a href=\"#测试用例设计矩阵\" class=\"headerlink\" title=\"测试用例设计矩阵\"></a>测试用例设计矩阵</h3><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试类型</td>\n<td>- 功能测试<br>- 性能测试<br>- 接口测试<br>- 数据测试</td>\n<td>- 测试类型是否全面<br>- 测试优先级是否合理<br>- 测试数据是否充分</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n<tr>\n<td>测试优先级</td>\n<td>- P0核心功能<br>- P1重要功能<br>- P2一般功能<br>- P3低优先级功能</td>\n<td>- 测试优先级是否合理<br>- 测试数据是否充分<br>- 测试成本是否可接受</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n<tr>\n<td>测试数据</td>\n<td>- 数据构造方案<br>- 数据管理机制<br>- 数据清理机制</td>\n<td>- 数据构造是否可行<br>- 数据管理是否有效<br>- 数据清理是否及时</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n<tr>\n<td>测试覆盖</td>\n<td>- 功能覆盖<br>- 场景覆盖<br>- 数据覆盖<br>- 异常覆盖</td>\n<td>- 测试覆盖是否全面<br>- 测试场景是否多样<br>- 测试数据是否充分<br>- 测试异常是否充分</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"三、执行与总结\"><a href=\"#三、执行与总结\" class=\"headerlink\" title=\"三、执行与总结\"></a>三、执行与总结</h2><h3 id=\"1-测试执行过程\"><a href=\"#1-测试执行过程\" class=\"headerlink\" title=\"1. 测试执行过程\"></a>1. 测试执行过程</h3><ul>\n<li><p><strong>问题跟踪</strong></p>\n<ul>\n<li>问题分类统计</li>\n<li>解决方案追踪</li>\n<li>回归验证确认</li>\n</ul>\n</li>\n<li><p><strong>文档更新</strong></p>\n<ul>\n<li>测试方案调整</li>\n<li>用例优化记录</li>\n<li>经验总结沉淀</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-测试报告输出\"><a href=\"#2-测试报告输出\" class=\"headerlink\" title=\"2. 测试报告输出\"></a>2. 测试报告输出</h3><ul>\n<li><p><strong>测试范围说明</strong></p>\n<ul>\n<li>计划vs实际对比</li>\n<li>未覆盖项说明</li>\n<li>风险评估结果</li>\n</ul>\n</li>\n<li><p><strong>质量评估</strong></p>\n<ul>\n<li>问题统计分析</li>\n<li>质量结论</li>\n<li>遗留风险说明</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-上线准备清单\"><a href=\"#3-上线准备清单\" class=\"headerlink\" title=\"3. 上线准备清单\"></a>3. 上线准备清单</h3><ul>\n<li><p><strong>依赖关系确认</strong></p>\n<ul>\n<li>数据依赖</li>\n<li>服务依赖</li>\n<li>开关配置</li>\n</ul>\n</li>\n<li><p><strong>回滚方案</strong></p>\n<ul>\n<li>数据回滚</li>\n<li>服务回滚</li>\n<li>配置回滚</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-测试报告输出矩阵\"><a href=\"#3-测试报告输出矩阵\" class=\"headerlink\" title=\"3. 测试报告输出矩阵\"></a>3. 测试报告输出矩阵</h3><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试范围</td>\n<td>- 计划vs实际对比<br>- 未覆盖项说明<br>- 风险评估结果</td>\n<td>- 测试范围是否全面<br>- 未覆盖项是否合理<br>- 风险评估是否充分</td>\n<td>- 测试报告<br>- 测试总结</td>\n</tr>\n<tr>\n<td>质量评估</td>\n<td>- 问题统计分析<br>- 质量结论<br>- 遗留风险说明</td>\n<td>- 问题是否全面<br>- 质量结论是否合理<br>- 遗留风险是否可接受</td>\n<td>- 测试报告<br>- 测试总结</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"四、持续优化建议\"><a href=\"#四、持续优化建议\" class=\"headerlink\" title=\"四、持续优化建议\"></a>四、持续优化建议</h2><ol>\n<li><p><strong>流程优化</strong></p>\n<ul>\n<li>自动化覆盖</li>\n<li>工具改进</li>\n<li>效率提升</li>\n</ul>\n</li>\n<li><p><strong>经验沉淀</strong></p>\n<ul>\n<li>问题复盘</li>\n<li>最佳实践</li>\n<li>知识共享</li>\n</ul>\n</li>\n<li><p><strong>能力提升</strong></p>\n<ul>\n<li>技术栈扩展</li>\n<li>业务理解深化</li>\n<li>测试方法创新</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"持续优化矩阵\"><a href=\"#持续优化矩阵\" class=\"headerlink\" title=\"持续优化矩阵\"></a>持续优化矩阵</h3><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>流程优化</td>\n<td>- 自动化覆盖<br>- 工具改进<br>- 效率提升</td>\n<td>- 自动化覆盖是否全面<br>- 工具改进是否有效<br>- 效率提升是否显著</td>\n<td>- 持续优化建议</td>\n</tr>\n<tr>\n<td>经验沉淀</td>\n<td>- 问题复盘<br>- 最佳实践<br>- 知识共享</td>\n<td>- 问题复盘是否深入<br>- 最佳实践是否可行<br>- 知识共享是否充分</td>\n<td>- 持续优化建议</td>\n</tr>\n<tr>\n<td>能力提升</td>\n<td>- 技术栈扩展<br>- 业务理解深化<br>- 测试方法创新</td>\n<td>- 技术栈扩展是否全面<br>- 业务理解是否深化<br>- 测试方法是否创新</td>\n<td>- 持续优化建议</td>\n</tr>\n</tbody>\n</table>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h2 id=\"测试用例准备时序图\"><a href=\"#测试用例准备时序图\" class=\"headerlink\" title=\"测试用例准备时序图\"></a>测试用例准备时序图</h2><pre class=\"mermaid\">sequenceDiagram\nparticipant P as 准备阶段\nparticipant R as 需求分析阶段\nparticipant S as 用例设计阶段\nparticipant T as 执行与总结阶段\nparticipant C as 持续优化阶段\n\nP->>R: 需求分析\nR->>S: 用例设计\nS->>T: 执行与总结\nT->>C: 持续优化</pre>\n\n<h2 id=\"一、需求分析阶段\"><a href=\"#一、需求分析阶段\" class=\"headerlink\" title=\"一、需求分析阶段\"></a>一、需求分析阶段</h2><h3 id=\"1-需求描述解读\"><a href=\"#1-需求描述解读\" class=\"headerlink\" title=\"1. 需求描述解读\"></a>1. 需求描述解读</h3><ul>\n<li><p><strong>需求背景分析</strong></p>\n<ul>\n<li>业务目标理解</li>\n<li>解决什么问题</li>\n<li>预期收益评估</li>\n</ul>\n</li>\n<li><p><strong>模块定位</strong></p>\n<ul>\n<li>在整体链路中的位置</li>\n<li>上下游依赖关系</li>\n<li>输入输出预期</li>\n</ul>\n</li>\n<li><p><strong>边界识别</strong></p>\n<ul>\n<li>测试范围界定</li>\n<li>不可测范围说明</li>\n<li>风险点评估</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"需求分析矩阵\"><a href=\"#需求分析矩阵\" class=\"headerlink\" title=\"需求分析矩阵\"></a>需求分析矩阵</h4><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>业务目标</td>\n<td>- 解决的核心问题<br>- 预期收益<br>- 成功标准</td>\n<td>- 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理</td>\n<td>- 目标分析文档<br>- 收益评估表</td>\n</tr>\n<tr>\n<td>功能范围</td>\n<td>- 核心功能点<br>- 可选功能<br>- 排除功能</td>\n<td>- 功能完整性<br>- 优先级划分<br>- 边界条件</td>\n<td>- 功能清单<br>- 优先级矩阵</td>\n</tr>\n<tr>\n<td>技术实现</td>\n<td>- 技术方案<br>- 架构设计<br>- 接口规范</td>\n<td>- 方案可行性<br>- 架构合理性<br>- 接口规范性</td>\n<td>- 技术评审意见<br>- 风险清单</td>\n</tr>\n<tr>\n<td>数据需求</td>\n<td>- 数据来源<br>- 数据格式<br>- 数据量级</td>\n<td>- 数据准确性<br>- 数据完整性<br>- 性能要求</td>\n<td>- 数据流程图<br>- 数据字典</td>\n</tr>\n<tr>\n<td>质量要求</td>\n<td>- 性能指标<br>- 稳定性要求<br>- 安全要求</td>\n<td>- 指标合理性<br>- 监控方案<br>- 应急预案</td>\n<td>- 质量标准表<br>- 监控方案</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-技术文档评审\"><a href=\"#2-技术文档评审\" class=\"headerlink\" title=\"2. 技术文档评审\"></a>2. 技术文档评审</h3><h4 id=\"2-1-预期一致性确认\"><a href=\"#2-1-预期一致性确认\" class=\"headerlink\" title=\"2.1 预期一致性确认\"></a>2.1 预期一致性确认</h4><ul>\n<li>与需求文档的匹配度</li>\n<li>技术实现的可行性</li>\n<li>潜在风险点识别</li>\n</ul>\n<h4 id=\"2-2-数据流转分析\"><a href=\"#2-2-数据流转分析\" class=\"headerlink\" title=\"2.2 数据流转分析\"></a>2.2 数据流转分析</h4><ul>\n<li><p><strong>数据链路梳理</strong></p>\n<ul>\n<li>数据源头确认</li>\n<li>中间存储介质</li>\n<li>最终落地位置</li>\n<li>数据同步机制</li>\n</ul>\n</li>\n<li><p><strong>关键节点识别</strong></p>\n<ul>\n<li>定时任务特性</li>\n<li>数据一致性要求</li>\n<li>性能瓶颈点</li>\n</ul>\n</li>\n<li><p><strong>监控方案设计</strong></p>\n<ul>\n<li>数据监控指标</li>\n<li>异常告警机制</li>\n<li>问题追溯方法</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-业务逻辑分析\"><a href=\"#2-3-业务逻辑分析\" class=\"headerlink\" title=\"2.3 业务逻辑分析\"></a>2.3 业务逻辑分析</h4><ul>\n<li><strong>时序图梳理</strong><ul>\n<li>核心流程</li>\n<li>改动点影响</li>\n<li>异常处理机制</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-4-技术文档评审矩阵\"><a href=\"#2-4-技术文档评审矩阵\" class=\"headerlink\" title=\"2.4 技术文档评审矩阵\"></a>2.4 技术文档评审矩阵</h4><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>业务目标</td>\n<td>- 解决的核心问题<br>- 预期收益<br>- 成功标准</td>\n<td>- 目标是否明确<br>- 收益是否可衡量<br>- 标准是否合理</td>\n<td>- 目标分析文档<br>- 收益评估表</td>\n</tr>\n<tr>\n<td>功能范围</td>\n<td>- 核心功能点<br>- 可选功能<br>- 排除功能</td>\n<td>- 功能完整性<br>- 优先级划分<br>- 边界条件</td>\n<td>- 功能清单<br>- 优先级矩阵</td>\n</tr>\n<tr>\n<td>技术实现</td>\n<td>- 技术方案<br>- 架构设计<br>- 接口规范</td>\n<td>- 方案可行性<br>- 架构合理性<br>- 接口规范性</td>\n<td>- 技术评审意见<br>- 风险清单</td>\n</tr>\n<tr>\n<td>数据需求</td>\n<td>- 数据来源<br>- 数据格式<br>- 数据量级</td>\n<td>- 数据准确性<br>- 数据完整性<br>- 性能要求</td>\n<td>- 数据流程图<br>- 数据字典</td>\n</tr>\n<tr>\n<td>质量要求</td>\n<td>- 性能指标<br>- 稳定性要求<br>- 安全要求</td>\n<td>- 指标合理性<br>- 监控方案<br>- 应急预案</td>\n<td>- 质量标准表<br>- 监控方案</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"二、测试用例设计\"><a href=\"#二、测试用例设计\" class=\"headerlink\" title=\"二、测试用例设计\"></a>二、测试用例设计</h2><h3 id=\"1-测试策略制定\"><a href=\"#1-测试策略制定\" class=\"headerlink\" title=\"1. 测试策略制定\"></a>1. 测试策略制定</h3><ul>\n<li><p><strong>测试类型划分</strong></p>\n<ul>\n<li>功能测试</li>\n<li>性能测试</li>\n<li>接口测试</li>\n<li>数据测试</li>\n</ul>\n</li>\n<li><p><strong>测试优先级</strong></p>\n<ul>\n<li>P0核心功能</li>\n<li>P1重要功能</li>\n<li>P2一般功能</li>\n<li>P3低优先级功能</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-用例设计原则\"><a href=\"#2-用例设计原则\" class=\"headerlink\" title=\"2. 用例设计原则\"></a>2. 用例设计原则</h3><ul>\n<li><p><strong>可测性评估</strong></p>\n<ul>\n<li>数据构造难度</li>\n<li>环境依赖程度</li>\n<li>测试成本评估</li>\n</ul>\n</li>\n<li><p><strong>覆盖度要求</strong></p>\n<ul>\n<li>功能覆盖</li>\n<li>场景覆盖</li>\n<li>数据覆盖</li>\n<li>异常覆盖</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-测试数据准备\"><a href=\"#3-测试数据准备\" class=\"headerlink\" title=\"3. 测试数据准备\"></a>3. 测试数据准备</h3><ul>\n<li><p><strong>数据构造方案</strong></p>\n<ul>\n<li>构造方法说明</li>\n<li>数据固化方案</li>\n<li>数据清理机制</li>\n</ul>\n</li>\n<li><p><strong>数据管理</strong></p>\n<ul>\n<li>版本控制</li>\n<li>环境隔离</li>\n<li>数据保护</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"测试用例设计矩阵\"><a href=\"#测试用例设计矩阵\" class=\"headerlink\" title=\"测试用例设计矩阵\"></a>测试用例设计矩阵</h3><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试类型</td>\n<td>- 功能测试<br>- 性能测试<br>- 接口测试<br>- 数据测试</td>\n<td>- 测试类型是否全面<br>- 测试优先级是否合理<br>- 测试数据是否充分</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n<tr>\n<td>测试优先级</td>\n<td>- P0核心功能<br>- P1重要功能<br>- P2一般功能<br>- P3低优先级功能</td>\n<td>- 测试优先级是否合理<br>- 测试数据是否充分<br>- 测试成本是否可接受</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n<tr>\n<td>测试数据</td>\n<td>- 数据构造方案<br>- 数据管理机制<br>- 数据清理机制</td>\n<td>- 数据构造是否可行<br>- 数据管理是否有效<br>- 数据清理是否及时</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n<tr>\n<td>测试覆盖</td>\n<td>- 功能覆盖<br>- 场景覆盖<br>- 数据覆盖<br>- 异常覆盖</td>\n<td>- 测试覆盖是否全面<br>- 测试场景是否多样<br>- 测试数据是否充分<br>- 测试异常是否充分</td>\n<td>- 测试用例设计文档<br>- 测试数据字典</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"三、执行与总结\"><a href=\"#三、执行与总结\" class=\"headerlink\" title=\"三、执行与总结\"></a>三、执行与总结</h2><h3 id=\"1-测试执行过程\"><a href=\"#1-测试执行过程\" class=\"headerlink\" title=\"1. 测试执行过程\"></a>1. 测试执行过程</h3><ul>\n<li><p><strong>问题跟踪</strong></p>\n<ul>\n<li>问题分类统计</li>\n<li>解决方案追踪</li>\n<li>回归验证确认</li>\n</ul>\n</li>\n<li><p><strong>文档更新</strong></p>\n<ul>\n<li>测试方案调整</li>\n<li>用例优化记录</li>\n<li>经验总结沉淀</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-测试报告输出\"><a href=\"#2-测试报告输出\" class=\"headerlink\" title=\"2. 测试报告输出\"></a>2. 测试报告输出</h3><ul>\n<li><p><strong>测试范围说明</strong></p>\n<ul>\n<li>计划vs实际对比</li>\n<li>未覆盖项说明</li>\n<li>风险评估结果</li>\n</ul>\n</li>\n<li><p><strong>质量评估</strong></p>\n<ul>\n<li>问题统计分析</li>\n<li>质量结论</li>\n<li>遗留风险说明</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-上线准备清单\"><a href=\"#3-上线准备清单\" class=\"headerlink\" title=\"3. 上线准备清单\"></a>3. 上线准备清单</h3><ul>\n<li><p><strong>依赖关系确认</strong></p>\n<ul>\n<li>数据依赖</li>\n<li>服务依赖</li>\n<li>开关配置</li>\n</ul>\n</li>\n<li><p><strong>回滚方案</strong></p>\n<ul>\n<li>数据回滚</li>\n<li>服务回滚</li>\n<li>配置回滚</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-测试报告输出矩阵\"><a href=\"#3-测试报告输出矩阵\" class=\"headerlink\" title=\"3. 测试报告输出矩阵\"></a>3. 测试报告输出矩阵</h3><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>测试范围</td>\n<td>- 计划vs实际对比<br>- 未覆盖项说明<br>- 风险评估结果</td>\n<td>- 测试范围是否全面<br>- 未覆盖项是否合理<br>- 风险评估是否充分</td>\n<td>- 测试报告<br>- 测试总结</td>\n</tr>\n<tr>\n<td>质量评估</td>\n<td>- 问题统计分析<br>- 质量结论<br>- 遗留风险说明</td>\n<td>- 问题是否全面<br>- 质量结论是否合理<br>- 遗留风险是否可接受</td>\n<td>- 测试报告<br>- 测试总结</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"四、持续优化建议\"><a href=\"#四、持续优化建议\" class=\"headerlink\" title=\"四、持续优化建议\"></a>四、持续优化建议</h2><ol>\n<li><p><strong>流程优化</strong></p>\n<ul>\n<li>自动化覆盖</li>\n<li>工具改进</li>\n<li>效率提升</li>\n</ul>\n</li>\n<li><p><strong>经验沉淀</strong></p>\n<ul>\n<li>问题复盘</li>\n<li>最佳实践</li>\n<li>知识共享</li>\n</ul>\n</li>\n<li><p><strong>能力提升</strong></p>\n<ul>\n<li>技术栈扩展</li>\n<li>业务理解深化</li>\n<li>测试方法创新</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"持续优化矩阵\"><a href=\"#持续优化矩阵\" class=\"headerlink\" title=\"持续优化矩阵\"></a>持续优化矩阵</h3><table>\n<thead>\n<tr>\n<th>维度</th>\n<th>分析要点</th>\n<th>关注重点</th>\n<th>输出物</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>流程优化</td>\n<td>- 自动化覆盖<br>- 工具改进<br>- 效率提升</td>\n<td>- 自动化覆盖是否全面<br>- 工具改进是否有效<br>- 效率提升是否显著</td>\n<td>- 持续优化建议</td>\n</tr>\n<tr>\n<td>经验沉淀</td>\n<td>- 问题复盘<br>- 最佳实践<br>- 知识共享</td>\n<td>- 问题复盘是否深入<br>- 最佳实践是否可行<br>- 知识共享是否充分</td>\n<td>- 持续优化建议</td>\n</tr>\n<tr>\n<td>能力提升</td>\n<td>- 技术栈扩展<br>- 业务理解深化<br>- 测试方法创新</td>\n<td>- 技术栈扩展是否全面<br>- 业务理解是否深化<br>- 测试方法是否创新</td>\n<td>- 持续优化建议</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"球赛小程序需求文档","date":"2025-01-27T16:00:00.000Z","_content":"\n# 球赛小程序需求与方案文档\n\n## 一、项目概述\n\n开发一个面向乒乓球运动爱好者的赛事组织和积分管理小程序，帮助用户便捷地参与比赛、记录成绩和追踪个人成长。\n\n## 二、核心功能需求\n\n### 1. 用户系统\n- 微信授权登录\n- 个人信息管理\n  - 基础信息(昵称、头像等)\n  - 技术等级/积分\n  - 历史对战信息\n\n### 2. 赛事管理\n- 赛事发布\n  - 比赛类型(单打/双打)\n  - 时间地点\n  - 参赛要求\n  - 费用说明\n  - 人数限制\n- 赛事报名\n  - 在线报名\n  - 报名费支付\n  - 退赛处理\n- 赛程安排\n  - 自动分组/对阵\n  - 赛程时间表\n  - 场地分配\n\n### 3. 比分记录\n- 实时比分录入\n- 比赛结果确认\n- 历史比赛查询\n- 数据统计分析\n\n### 4. 积分系统\n- 积分规则配置\n- 积分实时计算\n- 积分排行榜\n- 等级晋升机制\n\n## 三、技术方案\n\n### 1. 技术选型\n- **前端**\n  - Vue3 + Vant UI（移动端H5框架）\n  - 一套代码，同时支持H5和小程序\n- **后端**\n  - SpringBoot（单体应用）\n  - MySQL（单数据库）\n  - 文件直接存储在服务器\n\n### 2. 开发步骤\n\n#### 2.1 前端快速启动\n```bash\n# 使用 Vue CLI 创建项目\nvue create sports-h5\n\n# 安装 Vant UI\nnpm i vant\n\n# 配置移动端适配\nnpm i postcss-px-to-viewport -D\n```\n\n#### 2.2 页面开发示例\n```vue\n<!-- 赛事列表页面 -->\n<template>\n  <div class=\"tournament-list\">\n    <!-- 顶部导航 -->\n    <van-nav-bar title=\"赛事列表\" />\n    \n    <!-- 赛事列表 -->\n    <van-list\n      v-model:loading=\"loading\"\n      :finished=\"finished\"\n      @load=\"onLoad\"\n    >\n      <van-cell v-for=\"item in list\" :key=\"item.id\">\n        <template #title>\n          <div class=\"title\">{{item.title}}</div>\n          <div class=\"info\">\n            <span>{{item.startTime}}</span>\n            <span>{{item.venue}}</span>\n          </div>\n        </template>\n        <template #right-icon>\n          <van-button size=\"small\" @click=\"onJoin(item)\">\n            报名\n          </van-button>\n        </template>\n      </van-cell>\n    </van-list>\n  </div>\n</template>\n```\n\n#### 2.3 后端精简版\n```java\n// 主要目录结构\nsports-server\n  ├── controller    // 接口控制器\n  ├── service      // 业务逻辑\n  ├── entity      // 数据实体\n  ├── mapper      // 数据访问\n  └── config      // 基础配置\n\n// 示例代码\n@RestController\n@RequestMapping(\"/api/tournament\")\npublic class TournamentController {\n    \n    @GetMapping(\"/list\")\n    public Result list() {\n        return Result.success(tournamentService.list());\n    }\n    \n    @PostMapping(\"/join\")\n    public Result join(@RequestBody JoinRequest req) {\n        tournamentService.join(req);\n        return Result.success();\n    }\n}\n```\n\n### 3. 数据库精简设计\n```sql\n-- 用户表\nCREATE TABLE user (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(50) NOT NULL,\n    phone VARCHAR(20),\n    points INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- 赛事表\nCREATE TABLE tournament (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    title VARCHAR(100) NOT NULL,\n    start_time DATETIME,\n    venue VARCHAR(100),\n    max_players INT,\n    status TINYINT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- 报名表\nCREATE TABLE registration (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    tournament_id BIGINT,\n    user_id BIGINT,\n    status TINYINT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### 4. 开发流程建议\n\n1. **先开发H5版本**\n   - 开发和调试更方便\n   - 可以在浏览器中预览\n   - 更容易分享给他人测试\n\n2. **功能逐步实现**\n   - 先实现基础的赛事列表、报名功能\n   - 再添加用户登录、积分系统\n   - 最后考虑其他扩展功能\n\n3. **测试方法**\n   - 使用浏览器开发者工具的手机模式\n   - 真机访问H5页面测试\n   - postman测试后端接口\n\n### 5. 部署说明\n\n1. **简单部署方案**\n```bash\n# 前端打包\nnpm run build\n# 将dist目录放到nginx的html目录\n\n# 后端打包\nmvn package\n# 运行jar包\njava -jar sports-server.jar\n```\n\n2. **nginx配置示例**\n```nginx\nserver {\n    listen 80;\n    server_name your-domain.com;\n\n    # 前端页面\n    location / {\n        root /usr/share/nginx/html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    # 后端接口\n    location /api {\n        proxy_pass http://localhost:8080;\n    }\n}\n```\n\n### 6. 后续优化方向\n1. H5转小程序（可使用uni-app重构）\n2. 添加文件上传功能\n3. 集成微信支付\n4. 添加数据统计\n\n## 四、项目实施计划\n\n### 第一阶段：基础框架搭建（已完成）\n- [x] 项目初始化\n  - [x] 前端项目搭建(Vue3 + Vant)\n  - [x] 后端项目搭建(SpringBoot + MyBatis)\n  - [x] 数据库环境搭建(MySQL)\n- [x] 用户系统开发\n  - [x] 基础框架搭建\n  - [x] 统一响应处理\n  - [x] 全局异常处理\n  - [x] 跨域配置\n  - [x] 用户登录注册\n  - [x] 用户信息管理（含握拍方式和球拍配置）\n- [x] 数据库设计\n  - [x] 用户表设计\n  - [x] 用户认证表设计\n  - [x] 用户扩展字段（握拍方式、球拍配置）\n- [x] 前端页面开发\n  - [x] TabBar 布局\n  - [x] 用户登录/注册页面\n  - [x] 用户资料查看/编辑页面\n  - [x] 积分查询页面\n  - [x] 赛事列表页面（基础UI）\n\n### 第二阶段：核心功能开发（进行中）\n- [ ] 赛事管理模块\n  - [ ] 设计赛事相关数据表\n  - [ ] 实现赛事 CRUD 接口\n  - [ ] 完善赛事列表页面功能\n  - [ ] 开发赛事详情页面\n  - [ ] 实现赛事报名功能\n- [ ] 积分系统完善\n  - [ ] 设计积分规则表\n  - [ ] 实现积分计算逻辑\n  - [ ] 完善积分排行功能\n  - [ ] 添加等级晋升机制\n- [ ] 比赛记录模块\n  - [ ] 设计比赛记录表\n  - [ ] 实现比分记录功能\n  - [ ] 开发比赛历史查询\n  - [ ] 添加数据统计分析\n\n### 第三阶段：功能完善（待开始）\n- [ ] 系统优化\n  - [ ] 添加用户认证和授权\n  - [ ] 实现文件上传（头像等）\n  - [ ] 添加数据缓存\n  - [ ] 优化页面性能\n- [ ] 其他功能\n  - [ ] 消息通知系统\n  - [ ] 支付功能\n  - [ ] 数据导出功能\n  - [ ] 管理员后台\n\n### 下一步计划\n1. 设计并创建赛事相关的数据表\n2. 实现赛事的后端接口\n3. 完善赛事列表和详情页面的功能\n4. 实现赛事报名流程\n\n### 开发环境搭建说明\n\n1. **后端环境配置**\n```bash\n# 数据库配置\n- MySQL 8.0+\n- 创建数据库: sports_db\n- 执行初始化脚本: sports-server/src/main/resources/db/init.sql\n\n# 启动后端服务\ncd sports-server\nmvn spring-boot:run\n```\n\n2. **前端环境配置**\n```bash\n# 安装依赖\ncd sports-h5\nnpm install\n\n# 启动开发服务器\nnpm run serve\n```\n\n3. **接口测试**\n```bash\n# 测试用户接口\ncurl http://localhost:8088/api/user/test\ncurl http://localhost:8088/api/user/list\n```\n\n### 已完成功能\n1. 基础框架搭建\n   - SpringBoot 基础配置\n   - MyBatis 集成\n   - 数据库连接池配置(HikariCP)\n   - 统一响应处理\n   - 全局异常处理\n   - 跨域支持\n\n2. 数据库设计\n   - 用户表(user)\n   - 用户认证表(user_auth)\n\n### 下一步计划\n1. 完善用户系统\n   - 实现用户注册\n   - 实现用户登录\n   - 完善用户信息管理\n\n2. 开发赛事管理功能\n   - 设计赛事相关表\n   - 实现赛事CRUD接口\n\n### 第四阶段：测试优化（2周）\n- [ ] 功能测试\n- [ ] 性能优化\n- [ ] 上线准备\n\n## 五、注意事项\n\n### 1. 安全性考虑\n- 用户信息保护\n- 支付安全\n- 数据备份\n\n### 2. 性能优化\n- 首屏加载优化\n- 请求响应优化\n- 数据缓存策略\n\n### 3. 用户体验\n- 界面交互设计\n- 操作流程优化\n- 错误提示友好化\n\n## 六、后续规划\n\n### 1. 功能扩展\n- 引入AI对手推荐\n- 添加视频直播功能\n- 开发裁判系统\n\n### 2. 运营计划\n- 举办线上赛事\n- 积分商城\n- 广告变现\n\n### 3. 数据应用\n- 选手数据分析\n- 技术提升建议\n- 赛事预测模型 \n\n","source":"_posts/24_球赛小程序需求文档.md","raw":"---\ntitle: 球赛小程序需求文档\ndate: 2025-01-28\ntags: \n  - 球赛小程序\n  - 项目文档\n---\n\n# 球赛小程序需求与方案文档\n\n## 一、项目概述\n\n开发一个面向乒乓球运动爱好者的赛事组织和积分管理小程序，帮助用户便捷地参与比赛、记录成绩和追踪个人成长。\n\n## 二、核心功能需求\n\n### 1. 用户系统\n- 微信授权登录\n- 个人信息管理\n  - 基础信息(昵称、头像等)\n  - 技术等级/积分\n  - 历史对战信息\n\n### 2. 赛事管理\n- 赛事发布\n  - 比赛类型(单打/双打)\n  - 时间地点\n  - 参赛要求\n  - 费用说明\n  - 人数限制\n- 赛事报名\n  - 在线报名\n  - 报名费支付\n  - 退赛处理\n- 赛程安排\n  - 自动分组/对阵\n  - 赛程时间表\n  - 场地分配\n\n### 3. 比分记录\n- 实时比分录入\n- 比赛结果确认\n- 历史比赛查询\n- 数据统计分析\n\n### 4. 积分系统\n- 积分规则配置\n- 积分实时计算\n- 积分排行榜\n- 等级晋升机制\n\n## 三、技术方案\n\n### 1. 技术选型\n- **前端**\n  - Vue3 + Vant UI（移动端H5框架）\n  - 一套代码，同时支持H5和小程序\n- **后端**\n  - SpringBoot（单体应用）\n  - MySQL（单数据库）\n  - 文件直接存储在服务器\n\n### 2. 开发步骤\n\n#### 2.1 前端快速启动\n```bash\n# 使用 Vue CLI 创建项目\nvue create sports-h5\n\n# 安装 Vant UI\nnpm i vant\n\n# 配置移动端适配\nnpm i postcss-px-to-viewport -D\n```\n\n#### 2.2 页面开发示例\n```vue\n<!-- 赛事列表页面 -->\n<template>\n  <div class=\"tournament-list\">\n    <!-- 顶部导航 -->\n    <van-nav-bar title=\"赛事列表\" />\n    \n    <!-- 赛事列表 -->\n    <van-list\n      v-model:loading=\"loading\"\n      :finished=\"finished\"\n      @load=\"onLoad\"\n    >\n      <van-cell v-for=\"item in list\" :key=\"item.id\">\n        <template #title>\n          <div class=\"title\">{{item.title}}</div>\n          <div class=\"info\">\n            <span>{{item.startTime}}</span>\n            <span>{{item.venue}}</span>\n          </div>\n        </template>\n        <template #right-icon>\n          <van-button size=\"small\" @click=\"onJoin(item)\">\n            报名\n          </van-button>\n        </template>\n      </van-cell>\n    </van-list>\n  </div>\n</template>\n```\n\n#### 2.3 后端精简版\n```java\n// 主要目录结构\nsports-server\n  ├── controller    // 接口控制器\n  ├── service      // 业务逻辑\n  ├── entity      // 数据实体\n  ├── mapper      // 数据访问\n  └── config      // 基础配置\n\n// 示例代码\n@RestController\n@RequestMapping(\"/api/tournament\")\npublic class TournamentController {\n    \n    @GetMapping(\"/list\")\n    public Result list() {\n        return Result.success(tournamentService.list());\n    }\n    \n    @PostMapping(\"/join\")\n    public Result join(@RequestBody JoinRequest req) {\n        tournamentService.join(req);\n        return Result.success();\n    }\n}\n```\n\n### 3. 数据库精简设计\n```sql\n-- 用户表\nCREATE TABLE user (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(50) NOT NULL,\n    phone VARCHAR(20),\n    points INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- 赛事表\nCREATE TABLE tournament (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    title VARCHAR(100) NOT NULL,\n    start_time DATETIME,\n    venue VARCHAR(100),\n    max_players INT,\n    status TINYINT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- 报名表\nCREATE TABLE registration (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    tournament_id BIGINT,\n    user_id BIGINT,\n    status TINYINT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### 4. 开发流程建议\n\n1. **先开发H5版本**\n   - 开发和调试更方便\n   - 可以在浏览器中预览\n   - 更容易分享给他人测试\n\n2. **功能逐步实现**\n   - 先实现基础的赛事列表、报名功能\n   - 再添加用户登录、积分系统\n   - 最后考虑其他扩展功能\n\n3. **测试方法**\n   - 使用浏览器开发者工具的手机模式\n   - 真机访问H5页面测试\n   - postman测试后端接口\n\n### 5. 部署说明\n\n1. **简单部署方案**\n```bash\n# 前端打包\nnpm run build\n# 将dist目录放到nginx的html目录\n\n# 后端打包\nmvn package\n# 运行jar包\njava -jar sports-server.jar\n```\n\n2. **nginx配置示例**\n```nginx\nserver {\n    listen 80;\n    server_name your-domain.com;\n\n    # 前端页面\n    location / {\n        root /usr/share/nginx/html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    # 后端接口\n    location /api {\n        proxy_pass http://localhost:8080;\n    }\n}\n```\n\n### 6. 后续优化方向\n1. H5转小程序（可使用uni-app重构）\n2. 添加文件上传功能\n3. 集成微信支付\n4. 添加数据统计\n\n## 四、项目实施计划\n\n### 第一阶段：基础框架搭建（已完成）\n- [x] 项目初始化\n  - [x] 前端项目搭建(Vue3 + Vant)\n  - [x] 后端项目搭建(SpringBoot + MyBatis)\n  - [x] 数据库环境搭建(MySQL)\n- [x] 用户系统开发\n  - [x] 基础框架搭建\n  - [x] 统一响应处理\n  - [x] 全局异常处理\n  - [x] 跨域配置\n  - [x] 用户登录注册\n  - [x] 用户信息管理（含握拍方式和球拍配置）\n- [x] 数据库设计\n  - [x] 用户表设计\n  - [x] 用户认证表设计\n  - [x] 用户扩展字段（握拍方式、球拍配置）\n- [x] 前端页面开发\n  - [x] TabBar 布局\n  - [x] 用户登录/注册页面\n  - [x] 用户资料查看/编辑页面\n  - [x] 积分查询页面\n  - [x] 赛事列表页面（基础UI）\n\n### 第二阶段：核心功能开发（进行中）\n- [ ] 赛事管理模块\n  - [ ] 设计赛事相关数据表\n  - [ ] 实现赛事 CRUD 接口\n  - [ ] 完善赛事列表页面功能\n  - [ ] 开发赛事详情页面\n  - [ ] 实现赛事报名功能\n- [ ] 积分系统完善\n  - [ ] 设计积分规则表\n  - [ ] 实现积分计算逻辑\n  - [ ] 完善积分排行功能\n  - [ ] 添加等级晋升机制\n- [ ] 比赛记录模块\n  - [ ] 设计比赛记录表\n  - [ ] 实现比分记录功能\n  - [ ] 开发比赛历史查询\n  - [ ] 添加数据统计分析\n\n### 第三阶段：功能完善（待开始）\n- [ ] 系统优化\n  - [ ] 添加用户认证和授权\n  - [ ] 实现文件上传（头像等）\n  - [ ] 添加数据缓存\n  - [ ] 优化页面性能\n- [ ] 其他功能\n  - [ ] 消息通知系统\n  - [ ] 支付功能\n  - [ ] 数据导出功能\n  - [ ] 管理员后台\n\n### 下一步计划\n1. 设计并创建赛事相关的数据表\n2. 实现赛事的后端接口\n3. 完善赛事列表和详情页面的功能\n4. 实现赛事报名流程\n\n### 开发环境搭建说明\n\n1. **后端环境配置**\n```bash\n# 数据库配置\n- MySQL 8.0+\n- 创建数据库: sports_db\n- 执行初始化脚本: sports-server/src/main/resources/db/init.sql\n\n# 启动后端服务\ncd sports-server\nmvn spring-boot:run\n```\n\n2. **前端环境配置**\n```bash\n# 安装依赖\ncd sports-h5\nnpm install\n\n# 启动开发服务器\nnpm run serve\n```\n\n3. **接口测试**\n```bash\n# 测试用户接口\ncurl http://localhost:8088/api/user/test\ncurl http://localhost:8088/api/user/list\n```\n\n### 已完成功能\n1. 基础框架搭建\n   - SpringBoot 基础配置\n   - MyBatis 集成\n   - 数据库连接池配置(HikariCP)\n   - 统一响应处理\n   - 全局异常处理\n   - 跨域支持\n\n2. 数据库设计\n   - 用户表(user)\n   - 用户认证表(user_auth)\n\n### 下一步计划\n1. 完善用户系统\n   - 实现用户注册\n   - 实现用户登录\n   - 完善用户信息管理\n\n2. 开发赛事管理功能\n   - 设计赛事相关表\n   - 实现赛事CRUD接口\n\n### 第四阶段：测试优化（2周）\n- [ ] 功能测试\n- [ ] 性能优化\n- [ ] 上线准备\n\n## 五、注意事项\n\n### 1. 安全性考虑\n- 用户信息保护\n- 支付安全\n- 数据备份\n\n### 2. 性能优化\n- 首屏加载优化\n- 请求响应优化\n- 数据缓存策略\n\n### 3. 用户体验\n- 界面交互设计\n- 操作流程优化\n- 错误提示友好化\n\n## 六、后续规划\n\n### 1. 功能扩展\n- 引入AI对手推荐\n- 添加视频直播功能\n- 开发裁判系统\n\n### 2. 运营计划\n- 举办线上赛事\n- 积分商城\n- 广告变现\n\n### 3. 数据应用\n- 选手数据分析\n- 技术提升建议\n- 赛事预测模型 \n\n","slug":"24_球赛小程序需求文档","published":1,"updated":"2025-02-01T16:06:15.174Z","_id":"cm6gbnxvo0000o92zcxu040cp","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"球赛小程序需求与方案文档\"><a href=\"#球赛小程序需求与方案文档\" class=\"headerlink\" title=\"球赛小程序需求与方案文档\"></a>球赛小程序需求与方案文档</h1><h2 id=\"一、项目概述\"><a href=\"#一、项目概述\" class=\"headerlink\" title=\"一、项目概述\"></a>一、项目概述</h2><p>开发一个面向乒乓球运动爱好者的赛事组织和积分管理小程序，帮助用户便捷地参与比赛、记录成绩和追踪个人成长。</p>\n<h2 id=\"二、核心功能需求\"><a href=\"#二、核心功能需求\" class=\"headerlink\" title=\"二、核心功能需求\"></a>二、核心功能需求</h2><h3 id=\"1-用户系统\"><a href=\"#1-用户系统\" class=\"headerlink\" title=\"1. 用户系统\"></a>1. 用户系统</h3><ul>\n<li>微信授权登录</li>\n<li>个人信息管理<ul>\n<li>基础信息(昵称、头像等)</li>\n<li>技术等级/积分</li>\n<li>历史对战信息</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-赛事管理\"><a href=\"#2-赛事管理\" class=\"headerlink\" title=\"2. 赛事管理\"></a>2. 赛事管理</h3><ul>\n<li>赛事发布<ul>\n<li>比赛类型(单打/双打)</li>\n<li>时间地点</li>\n<li>参赛要求</li>\n<li>费用说明</li>\n<li>人数限制</li>\n</ul>\n</li>\n<li>赛事报名<ul>\n<li>在线报名</li>\n<li>报名费支付</li>\n<li>退赛处理</li>\n</ul>\n</li>\n<li>赛程安排<ul>\n<li>自动分组/对阵</li>\n<li>赛程时间表</li>\n<li>场地分配</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-比分记录\"><a href=\"#3-比分记录\" class=\"headerlink\" title=\"3. 比分记录\"></a>3. 比分记录</h3><ul>\n<li>实时比分录入</li>\n<li>比赛结果确认</li>\n<li>历史比赛查询</li>\n<li>数据统计分析</li>\n</ul>\n<h3 id=\"4-积分系统\"><a href=\"#4-积分系统\" class=\"headerlink\" title=\"4. 积分系统\"></a>4. 积分系统</h3><ul>\n<li>积分规则配置</li>\n<li>积分实时计算</li>\n<li>积分排行榜</li>\n<li>等级晋升机制</li>\n</ul>\n<h2 id=\"三、技术方案\"><a href=\"#三、技术方案\" class=\"headerlink\" title=\"三、技术方案\"></a>三、技术方案</h2><h3 id=\"1-技术选型\"><a href=\"#1-技术选型\" class=\"headerlink\" title=\"1. 技术选型\"></a>1. 技术选型</h3><ul>\n<li><strong>前端</strong><ul>\n<li>Vue3 + Vant UI（移动端H5框架）</li>\n<li>一套代码，同时支持H5和小程序</li>\n</ul>\n</li>\n<li><strong>后端</strong><ul>\n<li>SpringBoot（单体应用）</li>\n<li>MySQL（单数据库）</li>\n<li>文件直接存储在服务器</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-开发步骤\"><a href=\"#2-开发步骤\" class=\"headerlink\" title=\"2. 开发步骤\"></a>2. 开发步骤</h3><h4 id=\"2-1-前端快速启动\"><a href=\"#2-1-前端快速启动\" class=\"headerlink\" title=\"2.1 前端快速启动\"></a>2.1 前端快速启动</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用 Vue CLI 创建项目</span></span><br><span class=\"line\">vue create sports-h5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Vant UI</span></span><br><span class=\"line\">npm i vant</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置移动端适配</span></span><br><span class=\"line\">npm i postcss-px-to-viewport -D</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-页面开发示例\"><a href=\"#2-2-页面开发示例\" class=\"headerlink\" title=\"2.2 页面开发示例\"></a>2.2 页面开发示例</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 赛事列表页面 --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;tournament-list&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 顶部导航 --&gt;</span><br><span class=\"line\">    &lt;van-nav-bar title=&quot;赛事列表&quot; /&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!-- 赛事列表 --&gt;</span><br><span class=\"line\">    &lt;van-list</span><br><span class=\"line\">      v-model:loading=&quot;loading&quot;</span><br><span class=\"line\">      :finished=&quot;finished&quot;</span><br><span class=\"line\">      @load=&quot;onLoad&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;van-cell v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class=\"line\">        &lt;template #title&gt;</span><br><span class=\"line\">          &lt;div class=&quot;title&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">          &lt;div class=&quot;info&quot;&gt;</span><br><span class=\"line\">            &lt;span&gt;&#123;&#123;item.startTime&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">            &lt;span&gt;&#123;&#123;item.venue&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br><span class=\"line\">        &lt;template #right-icon&gt;</span><br><span class=\"line\">          &lt;van-button size=&quot;small&quot; @click=&quot;onJoin(item)&quot;&gt;</span><br><span class=\"line\">            报名</span><br><span class=\"line\">          &lt;/van-button&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br><span class=\"line\">      &lt;/van-cell&gt;</span><br><span class=\"line\">    &lt;/van-list&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-后端精简版\"><a href=\"#2-3-后端精简版\" class=\"headerlink\" title=\"2.3 后端精简版\"></a>2.3 后端精简版</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 主要目录结构</span></span><br><span class=\"line\">sports-server</span><br><span class=\"line\">  ├── controller    <span class=\"comment\">// 接口控制器</span></span><br><span class=\"line\">  ├── service      <span class=\"comment\">// 业务逻辑</span></span><br><span class=\"line\">  ├── entity      <span class=\"comment\">// 数据实体</span></span><br><span class=\"line\">  ├── mapper      <span class=\"comment\">// 数据访问</span></span><br><span class=\"line\">  └── config      <span class=\"comment\">// 基础配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 示例代码</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/tournament&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TournamentController</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/list&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">list</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success(tournamentService.list());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/join&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">join</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> JoinRequest req)</span> &#123;</span><br><span class=\"line\">        tournamentService.join(req);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-数据库精简设计\"><a href=\"#3-数据库精简设计\" class=\"headerlink\" title=\"3. 数据库精简设计\"></a>3. 数据库精简设计</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 用户表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> <span class=\"keyword\">user</span> (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    phone <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    points <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 赛事表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> tournament (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    title <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    start_time DATETIME,</span><br><span class=\"line\">    venue <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    max_players <span class=\"type\">INT</span>,</span><br><span class=\"line\">    status TINYINT <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 报名表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> registration (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    tournament_id <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">    user_id <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">    status TINYINT <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-开发流程建议\"><a href=\"#4-开发流程建议\" class=\"headerlink\" title=\"4. 开发流程建议\"></a>4. 开发流程建议</h3><ol>\n<li><p><strong>先开发H5版本</strong></p>\n<ul>\n<li>开发和调试更方便</li>\n<li>可以在浏览器中预览</li>\n<li>更容易分享给他人测试</li>\n</ul>\n</li>\n<li><p><strong>功能逐步实现</strong></p>\n<ul>\n<li>先实现基础的赛事列表、报名功能</li>\n<li>再添加用户登录、积分系统</li>\n<li>最后考虑其他扩展功能</li>\n</ul>\n</li>\n<li><p><strong>测试方法</strong></p>\n<ul>\n<li>使用浏览器开发者工具的手机模式</li>\n<li>真机访问H5页面测试</li>\n<li>postman测试后端接口</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"5-部署说明\"><a href=\"#5-部署说明\" class=\"headerlink\" title=\"5. 部署说明\"></a>5. 部署说明</h3><ol>\n<li><p><strong>简单部署方案</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端打包</span></span><br><span class=\"line\">npm run build</span><br><span class=\"line\"><span class=\"comment\"># 将dist目录放到nginx的html目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后端打包</span></span><br><span class=\"line\">mvn package</span><br><span class=\"line\"><span class=\"comment\"># 运行jar包</span></span><br><span class=\"line\">java -jar sports-server.jar</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>nginx配置示例</strong></p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> your-domain.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 前端页面</span></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 后端接口</span></span><br><span class=\"line\">    <span class=\"section\">location</span> /api &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://localhost:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"6-后续优化方向\"><a href=\"#6-后续优化方向\" class=\"headerlink\" title=\"6. 后续优化方向\"></a>6. 后续优化方向</h3><ol>\n<li>H5转小程序（可使用uni-app重构）</li>\n<li>添加文件上传功能</li>\n<li>集成微信支付</li>\n<li>添加数据统计</li>\n</ol>\n<h2 id=\"四、项目实施计划\"><a href=\"#四、项目实施计划\" class=\"headerlink\" title=\"四、项目实施计划\"></a>四、项目实施计划</h2><h3 id=\"第一阶段：基础框架搭建（已完成）\"><a href=\"#第一阶段：基础框架搭建（已完成）\" class=\"headerlink\" title=\"第一阶段：基础框架搭建（已完成）\"></a>第一阶段：基础框架搭建（已完成）</h3><ul>\n<li>[x] 项目初始化<ul>\n<li>[x] 前端项目搭建(Vue3 + Vant)</li>\n<li>[x] 后端项目搭建(SpringBoot + MyBatis)</li>\n<li>[x] 数据库环境搭建(MySQL)</li>\n</ul>\n</li>\n<li>[x] 用户系统开发<ul>\n<li>[x] 基础框架搭建</li>\n<li>[x] 统一响应处理</li>\n<li>[x] 全局异常处理</li>\n<li>[x] 跨域配置</li>\n<li>[x] 用户登录注册</li>\n<li>[x] 用户信息管理（含握拍方式和球拍配置）</li>\n</ul>\n</li>\n<li>[x] 数据库设计<ul>\n<li>[x] 用户表设计</li>\n<li>[x] 用户认证表设计</li>\n<li>[x] 用户扩展字段（握拍方式、球拍配置）</li>\n</ul>\n</li>\n<li>[x] 前端页面开发<ul>\n<li>[x] TabBar 布局</li>\n<li>[x] 用户登录/注册页面</li>\n<li>[x] 用户资料查看/编辑页面</li>\n<li>[x] 积分查询页面</li>\n<li>[x] 赛事列表页面（基础UI）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第二阶段：核心功能开发（进行中）\"><a href=\"#第二阶段：核心功能开发（进行中）\" class=\"headerlink\" title=\"第二阶段：核心功能开发（进行中）\"></a>第二阶段：核心功能开发（进行中）</h3><ul>\n<li>[ ] 赛事管理模块<ul>\n<li>[ ] 设计赛事相关数据表</li>\n<li>[ ] 实现赛事 CRUD 接口</li>\n<li>[ ] 完善赛事列表页面功能</li>\n<li>[ ] 开发赛事详情页面</li>\n<li>[ ] 实现赛事报名功能</li>\n</ul>\n</li>\n<li>[ ] 积分系统完善<ul>\n<li>[ ] 设计积分规则表</li>\n<li>[ ] 实现积分计算逻辑</li>\n<li>[ ] 完善积分排行功能</li>\n<li>[ ] 添加等级晋升机制</li>\n</ul>\n</li>\n<li>[ ] 比赛记录模块<ul>\n<li>[ ] 设计比赛记录表</li>\n<li>[ ] 实现比分记录功能</li>\n<li>[ ] 开发比赛历史查询</li>\n<li>[ ] 添加数据统计分析</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第三阶段：功能完善（待开始）\"><a href=\"#第三阶段：功能完善（待开始）\" class=\"headerlink\" title=\"第三阶段：功能完善（待开始）\"></a>第三阶段：功能完善（待开始）</h3><ul>\n<li>[ ] 系统优化<ul>\n<li>[ ] 添加用户认证和授权</li>\n<li>[ ] 实现文件上传（头像等）</li>\n<li>[ ] 添加数据缓存</li>\n<li>[ ] 优化页面性能</li>\n</ul>\n</li>\n<li>[ ] 其他功能<ul>\n<li>[ ] 消息通知系统</li>\n<li>[ ] 支付功能</li>\n<li>[ ] 数据导出功能</li>\n<li>[ ] 管理员后台</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"下一步计划\"><a href=\"#下一步计划\" class=\"headerlink\" title=\"下一步计划\"></a>下一步计划</h3><ol>\n<li>设计并创建赛事相关的数据表</li>\n<li>实现赛事的后端接口</li>\n<li>完善赛事列表和详情页面的功能</li>\n<li>实现赛事报名流程</li>\n</ol>\n<h3 id=\"开发环境搭建说明\"><a href=\"#开发环境搭建说明\" class=\"headerlink\" title=\"开发环境搭建说明\"></a>开发环境搭建说明</h3><ol>\n<li><p><strong>后端环境配置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据库配置</span></span><br><span class=\"line\">- MySQL 8.0+</span><br><span class=\"line\">- 创建数据库: sports_db</span><br><span class=\"line\">- 执行初始化脚本: sports-server/src/main/resources/db/init.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动后端服务</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sports-server</span><br><span class=\"line\">mvn spring-boot:run</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>前端环境配置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sports-h5</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动开发服务器</span></span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>接口测试</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试用户接口</span></span><br><span class=\"line\">curl http://localhost:8088/api/user/test</span><br><span class=\"line\">curl http://localhost:8088/api/user/list</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"已完成功能\"><a href=\"#已完成功能\" class=\"headerlink\" title=\"已完成功能\"></a>已完成功能</h3><ol>\n<li><p>基础框架搭建</p>\n<ul>\n<li>SpringBoot 基础配置</li>\n<li>MyBatis 集成</li>\n<li>数据库连接池配置(HikariCP)</li>\n<li>统一响应处理</li>\n<li>全局异常处理</li>\n<li>跨域支持</li>\n</ul>\n</li>\n<li><p>数据库设计</p>\n<ul>\n<li>用户表(user)</li>\n<li>用户认证表(user_auth)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"下一步计划-1\"><a href=\"#下一步计划-1\" class=\"headerlink\" title=\"下一步计划\"></a>下一步计划</h3><ol>\n<li><p>完善用户系统</p>\n<ul>\n<li>实现用户注册</li>\n<li>实现用户登录</li>\n<li>完善用户信息管理</li>\n</ul>\n</li>\n<li><p>开发赛事管理功能</p>\n<ul>\n<li>设计赛事相关表</li>\n<li>实现赛事CRUD接口</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"第四阶段：测试优化（2周）\"><a href=\"#第四阶段：测试优化（2周）\" class=\"headerlink\" title=\"第四阶段：测试优化（2周）\"></a>第四阶段：测试优化（2周）</h3><ul>\n<li>[ ] 功能测试</li>\n<li>[ ] 性能优化</li>\n<li>[ ] 上线准备</li>\n</ul>\n<h2 id=\"五、注意事项\"><a href=\"#五、注意事项\" class=\"headerlink\" title=\"五、注意事项\"></a>五、注意事项</h2><h3 id=\"1-安全性考虑\"><a href=\"#1-安全性考虑\" class=\"headerlink\" title=\"1. 安全性考虑\"></a>1. 安全性考虑</h3><ul>\n<li>用户信息保护</li>\n<li>支付安全</li>\n<li>数据备份</li>\n</ul>\n<h3 id=\"2-性能优化\"><a href=\"#2-性能优化\" class=\"headerlink\" title=\"2. 性能优化\"></a>2. 性能优化</h3><ul>\n<li>首屏加载优化</li>\n<li>请求响应优化</li>\n<li>数据缓存策略</li>\n</ul>\n<h3 id=\"3-用户体验\"><a href=\"#3-用户体验\" class=\"headerlink\" title=\"3. 用户体验\"></a>3. 用户体验</h3><ul>\n<li>界面交互设计</li>\n<li>操作流程优化</li>\n<li>错误提示友好化</li>\n</ul>\n<h2 id=\"六、后续规划\"><a href=\"#六、后续规划\" class=\"headerlink\" title=\"六、后续规划\"></a>六、后续规划</h2><h3 id=\"1-功能扩展\"><a href=\"#1-功能扩展\" class=\"headerlink\" title=\"1. 功能扩展\"></a>1. 功能扩展</h3><ul>\n<li>引入AI对手推荐</li>\n<li>添加视频直播功能</li>\n<li>开发裁判系统</li>\n</ul>\n<h3 id=\"2-运营计划\"><a href=\"#2-运营计划\" class=\"headerlink\" title=\"2. 运营计划\"></a>2. 运营计划</h3><ul>\n<li>举办线上赛事</li>\n<li>积分商城</li>\n<li>广告变现</li>\n</ul>\n<h3 id=\"3-数据应用\"><a href=\"#3-数据应用\" class=\"headerlink\" title=\"3. 数据应用\"></a>3. 数据应用</h3><ul>\n<li>选手数据分析</li>\n<li>技术提升建议</li>\n<li>赛事预测模型 </li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"球赛小程序需求与方案文档\"><a href=\"#球赛小程序需求与方案文档\" class=\"headerlink\" title=\"球赛小程序需求与方案文档\"></a>球赛小程序需求与方案文档</h1><h2 id=\"一、项目概述\"><a href=\"#一、项目概述\" class=\"headerlink\" title=\"一、项目概述\"></a>一、项目概述</h2><p>开发一个面向乒乓球运动爱好者的赛事组织和积分管理小程序，帮助用户便捷地参与比赛、记录成绩和追踪个人成长。</p>\n<h2 id=\"二、核心功能需求\"><a href=\"#二、核心功能需求\" class=\"headerlink\" title=\"二、核心功能需求\"></a>二、核心功能需求</h2><h3 id=\"1-用户系统\"><a href=\"#1-用户系统\" class=\"headerlink\" title=\"1. 用户系统\"></a>1. 用户系统</h3><ul>\n<li>微信授权登录</li>\n<li>个人信息管理<ul>\n<li>基础信息(昵称、头像等)</li>\n<li>技术等级/积分</li>\n<li>历史对战信息</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-赛事管理\"><a href=\"#2-赛事管理\" class=\"headerlink\" title=\"2. 赛事管理\"></a>2. 赛事管理</h3><ul>\n<li>赛事发布<ul>\n<li>比赛类型(单打/双打)</li>\n<li>时间地点</li>\n<li>参赛要求</li>\n<li>费用说明</li>\n<li>人数限制</li>\n</ul>\n</li>\n<li>赛事报名<ul>\n<li>在线报名</li>\n<li>报名费支付</li>\n<li>退赛处理</li>\n</ul>\n</li>\n<li>赛程安排<ul>\n<li>自动分组/对阵</li>\n<li>赛程时间表</li>\n<li>场地分配</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-比分记录\"><a href=\"#3-比分记录\" class=\"headerlink\" title=\"3. 比分记录\"></a>3. 比分记录</h3><ul>\n<li>实时比分录入</li>\n<li>比赛结果确认</li>\n<li>历史比赛查询</li>\n<li>数据统计分析</li>\n</ul>\n<h3 id=\"4-积分系统\"><a href=\"#4-积分系统\" class=\"headerlink\" title=\"4. 积分系统\"></a>4. 积分系统</h3><ul>\n<li>积分规则配置</li>\n<li>积分实时计算</li>\n<li>积分排行榜</li>\n<li>等级晋升机制</li>\n</ul>\n<h2 id=\"三、技术方案\"><a href=\"#三、技术方案\" class=\"headerlink\" title=\"三、技术方案\"></a>三、技术方案</h2><h3 id=\"1-技术选型\"><a href=\"#1-技术选型\" class=\"headerlink\" title=\"1. 技术选型\"></a>1. 技术选型</h3><ul>\n<li><strong>前端</strong><ul>\n<li>Vue3 + Vant UI（移动端H5框架）</li>\n<li>一套代码，同时支持H5和小程序</li>\n</ul>\n</li>\n<li><strong>后端</strong><ul>\n<li>SpringBoot（单体应用）</li>\n<li>MySQL（单数据库）</li>\n<li>文件直接存储在服务器</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-开发步骤\"><a href=\"#2-开发步骤\" class=\"headerlink\" title=\"2. 开发步骤\"></a>2. 开发步骤</h3><h4 id=\"2-1-前端快速启动\"><a href=\"#2-1-前端快速启动\" class=\"headerlink\" title=\"2.1 前端快速启动\"></a>2.1 前端快速启动</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用 Vue CLI 创建项目</span></span><br><span class=\"line\">vue create sports-h5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Vant UI</span></span><br><span class=\"line\">npm i vant</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置移动端适配</span></span><br><span class=\"line\">npm i postcss-px-to-viewport -D</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-页面开发示例\"><a href=\"#2-2-页面开发示例\" class=\"headerlink\" title=\"2.2 页面开发示例\"></a>2.2 页面开发示例</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 赛事列表页面 --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;tournament-list&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 顶部导航 --&gt;</span><br><span class=\"line\">    &lt;van-nav-bar title=&quot;赛事列表&quot; /&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!-- 赛事列表 --&gt;</span><br><span class=\"line\">    &lt;van-list</span><br><span class=\"line\">      v-model:loading=&quot;loading&quot;</span><br><span class=\"line\">      :finished=&quot;finished&quot;</span><br><span class=\"line\">      @load=&quot;onLoad&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;van-cell v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class=\"line\">        &lt;template #title&gt;</span><br><span class=\"line\">          &lt;div class=&quot;title&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">          &lt;div class=&quot;info&quot;&gt;</span><br><span class=\"line\">            &lt;span&gt;&#123;&#123;item.startTime&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">            &lt;span&gt;&#123;&#123;item.venue&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br><span class=\"line\">        &lt;template #right-icon&gt;</span><br><span class=\"line\">          &lt;van-button size=&quot;small&quot; @click=&quot;onJoin(item)&quot;&gt;</span><br><span class=\"line\">            报名</span><br><span class=\"line\">          &lt;/van-button&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br><span class=\"line\">      &lt;/van-cell&gt;</span><br><span class=\"line\">    &lt;/van-list&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-后端精简版\"><a href=\"#2-3-后端精简版\" class=\"headerlink\" title=\"2.3 后端精简版\"></a>2.3 后端精简版</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 主要目录结构</span></span><br><span class=\"line\">sports-server</span><br><span class=\"line\">  ├── controller    <span class=\"comment\">// 接口控制器</span></span><br><span class=\"line\">  ├── service      <span class=\"comment\">// 业务逻辑</span></span><br><span class=\"line\">  ├── entity      <span class=\"comment\">// 数据实体</span></span><br><span class=\"line\">  ├── mapper      <span class=\"comment\">// 数据访问</span></span><br><span class=\"line\">  └── config      <span class=\"comment\">// 基础配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 示例代码</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/tournament&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TournamentController</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/list&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">list</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success(tournamentService.list());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/join&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">join</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> JoinRequest req)</span> &#123;</span><br><span class=\"line\">        tournamentService.join(req);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-数据库精简设计\"><a href=\"#3-数据库精简设计\" class=\"headerlink\" title=\"3. 数据库精简设计\"></a>3. 数据库精简设计</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 用户表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> <span class=\"keyword\">user</span> (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    phone <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    points <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 赛事表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> tournament (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    title <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">    start_time DATETIME,</span><br><span class=\"line\">    venue <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    max_players <span class=\"type\">INT</span>,</span><br><span class=\"line\">    status TINYINT <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 报名表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> registration (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    tournament_id <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">    user_id <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">    status TINYINT <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-开发流程建议\"><a href=\"#4-开发流程建议\" class=\"headerlink\" title=\"4. 开发流程建议\"></a>4. 开发流程建议</h3><ol>\n<li><p><strong>先开发H5版本</strong></p>\n<ul>\n<li>开发和调试更方便</li>\n<li>可以在浏览器中预览</li>\n<li>更容易分享给他人测试</li>\n</ul>\n</li>\n<li><p><strong>功能逐步实现</strong></p>\n<ul>\n<li>先实现基础的赛事列表、报名功能</li>\n<li>再添加用户登录、积分系统</li>\n<li>最后考虑其他扩展功能</li>\n</ul>\n</li>\n<li><p><strong>测试方法</strong></p>\n<ul>\n<li>使用浏览器开发者工具的手机模式</li>\n<li>真机访问H5页面测试</li>\n<li>postman测试后端接口</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"5-部署说明\"><a href=\"#5-部署说明\" class=\"headerlink\" title=\"5. 部署说明\"></a>5. 部署说明</h3><ol>\n<li><p><strong>简单部署方案</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端打包</span></span><br><span class=\"line\">npm run build</span><br><span class=\"line\"><span class=\"comment\"># 将dist目录放到nginx的html目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后端打包</span></span><br><span class=\"line\">mvn package</span><br><span class=\"line\"><span class=\"comment\"># 运行jar包</span></span><br><span class=\"line\">java -jar sports-server.jar</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>nginx配置示例</strong></p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> your-domain.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 前端页面</span></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 后端接口</span></span><br><span class=\"line\">    <span class=\"section\">location</span> /api &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://localhost:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"6-后续优化方向\"><a href=\"#6-后续优化方向\" class=\"headerlink\" title=\"6. 后续优化方向\"></a>6. 后续优化方向</h3><ol>\n<li>H5转小程序（可使用uni-app重构）</li>\n<li>添加文件上传功能</li>\n<li>集成微信支付</li>\n<li>添加数据统计</li>\n</ol>\n<h2 id=\"四、项目实施计划\"><a href=\"#四、项目实施计划\" class=\"headerlink\" title=\"四、项目实施计划\"></a>四、项目实施计划</h2><h3 id=\"第一阶段：基础框架搭建（已完成）\"><a href=\"#第一阶段：基础框架搭建（已完成）\" class=\"headerlink\" title=\"第一阶段：基础框架搭建（已完成）\"></a>第一阶段：基础框架搭建（已完成）</h3><ul>\n<li>[x] 项目初始化<ul>\n<li>[x] 前端项目搭建(Vue3 + Vant)</li>\n<li>[x] 后端项目搭建(SpringBoot + MyBatis)</li>\n<li>[x] 数据库环境搭建(MySQL)</li>\n</ul>\n</li>\n<li>[x] 用户系统开发<ul>\n<li>[x] 基础框架搭建</li>\n<li>[x] 统一响应处理</li>\n<li>[x] 全局异常处理</li>\n<li>[x] 跨域配置</li>\n<li>[x] 用户登录注册</li>\n<li>[x] 用户信息管理（含握拍方式和球拍配置）</li>\n</ul>\n</li>\n<li>[x] 数据库设计<ul>\n<li>[x] 用户表设计</li>\n<li>[x] 用户认证表设计</li>\n<li>[x] 用户扩展字段（握拍方式、球拍配置）</li>\n</ul>\n</li>\n<li>[x] 前端页面开发<ul>\n<li>[x] TabBar 布局</li>\n<li>[x] 用户登录/注册页面</li>\n<li>[x] 用户资料查看/编辑页面</li>\n<li>[x] 积分查询页面</li>\n<li>[x] 赛事列表页面（基础UI）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第二阶段：核心功能开发（进行中）\"><a href=\"#第二阶段：核心功能开发（进行中）\" class=\"headerlink\" title=\"第二阶段：核心功能开发（进行中）\"></a>第二阶段：核心功能开发（进行中）</h3><ul>\n<li>[ ] 赛事管理模块<ul>\n<li>[ ] 设计赛事相关数据表</li>\n<li>[ ] 实现赛事 CRUD 接口</li>\n<li>[ ] 完善赛事列表页面功能</li>\n<li>[ ] 开发赛事详情页面</li>\n<li>[ ] 实现赛事报名功能</li>\n</ul>\n</li>\n<li>[ ] 积分系统完善<ul>\n<li>[ ] 设计积分规则表</li>\n<li>[ ] 实现积分计算逻辑</li>\n<li>[ ] 完善积分排行功能</li>\n<li>[ ] 添加等级晋升机制</li>\n</ul>\n</li>\n<li>[ ] 比赛记录模块<ul>\n<li>[ ] 设计比赛记录表</li>\n<li>[ ] 实现比分记录功能</li>\n<li>[ ] 开发比赛历史查询</li>\n<li>[ ] 添加数据统计分析</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第三阶段：功能完善（待开始）\"><a href=\"#第三阶段：功能完善（待开始）\" class=\"headerlink\" title=\"第三阶段：功能完善（待开始）\"></a>第三阶段：功能完善（待开始）</h3><ul>\n<li>[ ] 系统优化<ul>\n<li>[ ] 添加用户认证和授权</li>\n<li>[ ] 实现文件上传（头像等）</li>\n<li>[ ] 添加数据缓存</li>\n<li>[ ] 优化页面性能</li>\n</ul>\n</li>\n<li>[ ] 其他功能<ul>\n<li>[ ] 消息通知系统</li>\n<li>[ ] 支付功能</li>\n<li>[ ] 数据导出功能</li>\n<li>[ ] 管理员后台</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"下一步计划\"><a href=\"#下一步计划\" class=\"headerlink\" title=\"下一步计划\"></a>下一步计划</h3><ol>\n<li>设计并创建赛事相关的数据表</li>\n<li>实现赛事的后端接口</li>\n<li>完善赛事列表和详情页面的功能</li>\n<li>实现赛事报名流程</li>\n</ol>\n<h3 id=\"开发环境搭建说明\"><a href=\"#开发环境搭建说明\" class=\"headerlink\" title=\"开发环境搭建说明\"></a>开发环境搭建说明</h3><ol>\n<li><p><strong>后端环境配置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据库配置</span></span><br><span class=\"line\">- MySQL 8.0+</span><br><span class=\"line\">- 创建数据库: sports_db</span><br><span class=\"line\">- 执行初始化脚本: sports-server/src/main/resources/db/init.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动后端服务</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sports-server</span><br><span class=\"line\">mvn spring-boot:run</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>前端环境配置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sports-h5</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动开发服务器</span></span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>接口测试</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试用户接口</span></span><br><span class=\"line\">curl http://localhost:8088/api/user/test</span><br><span class=\"line\">curl http://localhost:8088/api/user/list</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"已完成功能\"><a href=\"#已完成功能\" class=\"headerlink\" title=\"已完成功能\"></a>已完成功能</h3><ol>\n<li><p>基础框架搭建</p>\n<ul>\n<li>SpringBoot 基础配置</li>\n<li>MyBatis 集成</li>\n<li>数据库连接池配置(HikariCP)</li>\n<li>统一响应处理</li>\n<li>全局异常处理</li>\n<li>跨域支持</li>\n</ul>\n</li>\n<li><p>数据库设计</p>\n<ul>\n<li>用户表(user)</li>\n<li>用户认证表(user_auth)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"下一步计划-1\"><a href=\"#下一步计划-1\" class=\"headerlink\" title=\"下一步计划\"></a>下一步计划</h3><ol>\n<li><p>完善用户系统</p>\n<ul>\n<li>实现用户注册</li>\n<li>实现用户登录</li>\n<li>完善用户信息管理</li>\n</ul>\n</li>\n<li><p>开发赛事管理功能</p>\n<ul>\n<li>设计赛事相关表</li>\n<li>实现赛事CRUD接口</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"第四阶段：测试优化（2周）\"><a href=\"#第四阶段：测试优化（2周）\" class=\"headerlink\" title=\"第四阶段：测试优化（2周）\"></a>第四阶段：测试优化（2周）</h3><ul>\n<li>[ ] 功能测试</li>\n<li>[ ] 性能优化</li>\n<li>[ ] 上线准备</li>\n</ul>\n<h2 id=\"五、注意事项\"><a href=\"#五、注意事项\" class=\"headerlink\" title=\"五、注意事项\"></a>五、注意事项</h2><h3 id=\"1-安全性考虑\"><a href=\"#1-安全性考虑\" class=\"headerlink\" title=\"1. 安全性考虑\"></a>1. 安全性考虑</h3><ul>\n<li>用户信息保护</li>\n<li>支付安全</li>\n<li>数据备份</li>\n</ul>\n<h3 id=\"2-性能优化\"><a href=\"#2-性能优化\" class=\"headerlink\" title=\"2. 性能优化\"></a>2. 性能优化</h3><ul>\n<li>首屏加载优化</li>\n<li>请求响应优化</li>\n<li>数据缓存策略</li>\n</ul>\n<h3 id=\"3-用户体验\"><a href=\"#3-用户体验\" class=\"headerlink\" title=\"3. 用户体验\"></a>3. 用户体验</h3><ul>\n<li>界面交互设计</li>\n<li>操作流程优化</li>\n<li>错误提示友好化</li>\n</ul>\n<h2 id=\"六、后续规划\"><a href=\"#六、后续规划\" class=\"headerlink\" title=\"六、后续规划\"></a>六、后续规划</h2><h3 id=\"1-功能扩展\"><a href=\"#1-功能扩展\" class=\"headerlink\" title=\"1. 功能扩展\"></a>1. 功能扩展</h3><ul>\n<li>引入AI对手推荐</li>\n<li>添加视频直播功能</li>\n<li>开发裁判系统</li>\n</ul>\n<h3 id=\"2-运营计划\"><a href=\"#2-运营计划\" class=\"headerlink\" title=\"2. 运营计划\"></a>2. 运营计划</h3><ul>\n<li>举办线上赛事</li>\n<li>积分商城</li>\n<li>广告变现</li>\n</ul>\n<h3 id=\"3-数据应用\"><a href=\"#3-数据应用\" class=\"headerlink\" title=\"3. 数据应用\"></a>3. 数据应用</h3><ul>\n<li>选手数据分析</li>\n<li>技术提升建议</li>\n<li>赛事预测模型 </li>\n</ul>\n"},{"title":"调用github_api的后台实现","date":"2025-01-11T16:00:00.000Z","_content":"\n## 项目结构\n```bash\narticle-poster/\n├── api/\n│   └── index.py        # 处理微信消息的主函数\n├── libs/\n│   ├── github_api.py   # GitHub API 操作\n│   └── wechat.py       # 微信消息处理\n├── tests/              # 测试文件\n├── requirements.txt    # 依赖管理\n└── vercel.json         # Vercel配置\n```\n\n## 核心代码实现\n\n1. **Webhook 处理函数**\n```python\n# api/index.py\nfrom http.server import BaseHTTPRequestHandler\nfrom libs.wechat import WeChatMessage\nfrom libs.github_api import GitHubAPI\n\nclass handler(BaseHTTPRequestHandler):\n    def validate_signature(self, query):\n        \"\"\"验证微信服务器签名\"\"\"\n        token = os.environ.get('WECHAT_TOKEN')\n        timestamp = query.get('timestamp', [''])[0]\n        nonce = query.get('nonce', [''])[0]\n        signature = query.get('signature', [''])[0]\n        \n        tmp_list = [token, timestamp, nonce]\n        tmp_list.sort()\n        tmp_str = ''.join(tmp_list)\n        hash_obj = hashlib.sha1(tmp_str.encode())\n        \n        return hash_obj.hexdigest() == signature\n\n    def do_GET(self):\n        \"\"\"处理GET请求（微信服务器验证）\"\"\"\n        query = parse_qs(self.path.split('?')[1]) if '?' in self.path else {}\n        if self.validate_signature(query):\n            self.send_response(200)\n            self.send_header('Content-type', 'text/plain')\n            self.end_headers()\n            self.wfile.write(query.get('echostr', [''])[0].encode())\n        else:\n            self.send_response(403)\n            self.end_headers()\n\n    def do_POST(self):\n        \"\"\"处理POST请求（接收消息）\"\"\"\n        content_length = int(self.headers['Content-Length'])\n        post_data = self.rfile.read(content_length)\n        \n        message = WeChatMessage(post_data)\n        if message.msg_type == 'text':\n            github = GitHubAPI()\n            github.create_post(message.format_post())\n        \n        self.send_response(200)\n        self.send_header('Content-type', 'text/plain')\n        self.end_headers()\n        self.wfile.write('success'.encode())\n```\n\n2. **微信消息处理**\n```python\n# libs/wechat.py\nimport xml.etree.ElementTree as ET\n\nclass WeChatMessage:\n    def __init__(self, xml_data):\n        root = ET.fromstring(xml_data)\n        self.msg_type = root.find('MsgType').text\n        self.content = root.find('Content').text if root.find('Content') is not None else ''\n        self.from_user = root.find('FromUserName').text\n        self.create_time = root.find('CreateTime').text\n        \n    def format_post(self):\n        if self.msg_type != 'text':\n            return None\n            \n        lines = self.content.split('\\n', 1)\n        title = lines[0].strip()\n        content = lines[1].strip() if len(lines) > 1 else ''\n        \n        return {\n            'title': title,\n            'content': content\n        }\n```\n\n3. **GitHub API 操作**\n```python\n# libs/github_api.py\nimport os\nimport base64\nimport json\nimport time\nfrom urllib.request import Request, urlopen\nfrom urllib.error import HTTPError\nimport urllib.parse\n\nclass GitHubAPI:\n    def __init__(self):\n        self.token = os.environ.get('GITHUB_TOKEN')\n        self.repo = os.environ.get('GITHUB_REPO')\n        self.owner = os.environ.get('GITHUB_OWNER')\n        self.branch = os.environ.get('GITHUB_BRANCH', 'master')\n        \n    def create_post(self, post_data):\n        \"\"\"创建或更新文章\"\"\"\n        filename = \"source/_posts/test-post.md\"\n        content = f\"\"\"---\ntitle: {post_data['title']}\ndate: {time.strftime('%Y-%m-%d %H:%M:%S')}\n---\n\n{post_data['content']}\n\"\"\"\n        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/contents/{filename}\"\n        headers = {\n            'Authorization': f'token {self.token}',\n            'Accept': 'application/vnd.github.v3+json'\n        }\n        \n        # 获取现有文件的 SHA（如果存在）\n        sha = self.get_file_sha(filename)\n        \n        data = {\n            'message': f'Update post: {post_data[\"title\"]}',\n            'content': base64.b64encode(content.encode()).decode(),\n            'branch': self.branch\n        }\n        if sha:\n            data['sha'] = sha\n            \n        request = Request(url, \n                        data=json.dumps(data).encode(),\n                        headers=headers,\n                        method='PUT')\n        response = urlopen(request)\n        return response.status == 200 or response.status == 201\n```\n\n## 环境变量配置\n\n```env\n# .env\nWECHAT_TOKEN=your_wechat_token\nGITHUB_TOKEN=your_github_token\nGITHUB_REPO=your_repo_name\nGITHUB_OWNER=your_github_username\nGITHUB_BRANCH=master\n```\n\n## 本地开发\n\n1. **安装依赖**\n```bash\npip install -r requirements.txt\n```\n\n2. **启动开发服务器**\n```bash\nvercel dev\n```\n\n3. **测试微信验证**\n```bash\n# 生成测试 URL\npython tests/test_signature.py\n# 使用生成的 URL 测试验证\ncurl \"http://localhost:3000/api/webhook?signature=XXX&timestamp=XXX&nonce=XXX&echostr=XXX\"\n```\n\n4. **测试消息发送**\n```bash\n# 测试发送消息\ncurl -X POST http://localhost:3000/api/webhook \\\n  -H \"Content-Type: application/xml\" \\\n  -d '<xml>\n    <ToUserName><![CDATA[toUser]]></ToUserName>\n    <FromUserName><![CDATA[fromUser]]></FromUserName>\n    <CreateTime>1704891234</CreateTime>\n    <MsgType><![CDATA[text]]></MsgType>\n    <Content><![CDATA[测试文章标题\n这是文章内容，\n可以包含多行\n支持换行符]]></Content>\n    <MsgId>1234567890123456</MsgId>\n  </xml>'\n```\n\n## 部署到 Vercel\n\n1. **安装 Vercel CLI**\n```bash\nnpm i -g vercel\n```\n\n2. **部署**\n```bash\nvercel\n```\n\n3. **配置环境变量**\n在 Vercel 项目设置中配置相同的环境变量\n\n## 国内访问问题解决 todo\n\n1. 申请在国内可以访问的域名：regeorge.asia\n2. 配置域名解析：使用cloudflare解析域名，并配置CNAME到vercel的域名\n3. 配置vercel的域名：vercel.app -> regeorge.asia\n","source":"_posts/23_调用github_api的后台实现.md","raw":"---\ntitle: 调用github_api的后台实现\ndate: 2025-01-12\ntags: \n  - 技术文档\n  - github\n---\n\n## 项目结构\n```bash\narticle-poster/\n├── api/\n│   └── index.py        # 处理微信消息的主函数\n├── libs/\n│   ├── github_api.py   # GitHub API 操作\n│   └── wechat.py       # 微信消息处理\n├── tests/              # 测试文件\n├── requirements.txt    # 依赖管理\n└── vercel.json         # Vercel配置\n```\n\n## 核心代码实现\n\n1. **Webhook 处理函数**\n```python\n# api/index.py\nfrom http.server import BaseHTTPRequestHandler\nfrom libs.wechat import WeChatMessage\nfrom libs.github_api import GitHubAPI\n\nclass handler(BaseHTTPRequestHandler):\n    def validate_signature(self, query):\n        \"\"\"验证微信服务器签名\"\"\"\n        token = os.environ.get('WECHAT_TOKEN')\n        timestamp = query.get('timestamp', [''])[0]\n        nonce = query.get('nonce', [''])[0]\n        signature = query.get('signature', [''])[0]\n        \n        tmp_list = [token, timestamp, nonce]\n        tmp_list.sort()\n        tmp_str = ''.join(tmp_list)\n        hash_obj = hashlib.sha1(tmp_str.encode())\n        \n        return hash_obj.hexdigest() == signature\n\n    def do_GET(self):\n        \"\"\"处理GET请求（微信服务器验证）\"\"\"\n        query = parse_qs(self.path.split('?')[1]) if '?' in self.path else {}\n        if self.validate_signature(query):\n            self.send_response(200)\n            self.send_header('Content-type', 'text/plain')\n            self.end_headers()\n            self.wfile.write(query.get('echostr', [''])[0].encode())\n        else:\n            self.send_response(403)\n            self.end_headers()\n\n    def do_POST(self):\n        \"\"\"处理POST请求（接收消息）\"\"\"\n        content_length = int(self.headers['Content-Length'])\n        post_data = self.rfile.read(content_length)\n        \n        message = WeChatMessage(post_data)\n        if message.msg_type == 'text':\n            github = GitHubAPI()\n            github.create_post(message.format_post())\n        \n        self.send_response(200)\n        self.send_header('Content-type', 'text/plain')\n        self.end_headers()\n        self.wfile.write('success'.encode())\n```\n\n2. **微信消息处理**\n```python\n# libs/wechat.py\nimport xml.etree.ElementTree as ET\n\nclass WeChatMessage:\n    def __init__(self, xml_data):\n        root = ET.fromstring(xml_data)\n        self.msg_type = root.find('MsgType').text\n        self.content = root.find('Content').text if root.find('Content') is not None else ''\n        self.from_user = root.find('FromUserName').text\n        self.create_time = root.find('CreateTime').text\n        \n    def format_post(self):\n        if self.msg_type != 'text':\n            return None\n            \n        lines = self.content.split('\\n', 1)\n        title = lines[0].strip()\n        content = lines[1].strip() if len(lines) > 1 else ''\n        \n        return {\n            'title': title,\n            'content': content\n        }\n```\n\n3. **GitHub API 操作**\n```python\n# libs/github_api.py\nimport os\nimport base64\nimport json\nimport time\nfrom urllib.request import Request, urlopen\nfrom urllib.error import HTTPError\nimport urllib.parse\n\nclass GitHubAPI:\n    def __init__(self):\n        self.token = os.environ.get('GITHUB_TOKEN')\n        self.repo = os.environ.get('GITHUB_REPO')\n        self.owner = os.environ.get('GITHUB_OWNER')\n        self.branch = os.environ.get('GITHUB_BRANCH', 'master')\n        \n    def create_post(self, post_data):\n        \"\"\"创建或更新文章\"\"\"\n        filename = \"source/_posts/test-post.md\"\n        content = f\"\"\"---\ntitle: {post_data['title']}\ndate: {time.strftime('%Y-%m-%d %H:%M:%S')}\n---\n\n{post_data['content']}\n\"\"\"\n        url = f\"https://api.github.com/repos/{self.owner}/{self.repo}/contents/{filename}\"\n        headers = {\n            'Authorization': f'token {self.token}',\n            'Accept': 'application/vnd.github.v3+json'\n        }\n        \n        # 获取现有文件的 SHA（如果存在）\n        sha = self.get_file_sha(filename)\n        \n        data = {\n            'message': f'Update post: {post_data[\"title\"]}',\n            'content': base64.b64encode(content.encode()).decode(),\n            'branch': self.branch\n        }\n        if sha:\n            data['sha'] = sha\n            \n        request = Request(url, \n                        data=json.dumps(data).encode(),\n                        headers=headers,\n                        method='PUT')\n        response = urlopen(request)\n        return response.status == 200 or response.status == 201\n```\n\n## 环境变量配置\n\n```env\n# .env\nWECHAT_TOKEN=your_wechat_token\nGITHUB_TOKEN=your_github_token\nGITHUB_REPO=your_repo_name\nGITHUB_OWNER=your_github_username\nGITHUB_BRANCH=master\n```\n\n## 本地开发\n\n1. **安装依赖**\n```bash\npip install -r requirements.txt\n```\n\n2. **启动开发服务器**\n```bash\nvercel dev\n```\n\n3. **测试微信验证**\n```bash\n# 生成测试 URL\npython tests/test_signature.py\n# 使用生成的 URL 测试验证\ncurl \"http://localhost:3000/api/webhook?signature=XXX&timestamp=XXX&nonce=XXX&echostr=XXX\"\n```\n\n4. **测试消息发送**\n```bash\n# 测试发送消息\ncurl -X POST http://localhost:3000/api/webhook \\\n  -H \"Content-Type: application/xml\" \\\n  -d '<xml>\n    <ToUserName><![CDATA[toUser]]></ToUserName>\n    <FromUserName><![CDATA[fromUser]]></FromUserName>\n    <CreateTime>1704891234</CreateTime>\n    <MsgType><![CDATA[text]]></MsgType>\n    <Content><![CDATA[测试文章标题\n这是文章内容，\n可以包含多行\n支持换行符]]></Content>\n    <MsgId>1234567890123456</MsgId>\n  </xml>'\n```\n\n## 部署到 Vercel\n\n1. **安装 Vercel CLI**\n```bash\nnpm i -g vercel\n```\n\n2. **部署**\n```bash\nvercel\n```\n\n3. **配置环境变量**\n在 Vercel 项目设置中配置相同的环境变量\n\n## 国内访问问题解决 todo\n\n1. 申请在国内可以访问的域名：regeorge.asia\n2. 配置域名解析：使用cloudflare解析域名，并配置CNAME到vercel的域名\n3. 配置vercel的域名：vercel.app -> regeorge.asia\n","slug":"23_调用github_api的后台实现","published":1,"updated":"2025-01-28T10:24:38.413Z","_id":"cm6gbnxvo0001o92z00bbem0v","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">article-poster/</span><br><span class=\"line\">├── api/</span><br><span class=\"line\">│   └── index.py        <span class=\"comment\"># 处理微信消息的主函数</span></span><br><span class=\"line\">├── libs/</span><br><span class=\"line\">│   ├── github_api.py   <span class=\"comment\"># GitHub API 操作</span></span><br><span class=\"line\">│   └── wechat.py       <span class=\"comment\"># 微信消息处理</span></span><br><span class=\"line\">├── tests/              <span class=\"comment\"># 测试文件</span></span><br><span class=\"line\">├── requirements.txt    <span class=\"comment\"># 依赖管理</span></span><br><span class=\"line\">└── vercel.json         <span class=\"comment\"># Vercel配置</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"核心代码实现\"><a href=\"#核心代码实现\" class=\"headerlink\" title=\"核心代码实现\"></a>核心代码实现</h2><ol>\n<li><p><strong>Webhook 处理函数</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># api/index.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> http.server <span class=\"keyword\">import</span> BaseHTTPRequestHandler</span><br><span class=\"line\"><span class=\"keyword\">from</span> libs.wechat <span class=\"keyword\">import</span> WeChatMessage</span><br><span class=\"line\"><span class=\"keyword\">from</span> libs.github_api <span class=\"keyword\">import</span> GitHubAPI</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">handler</span>(<span class=\"title class_ inherited__\">BaseHTTPRequestHandler</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">validate_signature</span>(<span class=\"params\">self, query</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;验证微信服务器签名&quot;&quot;&quot;</span></span><br><span class=\"line\">        token = os.environ.get(<span class=\"string\">&#x27;WECHAT_TOKEN&#x27;</span>)</span><br><span class=\"line\">        timestamp = query.get(<span class=\"string\">&#x27;timestamp&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>]</span><br><span class=\"line\">        nonce = query.get(<span class=\"string\">&#x27;nonce&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>]</span><br><span class=\"line\">        signature = query.get(<span class=\"string\">&#x27;signature&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        tmp_list = [token, timestamp, nonce]</span><br><span class=\"line\">        tmp_list.sort()</span><br><span class=\"line\">        tmp_str = <span class=\"string\">&#x27;&#x27;</span>.join(tmp_list)</span><br><span class=\"line\">        hash_obj = hashlib.sha1(tmp_str.encode())</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> hash_obj.hexdigest() == signature</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">do_GET</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;处理GET请求（微信服务器验证）&quot;&quot;&quot;</span></span><br><span class=\"line\">        query = parse_qs(<span class=\"variable language_\">self</span>.path.split(<span class=\"string\">&#x27;?&#x27;</span>)[<span class=\"number\">1</span>]) <span class=\"keyword\">if</span> <span class=\"string\">&#x27;?&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.path <span class=\"keyword\">else</span> &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.validate_signature(query):</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.send_response(<span class=\"number\">200</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.send_header(<span class=\"string\">&#x27;Content-type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.end_headers()</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.wfile.write(query.get(<span class=\"string\">&#x27;echostr&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>].encode())</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.send_response(<span class=\"number\">403</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.end_headers()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">do_POST</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;处理POST请求（接收消息）&quot;&quot;&quot;</span></span><br><span class=\"line\">        content_length = <span class=\"built_in\">int</span>(<span class=\"variable language_\">self</span>.headers[<span class=\"string\">&#x27;Content-Length&#x27;</span>])</span><br><span class=\"line\">        post_data = <span class=\"variable language_\">self</span>.rfile.read(content_length)</span><br><span class=\"line\">        </span><br><span class=\"line\">        message = WeChatMessage(post_data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> message.msg_type == <span class=\"string\">&#x27;text&#x27;</span>:</span><br><span class=\"line\">            github = GitHubAPI()</span><br><span class=\"line\">            github.create_post(message.format_post())</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.send_response(<span class=\"number\">200</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.send_header(<span class=\"string\">&#x27;Content-type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.end_headers()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.wfile.write(<span class=\"string\">&#x27;success&#x27;</span>.encode())</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>微信消息处理</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># libs/wechat.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ET</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">WeChatMessage</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, xml_data</span>):</span><br><span class=\"line\">        root = ET.fromstring(xml_data)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.msg_type = root.find(<span class=\"string\">&#x27;MsgType&#x27;</span>).text</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.content = root.find(<span class=\"string\">&#x27;Content&#x27;</span>).text <span class=\"keyword\">if</span> root.find(<span class=\"string\">&#x27;Content&#x27;</span>) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">else</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.from_user = root.find(<span class=\"string\">&#x27;FromUserName&#x27;</span>).text</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.create_time = root.find(<span class=\"string\">&#x27;CreateTime&#x27;</span>).text</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">format_post</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.msg_type != <span class=\"string\">&#x27;text&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        lines = <span class=\"variable language_\">self</span>.content.split(<span class=\"string\">&#x27;\\n&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">        title = lines[<span class=\"number\">0</span>].strip()</span><br><span class=\"line\">        content = lines[<span class=\"number\">1</span>].strip() <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(lines) &gt; <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;title&#x27;</span>: title,</span><br><span class=\"line\">            <span class=\"string\">&#x27;content&#x27;</span>: content</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>GitHub API 操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># libs/github_api.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> Request, urlopen</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.error <span class=\"keyword\">import</span> HTTPError</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GitHubAPI</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.token = os.environ.get(<span class=\"string\">&#x27;GITHUB_TOKEN&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.repo = os.environ.get(<span class=\"string\">&#x27;GITHUB_REPO&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.owner = os.environ.get(<span class=\"string\">&#x27;GITHUB_OWNER&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.branch = os.environ.get(<span class=\"string\">&#x27;GITHUB_BRANCH&#x27;</span>, <span class=\"string\">&#x27;master&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">create_post</span>(<span class=\"params\">self, post_data</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;创建或更新文章&quot;&quot;&quot;</span></span><br><span class=\"line\">        filename = <span class=\"string\">&quot;source/_posts/test-post.md&quot;</span></span><br><span class=\"line\">        content = <span class=\"string\">f&quot;&quot;&quot;---</span></span><br><span class=\"line\"><span class=\"string\">title: <span class=\"subst\">&#123;post_data[<span class=\"string\">&#x27;title&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">date: <span class=\"subst\">&#123;time.strftime(<span class=\"string\">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">---</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#123;post_data[<span class=\"string\">&#x27;content&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">        url = <span class=\"string\">f&quot;https://api.github.com/repos/<span class=\"subst\">&#123;self.owner&#125;</span>/<span class=\"subst\">&#123;self.repo&#125;</span>/contents/<span class=\"subst\">&#123;filename&#125;</span>&quot;</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;Authorization&#x27;</span>: <span class=\"string\">f&#x27;token <span class=\"subst\">&#123;self.token&#125;</span>&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;application/vnd.github.v3+json&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 获取现有文件的 SHA（如果存在）</span></span><br><span class=\"line\">        sha = <span class=\"variable language_\">self</span>.get_file_sha(filename)</span><br><span class=\"line\">        </span><br><span class=\"line\">        data = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">f&#x27;Update post: <span class=\"subst\">&#123;post_data[<span class=\"string\">&quot;title&quot;</span>]&#125;</span>&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;content&#x27;</span>: base64.b64encode(content.encode()).decode(),</span><br><span class=\"line\">            <span class=\"string\">&#x27;branch&#x27;</span>: <span class=\"variable language_\">self</span>.branch</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sha:</span><br><span class=\"line\">            data[<span class=\"string\">&#x27;sha&#x27;</span>] = sha</span><br><span class=\"line\">            </span><br><span class=\"line\">        request = Request(url, </span><br><span class=\"line\">                        data=json.dumps(data).encode(),</span><br><span class=\"line\">                        headers=headers,</span><br><span class=\"line\">                        method=<span class=\"string\">&#x27;PUT&#x27;</span>)</span><br><span class=\"line\">        response = urlopen(request)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.status == <span class=\"number\">200</span> <span class=\"keyword\">or</span> response.status == <span class=\"number\">201</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"环境变量配置\"><a href=\"#环境变量配置\" class=\"headerlink\" title=\"环境变量配置\"></a>环境变量配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># .env</span><br><span class=\"line\">WECHAT_TOKEN=your_wechat_token</span><br><span class=\"line\">GITHUB_TOKEN=your_github_token</span><br><span class=\"line\">GITHUB_REPO=your_repo_name</span><br><span class=\"line\">GITHUB_OWNER=your_github_username</span><br><span class=\"line\">GITHUB_BRANCH=master</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地开发\"><a href=\"#本地开发\" class=\"headerlink\" title=\"本地开发\"></a>本地开发</h2><ol>\n<li><p><strong>安装依赖</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>启动开发服务器</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vercel dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>测试微信验证</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成测试 URL</span></span><br><span class=\"line\">python tests/test_signature.py</span><br><span class=\"line\"><span class=\"comment\"># 使用生成的 URL 测试验证</span></span><br><span class=\"line\">curl <span class=\"string\">&quot;http://localhost:3000/api/webhook?signature=XXX&amp;timestamp=XXX&amp;nonce=XXX&amp;echostr=XXX&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>测试消息发送</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试发送消息</span></span><br><span class=\"line\">curl -X POST http://localhost:3000/api/webhook \\</span><br><span class=\"line\">  -H <span class=\"string\">&quot;Content-Type: application/xml&quot;</span> \\</span><br><span class=\"line\">  -d <span class=\"string\">&#x27;&lt;xml&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;ToUserName&gt;&lt;![CDATA[toUser]]&gt;&lt;/ToUserName&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;FromUserName&gt;&lt;![CDATA[fromUser]]&gt;&lt;/FromUserName&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;CreateTime&gt;1704891234&lt;/CreateTime&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;Content&gt;&lt;![CDATA[测试文章标题</span></span><br><span class=\"line\"><span class=\"string\">这是文章内容，</span></span><br><span class=\"line\"><span class=\"string\">可以包含多行</span></span><br><span class=\"line\"><span class=\"string\">支持换行符]]&gt;&lt;/Content&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;MsgId&gt;1234567890123456&lt;/MsgId&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/xml&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"部署到-Vercel\"><a href=\"#部署到-Vercel\" class=\"headerlink\" title=\"部署到 Vercel\"></a>部署到 Vercel</h2><ol>\n<li><p><strong>安装 Vercel CLI</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g vercel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>部署</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vercel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置环境变量</strong><br>在 Vercel 项目设置中配置相同的环境变量</p>\n</li>\n</ol>\n<h2 id=\"国内访问问题解决-todo\"><a href=\"#国内访问问题解决-todo\" class=\"headerlink\" title=\"国内访问问题解决 todo\"></a>国内访问问题解决 todo</h2><ol>\n<li>申请在国内可以访问的域名：regeorge.asia</li>\n<li>配置域名解析：使用cloudflare解析域名，并配置CNAME到vercel的域名</li>\n<li>配置vercel的域名：vercel.app -&gt; regeorge.asia</li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">article-poster/</span><br><span class=\"line\">├── api/</span><br><span class=\"line\">│   └── index.py        <span class=\"comment\"># 处理微信消息的主函数</span></span><br><span class=\"line\">├── libs/</span><br><span class=\"line\">│   ├── github_api.py   <span class=\"comment\"># GitHub API 操作</span></span><br><span class=\"line\">│   └── wechat.py       <span class=\"comment\"># 微信消息处理</span></span><br><span class=\"line\">├── tests/              <span class=\"comment\"># 测试文件</span></span><br><span class=\"line\">├── requirements.txt    <span class=\"comment\"># 依赖管理</span></span><br><span class=\"line\">└── vercel.json         <span class=\"comment\"># Vercel配置</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"核心代码实现\"><a href=\"#核心代码实现\" class=\"headerlink\" title=\"核心代码实现\"></a>核心代码实现</h2><ol>\n<li><p><strong>Webhook 处理函数</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># api/index.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> http.server <span class=\"keyword\">import</span> BaseHTTPRequestHandler</span><br><span class=\"line\"><span class=\"keyword\">from</span> libs.wechat <span class=\"keyword\">import</span> WeChatMessage</span><br><span class=\"line\"><span class=\"keyword\">from</span> libs.github_api <span class=\"keyword\">import</span> GitHubAPI</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">handler</span>(<span class=\"title class_ inherited__\">BaseHTTPRequestHandler</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">validate_signature</span>(<span class=\"params\">self, query</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;验证微信服务器签名&quot;&quot;&quot;</span></span><br><span class=\"line\">        token = os.environ.get(<span class=\"string\">&#x27;WECHAT_TOKEN&#x27;</span>)</span><br><span class=\"line\">        timestamp = query.get(<span class=\"string\">&#x27;timestamp&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>]</span><br><span class=\"line\">        nonce = query.get(<span class=\"string\">&#x27;nonce&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>]</span><br><span class=\"line\">        signature = query.get(<span class=\"string\">&#x27;signature&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        tmp_list = [token, timestamp, nonce]</span><br><span class=\"line\">        tmp_list.sort()</span><br><span class=\"line\">        tmp_str = <span class=\"string\">&#x27;&#x27;</span>.join(tmp_list)</span><br><span class=\"line\">        hash_obj = hashlib.sha1(tmp_str.encode())</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> hash_obj.hexdigest() == signature</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">do_GET</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;处理GET请求（微信服务器验证）&quot;&quot;&quot;</span></span><br><span class=\"line\">        query = parse_qs(<span class=\"variable language_\">self</span>.path.split(<span class=\"string\">&#x27;?&#x27;</span>)[<span class=\"number\">1</span>]) <span class=\"keyword\">if</span> <span class=\"string\">&#x27;?&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.path <span class=\"keyword\">else</span> &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.validate_signature(query):</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.send_response(<span class=\"number\">200</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.send_header(<span class=\"string\">&#x27;Content-type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.end_headers()</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.wfile.write(query.get(<span class=\"string\">&#x27;echostr&#x27;</span>, [<span class=\"string\">&#x27;&#x27;</span>])[<span class=\"number\">0</span>].encode())</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.send_response(<span class=\"number\">403</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.end_headers()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">do_POST</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;处理POST请求（接收消息）&quot;&quot;&quot;</span></span><br><span class=\"line\">        content_length = <span class=\"built_in\">int</span>(<span class=\"variable language_\">self</span>.headers[<span class=\"string\">&#x27;Content-Length&#x27;</span>])</span><br><span class=\"line\">        post_data = <span class=\"variable language_\">self</span>.rfile.read(content_length)</span><br><span class=\"line\">        </span><br><span class=\"line\">        message = WeChatMessage(post_data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> message.msg_type == <span class=\"string\">&#x27;text&#x27;</span>:</span><br><span class=\"line\">            github = GitHubAPI()</span><br><span class=\"line\">            github.create_post(message.format_post())</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.send_response(<span class=\"number\">200</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.send_header(<span class=\"string\">&#x27;Content-type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.end_headers()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.wfile.write(<span class=\"string\">&#x27;success&#x27;</span>.encode())</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>微信消息处理</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># libs/wechat.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ET</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">WeChatMessage</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, xml_data</span>):</span><br><span class=\"line\">        root = ET.fromstring(xml_data)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.msg_type = root.find(<span class=\"string\">&#x27;MsgType&#x27;</span>).text</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.content = root.find(<span class=\"string\">&#x27;Content&#x27;</span>).text <span class=\"keyword\">if</span> root.find(<span class=\"string\">&#x27;Content&#x27;</span>) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">else</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.from_user = root.find(<span class=\"string\">&#x27;FromUserName&#x27;</span>).text</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.create_time = root.find(<span class=\"string\">&#x27;CreateTime&#x27;</span>).text</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">format_post</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.msg_type != <span class=\"string\">&#x27;text&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        lines = <span class=\"variable language_\">self</span>.content.split(<span class=\"string\">&#x27;\\n&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">        title = lines[<span class=\"number\">0</span>].strip()</span><br><span class=\"line\">        content = lines[<span class=\"number\">1</span>].strip() <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(lines) &gt; <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;title&#x27;</span>: title,</span><br><span class=\"line\">            <span class=\"string\">&#x27;content&#x27;</span>: content</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>GitHub API 操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># libs/github_api.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> Request, urlopen</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.error <span class=\"keyword\">import</span> HTTPError</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GitHubAPI</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.token = os.environ.get(<span class=\"string\">&#x27;GITHUB_TOKEN&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.repo = os.environ.get(<span class=\"string\">&#x27;GITHUB_REPO&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.owner = os.environ.get(<span class=\"string\">&#x27;GITHUB_OWNER&#x27;</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.branch = os.environ.get(<span class=\"string\">&#x27;GITHUB_BRANCH&#x27;</span>, <span class=\"string\">&#x27;master&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">create_post</span>(<span class=\"params\">self, post_data</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;创建或更新文章&quot;&quot;&quot;</span></span><br><span class=\"line\">        filename = <span class=\"string\">&quot;source/_posts/test-post.md&quot;</span></span><br><span class=\"line\">        content = <span class=\"string\">f&quot;&quot;&quot;---</span></span><br><span class=\"line\"><span class=\"string\">title: <span class=\"subst\">&#123;post_data[<span class=\"string\">&#x27;title&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">date: <span class=\"subst\">&#123;time.strftime(<span class=\"string\">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">---</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#123;post_data[<span class=\"string\">&#x27;content&#x27;</span>]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">        url = <span class=\"string\">f&quot;https://api.github.com/repos/<span class=\"subst\">&#123;self.owner&#125;</span>/<span class=\"subst\">&#123;self.repo&#125;</span>/contents/<span class=\"subst\">&#123;filename&#125;</span>&quot;</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;Authorization&#x27;</span>: <span class=\"string\">f&#x27;token <span class=\"subst\">&#123;self.token&#125;</span>&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;application/vnd.github.v3+json&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 获取现有文件的 SHA（如果存在）</span></span><br><span class=\"line\">        sha = <span class=\"variable language_\">self</span>.get_file_sha(filename)</span><br><span class=\"line\">        </span><br><span class=\"line\">        data = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">f&#x27;Update post: <span class=\"subst\">&#123;post_data[<span class=\"string\">&quot;title&quot;</span>]&#125;</span>&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;content&#x27;</span>: base64.b64encode(content.encode()).decode(),</span><br><span class=\"line\">            <span class=\"string\">&#x27;branch&#x27;</span>: <span class=\"variable language_\">self</span>.branch</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sha:</span><br><span class=\"line\">            data[<span class=\"string\">&#x27;sha&#x27;</span>] = sha</span><br><span class=\"line\">            </span><br><span class=\"line\">        request = Request(url, </span><br><span class=\"line\">                        data=json.dumps(data).encode(),</span><br><span class=\"line\">                        headers=headers,</span><br><span class=\"line\">                        method=<span class=\"string\">&#x27;PUT&#x27;</span>)</span><br><span class=\"line\">        response = urlopen(request)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.status == <span class=\"number\">200</span> <span class=\"keyword\">or</span> response.status == <span class=\"number\">201</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"环境变量配置\"><a href=\"#环境变量配置\" class=\"headerlink\" title=\"环境变量配置\"></a>环境变量配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># .env</span><br><span class=\"line\">WECHAT_TOKEN=your_wechat_token</span><br><span class=\"line\">GITHUB_TOKEN=your_github_token</span><br><span class=\"line\">GITHUB_REPO=your_repo_name</span><br><span class=\"line\">GITHUB_OWNER=your_github_username</span><br><span class=\"line\">GITHUB_BRANCH=master</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地开发\"><a href=\"#本地开发\" class=\"headerlink\" title=\"本地开发\"></a>本地开发</h2><ol>\n<li><p><strong>安装依赖</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>启动开发服务器</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vercel dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>测试微信验证</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成测试 URL</span></span><br><span class=\"line\">python tests/test_signature.py</span><br><span class=\"line\"><span class=\"comment\"># 使用生成的 URL 测试验证</span></span><br><span class=\"line\">curl <span class=\"string\">&quot;http://localhost:3000/api/webhook?signature=XXX&amp;timestamp=XXX&amp;nonce=XXX&amp;echostr=XXX&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>测试消息发送</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试发送消息</span></span><br><span class=\"line\">curl -X POST http://localhost:3000/api/webhook \\</span><br><span class=\"line\">  -H <span class=\"string\">&quot;Content-Type: application/xml&quot;</span> \\</span><br><span class=\"line\">  -d <span class=\"string\">&#x27;&lt;xml&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;ToUserName&gt;&lt;![CDATA[toUser]]&gt;&lt;/ToUserName&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;FromUserName&gt;&lt;![CDATA[fromUser]]&gt;&lt;/FromUserName&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;CreateTime&gt;1704891234&lt;/CreateTime&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;Content&gt;&lt;![CDATA[测试文章标题</span></span><br><span class=\"line\"><span class=\"string\">这是文章内容，</span></span><br><span class=\"line\"><span class=\"string\">可以包含多行</span></span><br><span class=\"line\"><span class=\"string\">支持换行符]]&gt;&lt;/Content&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;MsgId&gt;1234567890123456&lt;/MsgId&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/xml&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"部署到-Vercel\"><a href=\"#部署到-Vercel\" class=\"headerlink\" title=\"部署到 Vercel\"></a>部署到 Vercel</h2><ol>\n<li><p><strong>安装 Vercel CLI</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g vercel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>部署</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vercel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置环境变量</strong><br>在 Vercel 项目设置中配置相同的环境变量</p>\n</li>\n</ol>\n<h2 id=\"国内访问问题解决-todo\"><a href=\"#国内访问问题解决-todo\" class=\"headerlink\" title=\"国内访问问题解决 todo\"></a>国内访问问题解决 todo</h2><ol>\n<li>申请在国内可以访问的域名：regeorge.asia</li>\n<li>配置域名解析：使用cloudflare解析域名，并配置CNAME到vercel的域名</li>\n<li>配置vercel的域名：vercel.app -&gt; regeorge.asia</li>\n</ol>\n"},{"title":"球赛小程序权限管理方案","date":"2025-01-31T16:00:00.000Z","_content":"\n# 球赛小程序权限管理方案\n\n## 一、设计思路\n\n采用基于角色的权限管理（RBAC）方案，通过简单的实现满足系统基本需求。设计包含两个层面的权限控制：\n1. 系统级别：区分管理员和普通用户\n2. 赛事级别：通过关联表控制用户在具体赛事中的角色\n\n## 二、数据库设计\n\n### 1. 用户表添加角色字段\n```sql\nALTER TABLE user \nADD COLUMN role VARCHAR(20) DEFAULT 'USER' COMMENT '用户角色: ADMIN-管理员, USER-普通用户, REFEREE-裁判';\n```\n\n### 2. 赛事用户角色关联表\n```sql\nCREATE TABLE tournament_user_role (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    tournament_id BIGINT COMMENT '赛事ID',\n    user_id BIGINT COMMENT '用户ID',\n    role VARCHAR(20) COMMENT '赛事角色: ORGANIZER-组织者, REFEREE-裁判, PLAYER-选手',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE KEY `uk_tournament_user` (`tournament_id`, `user_id`),\n    FOREIGN KEY (tournament_id) REFERENCES tournament(id),\n    FOREIGN KEY (user_id) REFERENCES user(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='赛事用户角色关联表';\n```\n\n## 三、权限控制实现\n\n### 1. 后端实现示例\n\n```java\n// TournamentService.java\npublic class TournamentService {\n    // 检查用户是否有权限录入比赛结果\n    public boolean canInputMatchResult(Long userId, Long tournamentId) {\n        String role = tournamentUserRoleMapper.getUserRole(userId, tournamentId);\n        return \"ORGANIZER\".equals(role) || \"REFEREE\".equals(role);\n    }\n    \n    // 检查用户是否可以修改赛事信息\n    public boolean canEditTournament(Long userId, Long tournamentId) {\n        String role = tournamentUserRoleMapper.getUserRole(userId, tournamentId);\n        return \"ORGANIZER\".equals(role);\n    }\n}\n\n// TournamentController.java\n@RestController\n@RequestMapping(\"/api/tournament\")\npublic class TournamentController {\n    @PreAuthorize(\"hasRole('ADMIN') or @tournamentService.canEditTournament(#userId, #tournamentId)\")\n    @PutMapping(\"/{tournamentId}\")\n    public Result updateTournament(@PathVariable Long tournamentId, @RequestBody TournamentDTO dto) {\n        // 更新赛事信息\n        return Result.success();\n    }\n}\n```\n\n### 2. 前端实现示例\n\n```vue\n<!-- TournamentDetail.vue -->\n<template>\n  <div class=\"match-actions\">\n    <!-- 只有裁判和组织者可见的比分录入按钮 -->\n    <van-button \n      v-if=\"canInputScore\" \n      @click=\"showScoreInput\">\n      录入比分\n    </van-button>\n    \n    <!-- 只有组织者可见的编辑赛事按钮 -->\n    <van-button \n      v-if=\"isOrganizer\" \n      @click=\"editTournament\">\n      编辑赛事\n    </van-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    canInputScore() {\n      return ['ORGANIZER', 'REFEREE'].includes(this.userRole);\n    },\n    isOrganizer() {\n      return this.userRole === 'ORGANIZER';\n    }\n  }\n}\n</script>\n```\n\n## 四、方案优势\n\n1. **灵活性**\n   - 用户可在不同赛事中担任不同角色\n   - 普通用户可成为特定赛事的组织者\n   - 支持多重角色（如：可以在A赛事做裁判，B赛事做选手）\n\n2. **简单性**\n   - 系统级别仅需 ADMIN/USER 简单区分\n   - 赛事级别权限通过关联表灵活控制\n   - 避免复杂的权限系统设计\n\n3. **可扩展性**\n   - 可以方便地添加新的角色类型\n   - 可以增加更细粒度的权限控制\n   - 支持后期功能扩展\n\n## 五、实施步骤\n\n1. **第一阶段：基础权限**\n   - 实现系统级别 ADMIN/USER 区分\n   - 完成基础的登录注册功能\n   - 实现管理员专属功能\n\n2. **第二阶段：赛事权限**\n   - 创建赛事用户角色关联表\n   - 实现赛事相关的角色分配\n   - 开发赛事管理相关功能\n\n3. **第三阶段：功能完善**\n   - 添加更多角色类型\n   - 完善权限控制逻辑\n   - 优化用户体验\n\n## 六、注意事项\n\n1. **安全性**\n   - 所有权限验证都需要在后端实现\n   - 前端的权限控制只用于展示\n   - 重要操作需要二次确认\n\n2. **性能优化**\n   - 合理使用缓存减少数据库查询\n   - 权限验证结果可以适当缓存\n   - 避免频繁的角色检查\n\n3. **用户体验**\n   - 清晰的权限提示\n   - 友好的错误提示\n   - 合理的操作引导\n\n## 七、后续规划\n\n1. **功能扩展**\n   - 添加更多角色类型\n   - 实现更细粒度的权限控制\n   - 支持角色的批量管理\n\n2. **性能优化**\n   - 引入缓存机制\n   - 优化查询性能\n   - 提升响应速度\n\n3. **运营支持**\n   - 添加权限日志\n   - 提供权限统计\n   - 支持权限分析\n```\n","source":"_posts/26_球赛小程序权限控制方案.md","raw":"---\ntitle: 球赛小程序权限管理方案\ndate: 2025-02-01\ntags: \n  - 球赛小程序\n  - 项目文档\n---\n\n# 球赛小程序权限管理方案\n\n## 一、设计思路\n\n采用基于角色的权限管理（RBAC）方案，通过简单的实现满足系统基本需求。设计包含两个层面的权限控制：\n1. 系统级别：区分管理员和普通用户\n2. 赛事级别：通过关联表控制用户在具体赛事中的角色\n\n## 二、数据库设计\n\n### 1. 用户表添加角色字段\n```sql\nALTER TABLE user \nADD COLUMN role VARCHAR(20) DEFAULT 'USER' COMMENT '用户角色: ADMIN-管理员, USER-普通用户, REFEREE-裁判';\n```\n\n### 2. 赛事用户角色关联表\n```sql\nCREATE TABLE tournament_user_role (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    tournament_id BIGINT COMMENT '赛事ID',\n    user_id BIGINT COMMENT '用户ID',\n    role VARCHAR(20) COMMENT '赛事角色: ORGANIZER-组织者, REFEREE-裁判, PLAYER-选手',\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE KEY `uk_tournament_user` (`tournament_id`, `user_id`),\n    FOREIGN KEY (tournament_id) REFERENCES tournament(id),\n    FOREIGN KEY (user_id) REFERENCES user(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='赛事用户角色关联表';\n```\n\n## 三、权限控制实现\n\n### 1. 后端实现示例\n\n```java\n// TournamentService.java\npublic class TournamentService {\n    // 检查用户是否有权限录入比赛结果\n    public boolean canInputMatchResult(Long userId, Long tournamentId) {\n        String role = tournamentUserRoleMapper.getUserRole(userId, tournamentId);\n        return \"ORGANIZER\".equals(role) || \"REFEREE\".equals(role);\n    }\n    \n    // 检查用户是否可以修改赛事信息\n    public boolean canEditTournament(Long userId, Long tournamentId) {\n        String role = tournamentUserRoleMapper.getUserRole(userId, tournamentId);\n        return \"ORGANIZER\".equals(role);\n    }\n}\n\n// TournamentController.java\n@RestController\n@RequestMapping(\"/api/tournament\")\npublic class TournamentController {\n    @PreAuthorize(\"hasRole('ADMIN') or @tournamentService.canEditTournament(#userId, #tournamentId)\")\n    @PutMapping(\"/{tournamentId}\")\n    public Result updateTournament(@PathVariable Long tournamentId, @RequestBody TournamentDTO dto) {\n        // 更新赛事信息\n        return Result.success();\n    }\n}\n```\n\n### 2. 前端实现示例\n\n```vue\n<!-- TournamentDetail.vue -->\n<template>\n  <div class=\"match-actions\">\n    <!-- 只有裁判和组织者可见的比分录入按钮 -->\n    <van-button \n      v-if=\"canInputScore\" \n      @click=\"showScoreInput\">\n      录入比分\n    </van-button>\n    \n    <!-- 只有组织者可见的编辑赛事按钮 -->\n    <van-button \n      v-if=\"isOrganizer\" \n      @click=\"editTournament\">\n      编辑赛事\n    </van-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    canInputScore() {\n      return ['ORGANIZER', 'REFEREE'].includes(this.userRole);\n    },\n    isOrganizer() {\n      return this.userRole === 'ORGANIZER';\n    }\n  }\n}\n</script>\n```\n\n## 四、方案优势\n\n1. **灵活性**\n   - 用户可在不同赛事中担任不同角色\n   - 普通用户可成为特定赛事的组织者\n   - 支持多重角色（如：可以在A赛事做裁判，B赛事做选手）\n\n2. **简单性**\n   - 系统级别仅需 ADMIN/USER 简单区分\n   - 赛事级别权限通过关联表灵活控制\n   - 避免复杂的权限系统设计\n\n3. **可扩展性**\n   - 可以方便地添加新的角色类型\n   - 可以增加更细粒度的权限控制\n   - 支持后期功能扩展\n\n## 五、实施步骤\n\n1. **第一阶段：基础权限**\n   - 实现系统级别 ADMIN/USER 区分\n   - 完成基础的登录注册功能\n   - 实现管理员专属功能\n\n2. **第二阶段：赛事权限**\n   - 创建赛事用户角色关联表\n   - 实现赛事相关的角色分配\n   - 开发赛事管理相关功能\n\n3. **第三阶段：功能完善**\n   - 添加更多角色类型\n   - 完善权限控制逻辑\n   - 优化用户体验\n\n## 六、注意事项\n\n1. **安全性**\n   - 所有权限验证都需要在后端实现\n   - 前端的权限控制只用于展示\n   - 重要操作需要二次确认\n\n2. **性能优化**\n   - 合理使用缓存减少数据库查询\n   - 权限验证结果可以适当缓存\n   - 避免频繁的角色检查\n\n3. **用户体验**\n   - 清晰的权限提示\n   - 友好的错误提示\n   - 合理的操作引导\n\n## 七、后续规划\n\n1. **功能扩展**\n   - 添加更多角色类型\n   - 实现更细粒度的权限控制\n   - 支持角色的批量管理\n\n2. **性能优化**\n   - 引入缓存机制\n   - 优化查询性能\n   - 提升响应速度\n\n3. **运营支持**\n   - 添加权限日志\n   - 提供权限统计\n   - 支持权限分析\n```\n","slug":"26_球赛小程序权限控制方案","published":1,"updated":"2025-02-01T16:05:12.931Z","comments":1,"layout":"post","photos":[],"_id":"cm6ne6ilb0003052z6ey9h6d4","content":"<h1 id=\"球赛小程序权限管理方案\"><a href=\"#球赛小程序权限管理方案\" class=\"headerlink\" title=\"球赛小程序权限管理方案\"></a>球赛小程序权限管理方案</h1><h2 id=\"一、设计思路\"><a href=\"#一、设计思路\" class=\"headerlink\" title=\"一、设计思路\"></a>一、设计思路</h2><p>采用基于角色的权限管理（RBAC）方案，通过简单的实现满足系统基本需求。设计包含两个层面的权限控制：</p>\n<ol>\n<li>系统级别：区分管理员和普通用户</li>\n<li>赛事级别：通过关联表控制用户在具体赛事中的角色</li>\n</ol>\n<h2 id=\"二、数据库设计\"><a href=\"#二、数据库设计\" class=\"headerlink\" title=\"二、数据库设计\"></a>二、数据库设计</h2><h3 id=\"1-用户表添加角色字段\"><a href=\"#1-用户表添加角色字段\" class=\"headerlink\" title=\"1. 用户表添加角色字段\"></a>1. 用户表添加角色字段</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER TABLE</span> <span class=\"keyword\">user</span> </span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> role <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;USER&#x27;</span> COMMENT <span class=\"string\">&#x27;用户角色: ADMIN-管理员, USER-普通用户, REFEREE-裁判&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-赛事用户角色关联表\"><a href=\"#2-赛事用户角色关联表\" class=\"headerlink\" title=\"2. 赛事用户角色关联表\"></a>2. 赛事用户角色关联表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> tournament_user_role (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    tournament_id <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;赛事ID&#x27;</span>,</span><br><span class=\"line\">    user_id <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;用户ID&#x27;</span>,</span><br><span class=\"line\">    role <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) COMMENT <span class=\"string\">&#x27;赛事角色: ORGANIZER-组织者, REFEREE-裁判, PLAYER-选手&#x27;</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span>,</span><br><span class=\"line\">    <span class=\"keyword\">UNIQUE</span> KEY `uk_tournament_user` (`tournament_id`, `user_id`),</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN KEY</span> (tournament_id) <span class=\"keyword\">REFERENCES</span> tournament(id),</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN KEY</span> (user_id) <span class=\"keyword\">REFERENCES</span> <span class=\"keyword\">user</span>(id)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4 COMMENT<span class=\"operator\">=</span><span class=\"string\">&#x27;赛事用户角色关联表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、权限控制实现\"><a href=\"#三、权限控制实现\" class=\"headerlink\" title=\"三、权限控制实现\"></a>三、权限控制实现</h2><h3 id=\"1-后端实现示例\"><a href=\"#1-后端实现示例\" class=\"headerlink\" title=\"1. 后端实现示例\"></a>1. 后端实现示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// TournamentService.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TournamentService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查用户是否有权限录入比赛结果</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canInputMatchResult</span><span class=\"params\">(Long userId, Long tournamentId)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">role</span> <span class=\"operator\">=</span> tournamentUserRoleMapper.getUserRole(userId, tournamentId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;ORGANIZER&quot;</span>.equals(role) || <span class=\"string\">&quot;REFEREE&quot;</span>.equals(role);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 检查用户是否可以修改赛事信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canEditTournament</span><span class=\"params\">(Long userId, Long tournamentId)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">role</span> <span class=\"operator\">=</span> tournamentUserRoleMapper.getUserRole(userId, tournamentId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;ORGANIZER&quot;</span>.equals(role);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// TournamentController.java</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/tournament&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TournamentController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@PreAuthorize(&quot;hasRole(&#x27;ADMIN&#x27;) or @tournamentService.canEditTournament(#userId, #tournamentId)&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@PutMapping(&quot;/&#123;tournamentId&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">updateTournament</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Long tournamentId, <span class=\"meta\">@RequestBody</span> TournamentDTO dto)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 更新赛事信息</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-前端实现示例\"><a href=\"#2-前端实现示例\" class=\"headerlink\" title=\"2. 前端实现示例\"></a>2. 前端实现示例</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- TournamentDetail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;match-actions&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 只有裁判和组织者可见的比分录入按钮 --&gt;</span><br><span class=\"line\">    &lt;van-button </span><br><span class=\"line\">      v-if=&quot;canInputScore&quot; </span><br><span class=\"line\">      @click=&quot;showScoreInput&quot;&gt;</span><br><span class=\"line\">      录入比分</span><br><span class=\"line\">    &lt;/van-button&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!-- 只有组织者可见的编辑赛事按钮 --&gt;</span><br><span class=\"line\">    &lt;van-button </span><br><span class=\"line\">      v-if=&quot;isOrganizer&quot; </span><br><span class=\"line\">      @click=&quot;editTournament&quot;&gt;</span><br><span class=\"line\">      编辑赛事</span><br><span class=\"line\">    &lt;/van-button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    canInputScore() &#123;</span><br><span class=\"line\">      return [&#x27;ORGANIZER&#x27;, &#x27;REFEREE&#x27;].includes(this.userRole);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    isOrganizer() &#123;</span><br><span class=\"line\">      return this.userRole === &#x27;ORGANIZER&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、方案优势\"><a href=\"#四、方案优势\" class=\"headerlink\" title=\"四、方案优势\"></a>四、方案优势</h2><ol>\n<li><p><strong>灵活性</strong></p>\n<ul>\n<li>用户可在不同赛事中担任不同角色</li>\n<li>普通用户可成为特定赛事的组织者</li>\n<li>支持多重角色（如：可以在A赛事做裁判，B赛事做选手）</li>\n</ul>\n</li>\n<li><p><strong>简单性</strong></p>\n<ul>\n<li>系统级别仅需 ADMIN/USER 简单区分</li>\n<li>赛事级别权限通过关联表灵活控制</li>\n<li>避免复杂的权限系统设计</li>\n</ul>\n</li>\n<li><p><strong>可扩展性</strong></p>\n<ul>\n<li>可以方便地添加新的角色类型</li>\n<li>可以增加更细粒度的权限控制</li>\n<li>支持后期功能扩展</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"五、实施步骤\"><a href=\"#五、实施步骤\" class=\"headerlink\" title=\"五、实施步骤\"></a>五、实施步骤</h2><ol>\n<li><p><strong>第一阶段：基础权限</strong></p>\n<ul>\n<li>实现系统级别 ADMIN/USER 区分</li>\n<li>完成基础的登录注册功能</li>\n<li>实现管理员专属功能</li>\n</ul>\n</li>\n<li><p><strong>第二阶段：赛事权限</strong></p>\n<ul>\n<li>创建赛事用户角色关联表</li>\n<li>实现赛事相关的角色分配</li>\n<li>开发赛事管理相关功能</li>\n</ul>\n</li>\n<li><p><strong>第三阶段：功能完善</strong></p>\n<ul>\n<li>添加更多角色类型</li>\n<li>完善权限控制逻辑</li>\n<li>优化用户体验</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"六、注意事项\"><a href=\"#六、注意事项\" class=\"headerlink\" title=\"六、注意事项\"></a>六、注意事项</h2><ol>\n<li><p><strong>安全性</strong></p>\n<ul>\n<li>所有权限验证都需要在后端实现</li>\n<li>前端的权限控制只用于展示</li>\n<li>重要操作需要二次确认</li>\n</ul>\n</li>\n<li><p><strong>性能优化</strong></p>\n<ul>\n<li>合理使用缓存减少数据库查询</li>\n<li>权限验证结果可以适当缓存</li>\n<li>避免频繁的角色检查</li>\n</ul>\n</li>\n<li><p><strong>用户体验</strong></p>\n<ul>\n<li>清晰的权限提示</li>\n<li>友好的错误提示</li>\n<li>合理的操作引导</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"七、后续规划\"><a href=\"#七、后续规划\" class=\"headerlink\" title=\"七、后续规划\"></a>七、后续规划</h2><ol>\n<li><p><strong>功能扩展</strong></p>\n<ul>\n<li>添加更多角色类型</li>\n<li>实现更细粒度的权限控制</li>\n<li>支持角色的批量管理</li>\n</ul>\n</li>\n<li><p><strong>性能优化</strong></p>\n<ul>\n<li>引入缓存机制</li>\n<li>优化查询性能</li>\n<li>提升响应速度</li>\n</ul>\n</li>\n<li><p><strong>运营支持</strong></p>\n<ul>\n<li>添加权限日志</li>\n<li>提供权限统计</li>\n<li>支持权限分析<br><code>`</code></li>\n</ul>\n</li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"球赛小程序权限管理方案\"><a href=\"#球赛小程序权限管理方案\" class=\"headerlink\" title=\"球赛小程序权限管理方案\"></a>球赛小程序权限管理方案</h1><h2 id=\"一、设计思路\"><a href=\"#一、设计思路\" class=\"headerlink\" title=\"一、设计思路\"></a>一、设计思路</h2><p>采用基于角色的权限管理（RBAC）方案，通过简单的实现满足系统基本需求。设计包含两个层面的权限控制：</p>\n<ol>\n<li>系统级别：区分管理员和普通用户</li>\n<li>赛事级别：通过关联表控制用户在具体赛事中的角色</li>\n</ol>\n<h2 id=\"二、数据库设计\"><a href=\"#二、数据库设计\" class=\"headerlink\" title=\"二、数据库设计\"></a>二、数据库设计</h2><h3 id=\"1-用户表添加角色字段\"><a href=\"#1-用户表添加角色字段\" class=\"headerlink\" title=\"1. 用户表添加角色字段\"></a>1. 用户表添加角色字段</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER TABLE</span> <span class=\"keyword\">user</span> </span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> role <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;USER&#x27;</span> COMMENT <span class=\"string\">&#x27;用户角色: ADMIN-管理员, USER-普通用户, REFEREE-裁判&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-赛事用户角色关联表\"><a href=\"#2-赛事用户角色关联表\" class=\"headerlink\" title=\"2. 赛事用户角色关联表\"></a>2. 赛事用户角色关联表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> tournament_user_role (</span><br><span class=\"line\">    id <span class=\"type\">BIGINT</span> <span class=\"keyword\">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">    tournament_id <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;赛事ID&#x27;</span>,</span><br><span class=\"line\">    user_id <span class=\"type\">BIGINT</span> COMMENT <span class=\"string\">&#x27;用户ID&#x27;</span>,</span><br><span class=\"line\">    role <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) COMMENT <span class=\"string\">&#x27;赛事角色: ORGANIZER-组织者, REFEREE-裁判, PLAYER-选手&#x27;</span>,</span><br><span class=\"line\">    created_at DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span>,</span><br><span class=\"line\">    <span class=\"keyword\">UNIQUE</span> KEY `uk_tournament_user` (`tournament_id`, `user_id`),</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN KEY</span> (tournament_id) <span class=\"keyword\">REFERENCES</span> tournament(id),</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN KEY</span> (user_id) <span class=\"keyword\">REFERENCES</span> <span class=\"keyword\">user</span>(id)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4 COMMENT<span class=\"operator\">=</span><span class=\"string\">&#x27;赛事用户角色关联表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"三、权限控制实现\"><a href=\"#三、权限控制实现\" class=\"headerlink\" title=\"三、权限控制实现\"></a>三、权限控制实现</h2><h3 id=\"1-后端实现示例\"><a href=\"#1-后端实现示例\" class=\"headerlink\" title=\"1. 后端实现示例\"></a>1. 后端实现示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// TournamentService.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TournamentService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查用户是否有权限录入比赛结果</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canInputMatchResult</span><span class=\"params\">(Long userId, Long tournamentId)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">role</span> <span class=\"operator\">=</span> tournamentUserRoleMapper.getUserRole(userId, tournamentId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;ORGANIZER&quot;</span>.equals(role) || <span class=\"string\">&quot;REFEREE&quot;</span>.equals(role);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 检查用户是否可以修改赛事信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canEditTournament</span><span class=\"params\">(Long userId, Long tournamentId)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">role</span> <span class=\"operator\">=</span> tournamentUserRoleMapper.getUserRole(userId, tournamentId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;ORGANIZER&quot;</span>.equals(role);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// TournamentController.java</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api/tournament&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TournamentController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@PreAuthorize(&quot;hasRole(&#x27;ADMIN&#x27;) or @tournamentService.canEditTournament(#userId, #tournamentId)&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@PutMapping(&quot;/&#123;tournamentId&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">updateTournament</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Long tournamentId, <span class=\"meta\">@RequestBody</span> TournamentDTO dto)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 更新赛事信息</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-前端实现示例\"><a href=\"#2-前端实现示例\" class=\"headerlink\" title=\"2. 前端实现示例\"></a>2. 前端实现示例</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- TournamentDetail.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;match-actions&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 只有裁判和组织者可见的比分录入按钮 --&gt;</span><br><span class=\"line\">    &lt;van-button </span><br><span class=\"line\">      v-if=&quot;canInputScore&quot; </span><br><span class=\"line\">      @click=&quot;showScoreInput&quot;&gt;</span><br><span class=\"line\">      录入比分</span><br><span class=\"line\">    &lt;/van-button&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;!-- 只有组织者可见的编辑赛事按钮 --&gt;</span><br><span class=\"line\">    &lt;van-button </span><br><span class=\"line\">      v-if=&quot;isOrganizer&quot; </span><br><span class=\"line\">      @click=&quot;editTournament&quot;&gt;</span><br><span class=\"line\">      编辑赛事</span><br><span class=\"line\">    &lt;/van-button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    canInputScore() &#123;</span><br><span class=\"line\">      return [&#x27;ORGANIZER&#x27;, &#x27;REFEREE&#x27;].includes(this.userRole);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    isOrganizer() &#123;</span><br><span class=\"line\">      return this.userRole === &#x27;ORGANIZER&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、方案优势\"><a href=\"#四、方案优势\" class=\"headerlink\" title=\"四、方案优势\"></a>四、方案优势</h2><ol>\n<li><p><strong>灵活性</strong></p>\n<ul>\n<li>用户可在不同赛事中担任不同角色</li>\n<li>普通用户可成为特定赛事的组织者</li>\n<li>支持多重角色（如：可以在A赛事做裁判，B赛事做选手）</li>\n</ul>\n</li>\n<li><p><strong>简单性</strong></p>\n<ul>\n<li>系统级别仅需 ADMIN/USER 简单区分</li>\n<li>赛事级别权限通过关联表灵活控制</li>\n<li>避免复杂的权限系统设计</li>\n</ul>\n</li>\n<li><p><strong>可扩展性</strong></p>\n<ul>\n<li>可以方便地添加新的角色类型</li>\n<li>可以增加更细粒度的权限控制</li>\n<li>支持后期功能扩展</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"五、实施步骤\"><a href=\"#五、实施步骤\" class=\"headerlink\" title=\"五、实施步骤\"></a>五、实施步骤</h2><ol>\n<li><p><strong>第一阶段：基础权限</strong></p>\n<ul>\n<li>实现系统级别 ADMIN/USER 区分</li>\n<li>完成基础的登录注册功能</li>\n<li>实现管理员专属功能</li>\n</ul>\n</li>\n<li><p><strong>第二阶段：赛事权限</strong></p>\n<ul>\n<li>创建赛事用户角色关联表</li>\n<li>实现赛事相关的角色分配</li>\n<li>开发赛事管理相关功能</li>\n</ul>\n</li>\n<li><p><strong>第三阶段：功能完善</strong></p>\n<ul>\n<li>添加更多角色类型</li>\n<li>完善权限控制逻辑</li>\n<li>优化用户体验</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"六、注意事项\"><a href=\"#六、注意事项\" class=\"headerlink\" title=\"六、注意事项\"></a>六、注意事项</h2><ol>\n<li><p><strong>安全性</strong></p>\n<ul>\n<li>所有权限验证都需要在后端实现</li>\n<li>前端的权限控制只用于展示</li>\n<li>重要操作需要二次确认</li>\n</ul>\n</li>\n<li><p><strong>性能优化</strong></p>\n<ul>\n<li>合理使用缓存减少数据库查询</li>\n<li>权限验证结果可以适当缓存</li>\n<li>避免频繁的角色检查</li>\n</ul>\n</li>\n<li><p><strong>用户体验</strong></p>\n<ul>\n<li>清晰的权限提示</li>\n<li>友好的错误提示</li>\n<li>合理的操作引导</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"七、后续规划\"><a href=\"#七、后续规划\" class=\"headerlink\" title=\"七、后续规划\"></a>七、后续规划</h2><ol>\n<li><p><strong>功能扩展</strong></p>\n<ul>\n<li>添加更多角色类型</li>\n<li>实现更细粒度的权限控制</li>\n<li>支持角色的批量管理</li>\n</ul>\n</li>\n<li><p><strong>性能优化</strong></p>\n<ul>\n<li>引入缓存机制</li>\n<li>优化查询性能</li>\n<li>提升响应速度</li>\n</ul>\n</li>\n<li><p><strong>运营支持</strong></p>\n<ul>\n<li>添加权限日志</li>\n<li>提供权限统计</li>\n<li>支持权限分析<br><code>`</code></li>\n</ul>\n</li>\n</ol>\n"},{"title":"若依框架学习计划","date":"2025-01-27T16:00:00.000Z","_content":"\n# 若依(RuoYi)框架学习计划\n\n## 一、框架概述\n\nRuoYi是一个基于SpringBoot的权限管理系统，集成了常用的开发组件，适合用于快速开发企业级应用。\n\n主要版本：\n- RuoYi (传统版)\n- RuoYi-Vue (前后端分离版)\n- RuoYi-Cloud (微服务版)\n- RuoYi-App (移动端版)\n\n## 二、学习路线\n\n### 第一阶段：环境搭建与基础知识（1周）\n- [ ] 开发环境准备\n  - JDK 1.8+\n  - Maven 3.0+\n  - MySQL 5.7+\n  - Redis\n  - Node.js\n- [ ] 技术栈预习\n  - Spring Boot\n  - MyBatis\n  - Spring Security\n  - Vue (如选择前后端分离版)\n\n### 第二阶段：框架核心功能学习（2周）\n- [ ] 项目结构\n  - 模块划分\n  - 代码生成\n  - 通用工具类\n- [ ] 权限管理\n  - RBAC模型\n  - 菜单权限\n  - 数据权限\n- [ ] 常用组件\n  - 缓存处理\n  - 日志管理\n  - 任务调度\n  - 数据字典\n\n### 第三阶段：进阶功能学习（2周）\n- [ ] 前端框架\n  - Vue组件使用\n  - ElementUI集成\n  - 路由管理\n- [ ] 后端功能\n  - 接口设计\n  - 业务封装\n  - 异常处理\n- [ ] 系统监控\n  - 性能监控\n  - 操作日志\n  - 登录日志\n\n### 第四阶段：实战项目（3周）\n- [ ] 需求分析\n- [ ] 数据库设计\n- [ ] 功能开发\n- [ ] 测试部署\n\n## 三、实践思路\n\n### 1. 基础项目搭建\n```bash\n# 1. 获取项目代码\ngit clone https://gitee.com/y_project/RuoYi-Vue.git\n\n# 2. 初始化数据库\n# 导入项目sql文件\n\n# 3. 启动后端服务\ncd ruoyi-admin\nmvn spring-boot:run\n\n# 4. 启动前端项目\ncd ruoyi-ui\nnpm install\nnpm run dev\n```\n\n### 2. 代码生成实践\n1. 设计业务表结构\n2. 使用代码生成器生成CRUD代码\n3. 根据业务需求修改生成的代码\n4. 测试功能完整性\n\n### 3. 权限功能实践\n1. 创建角色与菜单\n2. 配置权限标识\n3. 实现数据权限控制\n4. 测试权限是否生效\n\n### 4. 业务功能开发流程\n```java\n// 1. 定义实体类\n@Data\npublic class Business {\n    private Long id;\n    private String name;\n    // ...其他属性\n}\n\n// 2. 创建Mapper接口\npublic interface BusinessMapper extends BaseMapper<Business> {\n    // 自定义查询方法\n}\n\n// 3. 实现Service层\n@Service\npublic class BusinessServiceImpl implements BusinessService {\n    // 业务逻辑实现\n}\n\n// 4. 控制器开发\n@RestController\n@RequestMapping(\"/business\")\npublic class BusinessController extends BaseController {\n    // 接口实现\n}\n```\n\n## 四、注意事项\n\n### 1. 学习建议\n- 先运行demo，熟悉整体功能\n- 研究代码生成的模板\n- 理解权限控制的实现\n- 掌握通用工具的使用\n\n### 2. 开发规范\n- 遵循阿里巴巴Java开发规范\n- 使用统一的命名规则\n- 保持注释完整性\n- 做好代码审查\n\n### 3. 进阶方向\n- 微服务架构转换\n- 容器化部署\n- 性能优化\n- 安全加固\n\n## 五、参考资源\n\n1. 官方文档\n- [若依官网](http://ruoyi.vip)\n- [在线文档](http://doc.ruoyi.vip)\n\n2. 代码仓库\n- [Gitee](https://gitee.com/y_project/RuoYi-Vue)\n- [Github](https://github.com/yangzongzhuan/RuoYi-Vue)\n\n3. 技术社区\n- 官方论坛\n- 项目Issues\n- 技术博客","source":"_posts/25_若依框架学习计划.md","raw":"---\ntitle: 若依框架学习计划\ndate: 2025-01-28\ntags:\n  - 学习计划\n  - Java\n---\n\n# 若依(RuoYi)框架学习计划\n\n## 一、框架概述\n\nRuoYi是一个基于SpringBoot的权限管理系统，集成了常用的开发组件，适合用于快速开发企业级应用。\n\n主要版本：\n- RuoYi (传统版)\n- RuoYi-Vue (前后端分离版)\n- RuoYi-Cloud (微服务版)\n- RuoYi-App (移动端版)\n\n## 二、学习路线\n\n### 第一阶段：环境搭建与基础知识（1周）\n- [ ] 开发环境准备\n  - JDK 1.8+\n  - Maven 3.0+\n  - MySQL 5.7+\n  - Redis\n  - Node.js\n- [ ] 技术栈预习\n  - Spring Boot\n  - MyBatis\n  - Spring Security\n  - Vue (如选择前后端分离版)\n\n### 第二阶段：框架核心功能学习（2周）\n- [ ] 项目结构\n  - 模块划分\n  - 代码生成\n  - 通用工具类\n- [ ] 权限管理\n  - RBAC模型\n  - 菜单权限\n  - 数据权限\n- [ ] 常用组件\n  - 缓存处理\n  - 日志管理\n  - 任务调度\n  - 数据字典\n\n### 第三阶段：进阶功能学习（2周）\n- [ ] 前端框架\n  - Vue组件使用\n  - ElementUI集成\n  - 路由管理\n- [ ] 后端功能\n  - 接口设计\n  - 业务封装\n  - 异常处理\n- [ ] 系统监控\n  - 性能监控\n  - 操作日志\n  - 登录日志\n\n### 第四阶段：实战项目（3周）\n- [ ] 需求分析\n- [ ] 数据库设计\n- [ ] 功能开发\n- [ ] 测试部署\n\n## 三、实践思路\n\n### 1. 基础项目搭建\n```bash\n# 1. 获取项目代码\ngit clone https://gitee.com/y_project/RuoYi-Vue.git\n\n# 2. 初始化数据库\n# 导入项目sql文件\n\n# 3. 启动后端服务\ncd ruoyi-admin\nmvn spring-boot:run\n\n# 4. 启动前端项目\ncd ruoyi-ui\nnpm install\nnpm run dev\n```\n\n### 2. 代码生成实践\n1. 设计业务表结构\n2. 使用代码生成器生成CRUD代码\n3. 根据业务需求修改生成的代码\n4. 测试功能完整性\n\n### 3. 权限功能实践\n1. 创建角色与菜单\n2. 配置权限标识\n3. 实现数据权限控制\n4. 测试权限是否生效\n\n### 4. 业务功能开发流程\n```java\n// 1. 定义实体类\n@Data\npublic class Business {\n    private Long id;\n    private String name;\n    // ...其他属性\n}\n\n// 2. 创建Mapper接口\npublic interface BusinessMapper extends BaseMapper<Business> {\n    // 自定义查询方法\n}\n\n// 3. 实现Service层\n@Service\npublic class BusinessServiceImpl implements BusinessService {\n    // 业务逻辑实现\n}\n\n// 4. 控制器开发\n@RestController\n@RequestMapping(\"/business\")\npublic class BusinessController extends BaseController {\n    // 接口实现\n}\n```\n\n## 四、注意事项\n\n### 1. 学习建议\n- 先运行demo，熟悉整体功能\n- 研究代码生成的模板\n- 理解权限控制的实现\n- 掌握通用工具的使用\n\n### 2. 开发规范\n- 遵循阿里巴巴Java开发规范\n- 使用统一的命名规则\n- 保持注释完整性\n- 做好代码审查\n\n### 3. 进阶方向\n- 微服务架构转换\n- 容器化部署\n- 性能优化\n- 安全加固\n\n## 五、参考资源\n\n1. 官方文档\n- [若依官网](http://ruoyi.vip)\n- [在线文档](http://doc.ruoyi.vip)\n\n2. 代码仓库\n- [Gitee](https://gitee.com/y_project/RuoYi-Vue)\n- [Github](https://github.com/yangzongzhuan/RuoYi-Vue)\n\n3. 技术社区\n- 官方论坛\n- 项目Issues\n- 技术博客","slug":"25_若依框架学习计划","published":1,"updated":"2025-01-28T10:51:25.654Z","comments":1,"layout":"post","photos":[],"_id":"cm6ne6ilb0004052zgjryh155","content":"<h1 id=\"若依-RuoYi-框架学习计划\"><a href=\"#若依-RuoYi-框架学习计划\" class=\"headerlink\" title=\"若依(RuoYi)框架学习计划\"></a>若依(RuoYi)框架学习计划</h1><h2 id=\"一、框架概述\"><a href=\"#一、框架概述\" class=\"headerlink\" title=\"一、框架概述\"></a>一、框架概述</h2><p>RuoYi是一个基于SpringBoot的权限管理系统，集成了常用的开发组件，适合用于快速开发企业级应用。</p>\n<p>主要版本：</p>\n<ul>\n<li>RuoYi (传统版)</li>\n<li>RuoYi-Vue (前后端分离版)</li>\n<li>RuoYi-Cloud (微服务版)</li>\n<li>RuoYi-App (移动端版)</li>\n</ul>\n<h2 id=\"二、学习路线\"><a href=\"#二、学习路线\" class=\"headerlink\" title=\"二、学习路线\"></a>二、学习路线</h2><h3 id=\"第一阶段：环境搭建与基础知识（1周）\"><a href=\"#第一阶段：环境搭建与基础知识（1周）\" class=\"headerlink\" title=\"第一阶段：环境搭建与基础知识（1周）\"></a>第一阶段：环境搭建与基础知识（1周）</h3><ul>\n<li>[ ] 开发环境准备<ul>\n<li>JDK 1.8+</li>\n<li>Maven 3.0+</li>\n<li>MySQL 5.7+</li>\n<li>Redis</li>\n<li>Node.js</li>\n</ul>\n</li>\n<li>[ ] 技术栈预习<ul>\n<li>Spring Boot</li>\n<li>MyBatis</li>\n<li>Spring Security</li>\n<li>Vue (如选择前后端分离版)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第二阶段：框架核心功能学习（2周）\"><a href=\"#第二阶段：框架核心功能学习（2周）\" class=\"headerlink\" title=\"第二阶段：框架核心功能学习（2周）\"></a>第二阶段：框架核心功能学习（2周）</h3><ul>\n<li>[ ] 项目结构<ul>\n<li>模块划分</li>\n<li>代码生成</li>\n<li>通用工具类</li>\n</ul>\n</li>\n<li>[ ] 权限管理<ul>\n<li>RBAC模型</li>\n<li>菜单权限</li>\n<li>数据权限</li>\n</ul>\n</li>\n<li>[ ] 常用组件<ul>\n<li>缓存处理</li>\n<li>日志管理</li>\n<li>任务调度</li>\n<li>数据字典</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第三阶段：进阶功能学习（2周）\"><a href=\"#第三阶段：进阶功能学习（2周）\" class=\"headerlink\" title=\"第三阶段：进阶功能学习（2周）\"></a>第三阶段：进阶功能学习（2周）</h3><ul>\n<li>[ ] 前端框架<ul>\n<li>Vue组件使用</li>\n<li>ElementUI集成</li>\n<li>路由管理</li>\n</ul>\n</li>\n<li>[ ] 后端功能<ul>\n<li>接口设计</li>\n<li>业务封装</li>\n<li>异常处理</li>\n</ul>\n</li>\n<li>[ ] 系统监控<ul>\n<li>性能监控</li>\n<li>操作日志</li>\n<li>登录日志</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第四阶段：实战项目（3周）\"><a href=\"#第四阶段：实战项目（3周）\" class=\"headerlink\" title=\"第四阶段：实战项目（3周）\"></a>第四阶段：实战项目（3周）</h3><ul>\n<li>[ ] 需求分析</li>\n<li>[ ] 数据库设计</li>\n<li>[ ] 功能开发</li>\n<li>[ ] 测试部署</li>\n</ul>\n<h2 id=\"三、实践思路\"><a href=\"#三、实践思路\" class=\"headerlink\" title=\"三、实践思路\"></a>三、实践思路</h2><h3 id=\"1-基础项目搭建\"><a href=\"#1-基础项目搭建\" class=\"headerlink\" title=\"1. 基础项目搭建\"></a>1. 基础项目搭建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 获取项目代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/y_project/RuoYi-Vue.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 初始化数据库</span></span><br><span class=\"line\"><span class=\"comment\"># 导入项目sql文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 启动后端服务</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ruoyi-admin</span><br><span class=\"line\">mvn spring-boot:run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 启动前端项目</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ruoyi-ui</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-代码生成实践\"><a href=\"#2-代码生成实践\" class=\"headerlink\" title=\"2. 代码生成实践\"></a>2. 代码生成实践</h3><ol>\n<li>设计业务表结构</li>\n<li>使用代码生成器生成CRUD代码</li>\n<li>根据业务需求修改生成的代码</li>\n<li>测试功能完整性</li>\n</ol>\n<h3 id=\"3-权限功能实践\"><a href=\"#3-权限功能实践\" class=\"headerlink\" title=\"3. 权限功能实践\"></a>3. 权限功能实践</h3><ol>\n<li>创建角色与菜单</li>\n<li>配置权限标识</li>\n<li>实现数据权限控制</li>\n<li>测试权限是否生效</li>\n</ol>\n<h3 id=\"4-业务功能开发流程\"><a href=\"#4-业务功能开发流程\" class=\"headerlink\" title=\"4. 业务功能开发流程\"></a>4. 业务功能开发流程</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 定义实体类</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Business</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 创建Mapper接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BusinessMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Business&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 自定义查询方法</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. 实现Service层</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BusinessServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BusinessService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 业务逻辑实现</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4. 控制器开发</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/business&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BusinessController</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseController</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接口实现</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、注意事项\"><a href=\"#四、注意事项\" class=\"headerlink\" title=\"四、注意事项\"></a>四、注意事项</h2><h3 id=\"1-学习建议\"><a href=\"#1-学习建议\" class=\"headerlink\" title=\"1. 学习建议\"></a>1. 学习建议</h3><ul>\n<li>先运行demo，熟悉整体功能</li>\n<li>研究代码生成的模板</li>\n<li>理解权限控制的实现</li>\n<li>掌握通用工具的使用</li>\n</ul>\n<h3 id=\"2-开发规范\"><a href=\"#2-开发规范\" class=\"headerlink\" title=\"2. 开发规范\"></a>2. 开发规范</h3><ul>\n<li>遵循阿里巴巴Java开发规范</li>\n<li>使用统一的命名规则</li>\n<li>保持注释完整性</li>\n<li>做好代码审查</li>\n</ul>\n<h3 id=\"3-进阶方向\"><a href=\"#3-进阶方向\" class=\"headerlink\" title=\"3. 进阶方向\"></a>3. 进阶方向</h3><ul>\n<li>微服务架构转换</li>\n<li>容器化部署</li>\n<li>性能优化</li>\n<li>安全加固</li>\n</ul>\n<h2 id=\"五、参考资源\"><a href=\"#五、参考资源\" class=\"headerlink\" title=\"五、参考资源\"></a>五、参考资源</h2><ol>\n<li>官方文档</li>\n</ol>\n<ul>\n<li><a href=\"http://ruoyi.vip\">若依官网</a></li>\n<li><a href=\"http://doc.ruoyi.vip\">在线文档</a></li>\n</ul>\n<ol start=\"2\">\n<li>代码仓库</li>\n</ol>\n<ul>\n<li><a href=\"https://gitee.com/y_project/RuoYi-Vue\">Gitee</a></li>\n<li><a href=\"https://github.com/yangzongzhuan/RuoYi-Vue\">Github</a></li>\n</ul>\n<ol start=\"3\">\n<li>技术社区</li>\n</ol>\n<ul>\n<li>官方论坛</li>\n<li>项目Issues</li>\n<li>技术博客</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"若依-RuoYi-框架学习计划\"><a href=\"#若依-RuoYi-框架学习计划\" class=\"headerlink\" title=\"若依(RuoYi)框架学习计划\"></a>若依(RuoYi)框架学习计划</h1><h2 id=\"一、框架概述\"><a href=\"#一、框架概述\" class=\"headerlink\" title=\"一、框架概述\"></a>一、框架概述</h2><p>RuoYi是一个基于SpringBoot的权限管理系统，集成了常用的开发组件，适合用于快速开发企业级应用。</p>\n<p>主要版本：</p>\n<ul>\n<li>RuoYi (传统版)</li>\n<li>RuoYi-Vue (前后端分离版)</li>\n<li>RuoYi-Cloud (微服务版)</li>\n<li>RuoYi-App (移动端版)</li>\n</ul>\n<h2 id=\"二、学习路线\"><a href=\"#二、学习路线\" class=\"headerlink\" title=\"二、学习路线\"></a>二、学习路线</h2><h3 id=\"第一阶段：环境搭建与基础知识（1周）\"><a href=\"#第一阶段：环境搭建与基础知识（1周）\" class=\"headerlink\" title=\"第一阶段：环境搭建与基础知识（1周）\"></a>第一阶段：环境搭建与基础知识（1周）</h3><ul>\n<li>[ ] 开发环境准备<ul>\n<li>JDK 1.8+</li>\n<li>Maven 3.0+</li>\n<li>MySQL 5.7+</li>\n<li>Redis</li>\n<li>Node.js</li>\n</ul>\n</li>\n<li>[ ] 技术栈预习<ul>\n<li>Spring Boot</li>\n<li>MyBatis</li>\n<li>Spring Security</li>\n<li>Vue (如选择前后端分离版)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第二阶段：框架核心功能学习（2周）\"><a href=\"#第二阶段：框架核心功能学习（2周）\" class=\"headerlink\" title=\"第二阶段：框架核心功能学习（2周）\"></a>第二阶段：框架核心功能学习（2周）</h3><ul>\n<li>[ ] 项目结构<ul>\n<li>模块划分</li>\n<li>代码生成</li>\n<li>通用工具类</li>\n</ul>\n</li>\n<li>[ ] 权限管理<ul>\n<li>RBAC模型</li>\n<li>菜单权限</li>\n<li>数据权限</li>\n</ul>\n</li>\n<li>[ ] 常用组件<ul>\n<li>缓存处理</li>\n<li>日志管理</li>\n<li>任务调度</li>\n<li>数据字典</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第三阶段：进阶功能学习（2周）\"><a href=\"#第三阶段：进阶功能学习（2周）\" class=\"headerlink\" title=\"第三阶段：进阶功能学习（2周）\"></a>第三阶段：进阶功能学习（2周）</h3><ul>\n<li>[ ] 前端框架<ul>\n<li>Vue组件使用</li>\n<li>ElementUI集成</li>\n<li>路由管理</li>\n</ul>\n</li>\n<li>[ ] 后端功能<ul>\n<li>接口设计</li>\n<li>业务封装</li>\n<li>异常处理</li>\n</ul>\n</li>\n<li>[ ] 系统监控<ul>\n<li>性能监控</li>\n<li>操作日志</li>\n<li>登录日志</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"第四阶段：实战项目（3周）\"><a href=\"#第四阶段：实战项目（3周）\" class=\"headerlink\" title=\"第四阶段：实战项目（3周）\"></a>第四阶段：实战项目（3周）</h3><ul>\n<li>[ ] 需求分析</li>\n<li>[ ] 数据库设计</li>\n<li>[ ] 功能开发</li>\n<li>[ ] 测试部署</li>\n</ul>\n<h2 id=\"三、实践思路\"><a href=\"#三、实践思路\" class=\"headerlink\" title=\"三、实践思路\"></a>三、实践思路</h2><h3 id=\"1-基础项目搭建\"><a href=\"#1-基础项目搭建\" class=\"headerlink\" title=\"1. 基础项目搭建\"></a>1. 基础项目搭建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 获取项目代码</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://gitee.com/y_project/RuoYi-Vue.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 初始化数据库</span></span><br><span class=\"line\"><span class=\"comment\"># 导入项目sql文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 启动后端服务</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ruoyi-admin</span><br><span class=\"line\">mvn spring-boot:run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 启动前端项目</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ruoyi-ui</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-代码生成实践\"><a href=\"#2-代码生成实践\" class=\"headerlink\" title=\"2. 代码生成实践\"></a>2. 代码生成实践</h3><ol>\n<li>设计业务表结构</li>\n<li>使用代码生成器生成CRUD代码</li>\n<li>根据业务需求修改生成的代码</li>\n<li>测试功能完整性</li>\n</ol>\n<h3 id=\"3-权限功能实践\"><a href=\"#3-权限功能实践\" class=\"headerlink\" title=\"3. 权限功能实践\"></a>3. 权限功能实践</h3><ol>\n<li>创建角色与菜单</li>\n<li>配置权限标识</li>\n<li>实现数据权限控制</li>\n<li>测试权限是否生效</li>\n</ol>\n<h3 id=\"4-业务功能开发流程\"><a href=\"#4-业务功能开发流程\" class=\"headerlink\" title=\"4. 业务功能开发流程\"></a>4. 业务功能开发流程</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 定义实体类</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Business</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"comment\">// ...其他属性</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 创建Mapper接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BusinessMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Business&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 自定义查询方法</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. 实现Service层</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BusinessServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BusinessService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 业务逻辑实现</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4. 控制器开发</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/business&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BusinessController</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseController</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接口实现</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、注意事项\"><a href=\"#四、注意事项\" class=\"headerlink\" title=\"四、注意事项\"></a>四、注意事项</h2><h3 id=\"1-学习建议\"><a href=\"#1-学习建议\" class=\"headerlink\" title=\"1. 学习建议\"></a>1. 学习建议</h3><ul>\n<li>先运行demo，熟悉整体功能</li>\n<li>研究代码生成的模板</li>\n<li>理解权限控制的实现</li>\n<li>掌握通用工具的使用</li>\n</ul>\n<h3 id=\"2-开发规范\"><a href=\"#2-开发规范\" class=\"headerlink\" title=\"2. 开发规范\"></a>2. 开发规范</h3><ul>\n<li>遵循阿里巴巴Java开发规范</li>\n<li>使用统一的命名规则</li>\n<li>保持注释完整性</li>\n<li>做好代码审查</li>\n</ul>\n<h3 id=\"3-进阶方向\"><a href=\"#3-进阶方向\" class=\"headerlink\" title=\"3. 进阶方向\"></a>3. 进阶方向</h3><ul>\n<li>微服务架构转换</li>\n<li>容器化部署</li>\n<li>性能优化</li>\n<li>安全加固</li>\n</ul>\n<h2 id=\"五、参考资源\"><a href=\"#五、参考资源\" class=\"headerlink\" title=\"五、参考资源\"></a>五、参考资源</h2><ol>\n<li>官方文档</li>\n</ol>\n<ul>\n<li><a href=\"http://ruoyi.vip\">若依官网</a></li>\n<li><a href=\"http://doc.ruoyi.vip\">在线文档</a></li>\n</ul>\n<ol start=\"2\">\n<li>代码仓库</li>\n</ol>\n<ul>\n<li><a href=\"https://gitee.com/y_project/RuoYi-Vue\">Gitee</a></li>\n<li><a href=\"https://github.com/yangzongzhuan/RuoYi-Vue\">Github</a></li>\n</ul>\n<ol start=\"3\">\n<li>技术社区</li>\n</ol>\n<ul>\n<li>官方论坛</li>\n<li>项目Issues</li>\n<li>技术博客</li>\n</ul>\n"},{"title":"前后端交互流程说明","date":"2025-02-01T16:00:00.000Z","_content":"\n# 前后端交互流程说明\n\n## 一、Vue 项目目录结构\n\n```\nsports-h5/\n├── public/                 # 静态资源目录\n│   └── index.html         # HTML 模板\n├── src/                   # 源代码目录\n│   ├── api/              # API 接口定义\n│   │   ├── user.js       # 用户相关接口\n│   │   └── points.js     # 积分相关接口\n│   ├── components/       # 公共组件\n│   │   └── layout/      # 布局组件\n│   ├── views/           # 页面组件\n│   │   ├── user/        # 用户相关页面\n│   │   ├── games/       # 赛事相关页面\n│   │   └── points/      # 积分相关页面\n│   ├── router/          # 路由配置\n│   │   └── index.js     # 路由定义\n│   ├── utils/           # 工具函数\n│   │   └── request.js   # Axios 请求封装\n│   ├── App.vue          # 根组件\n│   └── main.js          # 入口文件\n├── package.json          # 项目配置\n└── vue.config.js        # Vue CLI 配置\n```\n\n## 二、请求流程时序图\n\n```mermaid\nsequenceDiagram\n    participant Browser as 浏览器\n    participant Vue as Vue组件\n    participant API as API层\n    participant Axios as Axios\n    participant DevServer as 开发服务器(8081)\n    participant Backend as 后端服务(8088)\n    \n    Note over Browser,Backend: 以用户登录为例\n    \n    Browser->>Vue: 点击登录按钮\n    Note over Vue: LoginForm.vue\n    \n    Vue->>API: login(username, password)\n    Note over API: api/user.js\n    \n    API->>Axios: request('/api/login')\n    Note over Axios: utils/request.js\n    \n    Axios->>DevServer: POST http://localhost:8081/api/login\n    Note over DevServer: vue.config.js 配置代理\n    \n    DevServer->>Backend: 转发到 http://localhost:8088/api/login\n    Note over Backend: UserController.java\n    \n    Backend-->>DevServer: 返回token等数据\n    Note over Backend: {token: 'xxx', userInfo: {...}}\n    \n    DevServer-->>Axios: 代理返回数据\n    \n    Axios-->>API: 响应数据\n    \n    API-->>Vue: 处理响应\n    Note over Vue: store.commit('SET_TOKEN')\n    \n    Vue-->>Browser: 跳转首页\n    Note over Vue: router.push('/')\n```\n\n### 代理配置说明 (vue.config.js)\n```javascript\nmodule.exports = {\n  devServer: {\n    port: 8081,  // 前端开发服务器端口\n    proxy: {\n      '/api': {  // 匹配所有 /api 开头的请求\n        target: 'http://localhost:8088',  // 后端服务器地址\n        changeOrigin: true,  // 支持跨域\n        // pathRewrite: {  // 如果需要去掉 /api 前缀，可以启用这个配置\n        //   '^/api': ''\n        // }\n      }\n    }\n  }\n}\n```\n\n### 请求流程说明\n\n1. **前端开发环境 (8081端口)**\n   - 运行 `npm run serve` 启动开发服务器\n   - 提供热更新功能\n   - 处理静态资源\n   - 配置代理规则\n\n2. **代理转发过程**\n   - 前端请求 `http://localhost:8081/api/xxx`\n   - 开发服务器匹配到 `/api` 前缀\n   - 根据代理配置转发到 `http://localhost:8088/api/xxx`\n   - 后端处理请求并返回数据\n   - 开发服务器将响应转发回前端\n\n3. **后端服务 (8088端口)**\n   - 运行 SpringBoot 应用\n   - 处理 API 请求\n   - 返回数据给代理服务器\n\n4. **跨域处理**\n   - 前端配置代理解决开发环境跨域\n   - 生产环境通常由 nginx 处理跨域\n   - 后端也可以配置 CORS 支持跨域\n\n## 三、关键代码示例\n\n### 1. 前端组件 (LoginForm.vue)\n```vue\n<template>\n  <van-form @submit=\"onSubmit\">\n    <van-field\n      v-model=\"username\"\n      name=\"username\"\n      label=\"用户名\"\n      placeholder=\"请输入用户名\"\n      :rules=\"[{ required: true }]\"\n    />\n    <van-field\n      v-model=\"password\"\n      type=\"password\"\n      name=\"password\"\n      label=\"密码\"\n      placeholder=\"请输入密码\"\n      :rules=\"[{ required: true }]\"\n    />\n    <div style=\"margin: 16px;\">\n      <van-button round block type=\"primary\" native-type=\"submit\">\n        提交\n      </van-button>\n    </div>\n  </van-form>\n</template>\n\n<script>\nimport { login } from '@/api/user'\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    }\n  },\n  methods: {\n    async onSubmit() {\n      try {\n        const res = await login({\n          username: this.username,\n          password: this.password\n        })\n        // 存储token\n        this.$store.commit('SET_TOKEN', res.data.token)\n        // 跳转首页\n        this.$router.push('/')\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n}\n</script>\n```\n\n### 2. API封装 (api/user.js)\n```javascript\nimport request from '@/utils/request'\n\nexport function login(data) {\n  return request({\n    url: '/api/login',\n    method: 'post',\n    data\n  })\n}\n\nexport function getUserInfo() {\n  return request({\n    url: '/api/user/info',\n    method: 'get'\n  })\n}\n```\n\n### 3. 请求工具 (utils/request.js)\n```javascript\nimport axios from 'axios'\nimport store from '@/store'\nimport { Toast } from 'vant'\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  timeout: 5000\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    const res = response.data\n    if (res.code !== 200) {\n      Toast.fail(res.message)\n      return Promise.reject(res.message)\n    }\n    return res\n  },\n  error => {\n    Toast.fail(error.message)\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n```\n\n### 4. 后端控制器 (UserController.java)\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class UserController {\n    \n    @PostMapping(\"/login\")\n    public Result login(@RequestBody LoginRequest request) {\n        // 验证用户名密码\n        String token = userService.login(request);\n        // 返回token和用户信息\n        return Result.success(new HashMap<String, Object>() {{\n            put(\"token\", token);\n            put(\"userInfo\", userService.getUserInfo());\n        }});\n    }\n    \n    @GetMapping(\"/user/info\")\n    public Result getUserInfo() {\n        return Result.success(userService.getUserInfo());\n    }\n}\n```\n\n### 5. 服务实现 (UserServiceImpl.java)\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n    \n    @Override\n    public String login(LoginRequest request) {\n        // 验证用户名密码\n        User user = userMapper.findByUsername(request.getUsername());\n        if (user == null || !passwordMatch(request.getPassword(), user.getPassword())) {\n            throw new BusinessException(\"用户名或密码错误\");\n        }\n        // 生成token\n        return JwtUtil.generateToken(user.getId());\n    }\n    \n    @Override\n    public UserInfo getUserInfo() {\n        // 获取当前用户信息\n        Long userId = SecurityUtils.getUserId();\n        return userMapper.findUserInfoById(userId);\n    }\n}\n```\n\n## 四、请求示例流程\n\n以用户更新为例：\n\n1. **视图层触发**\n```vue\n<!-- UserEdit.vue -->\n<template>\n  <van-button @click=\"handleSave\">保存</van-button>\n</template>\n\n<script>\nimport { updateUser } from '@/api/user'\n\nexport default {\n  methods: {\n    async handleSave() {\n      const res = await updateUser(this.formData)\n      // 处理响应\n    }\n  }\n}\n</script>\n```\n\n2. **API 层处理**\n```javascript\n// api/user.js\nexport function updateUser(data) {\n  return request({\n    url: '/user/update',\n    method: 'post',\n    data\n  })\n}\n```\n\n3. **请求转发**\n- 前端发起请求：`http://localhost:8081/api/user/update`\n- 开发服务器代理到：`http://localhost:8088/api/user/update`\n- 后端处理请求并返回数据\n- 数据通过代理返回给前端\n- 组件接收数据并更新视图\n\n## 五、端口转发说明\n\n1. **前端开发服务器 (8081)**\n- `npm run serve` 启动开发服务器\n- 提供热更新\n- 处理静态资源\n- 配置代理规则\n\n2. **后端服务器 (8088)**\n- 提供 API 服务\n- 处理业务逻辑\n- 操作数据库\n- 返回数据\n\n3. **代理规则**\n- 所有 `/api` 开头的请求都会被代理\n- 自动转发到后端服务器\n- 处理跨域问题\n- 保持会话状态\n\n## 六、数据渲染流程\n\n1. **组件初始化**\n```javascript\nsetup() {\n  const formData = ref({})\n  \n  onMounted(async () => {\n    const res = await getUserInfo()\n    formData.value = res.data\n  })\n  \n  return { formData }\n}\n```\n\n2. **模板渲染**\n```vue\n<template>\n  <div>{{ formData.nickname }}</div>\n</template>\n```\n\n3. **响应式更新**\n- 数据变化自动触发视图更新\n- 使用 `v-model` 实现双向绑定\n- 计算属性处理派生状态\n- 监听器处理副作用 ","source":"_posts/27_前后端交互流程说明.md","raw":"---\ntitle: 前后端交互流程说明\ndate: 2025-02-02\ntags: \n  - 项目文档\n---\n\n# 前后端交互流程说明\n\n## 一、Vue 项目目录结构\n\n```\nsports-h5/\n├── public/                 # 静态资源目录\n│   └── index.html         # HTML 模板\n├── src/                   # 源代码目录\n│   ├── api/              # API 接口定义\n│   │   ├── user.js       # 用户相关接口\n│   │   └── points.js     # 积分相关接口\n│   ├── components/       # 公共组件\n│   │   └── layout/      # 布局组件\n│   ├── views/           # 页面组件\n│   │   ├── user/        # 用户相关页面\n│   │   ├── games/       # 赛事相关页面\n│   │   └── points/      # 积分相关页面\n│   ├── router/          # 路由配置\n│   │   └── index.js     # 路由定义\n│   ├── utils/           # 工具函数\n│   │   └── request.js   # Axios 请求封装\n│   ├── App.vue          # 根组件\n│   └── main.js          # 入口文件\n├── package.json          # 项目配置\n└── vue.config.js        # Vue CLI 配置\n```\n\n## 二、请求流程时序图\n\n```mermaid\nsequenceDiagram\n    participant Browser as 浏览器\n    participant Vue as Vue组件\n    participant API as API层\n    participant Axios as Axios\n    participant DevServer as 开发服务器(8081)\n    participant Backend as 后端服务(8088)\n    \n    Note over Browser,Backend: 以用户登录为例\n    \n    Browser->>Vue: 点击登录按钮\n    Note over Vue: LoginForm.vue\n    \n    Vue->>API: login(username, password)\n    Note over API: api/user.js\n    \n    API->>Axios: request('/api/login')\n    Note over Axios: utils/request.js\n    \n    Axios->>DevServer: POST http://localhost:8081/api/login\n    Note over DevServer: vue.config.js 配置代理\n    \n    DevServer->>Backend: 转发到 http://localhost:8088/api/login\n    Note over Backend: UserController.java\n    \n    Backend-->>DevServer: 返回token等数据\n    Note over Backend: {token: 'xxx', userInfo: {...}}\n    \n    DevServer-->>Axios: 代理返回数据\n    \n    Axios-->>API: 响应数据\n    \n    API-->>Vue: 处理响应\n    Note over Vue: store.commit('SET_TOKEN')\n    \n    Vue-->>Browser: 跳转首页\n    Note over Vue: router.push('/')\n```\n\n### 代理配置说明 (vue.config.js)\n```javascript\nmodule.exports = {\n  devServer: {\n    port: 8081,  // 前端开发服务器端口\n    proxy: {\n      '/api': {  // 匹配所有 /api 开头的请求\n        target: 'http://localhost:8088',  // 后端服务器地址\n        changeOrigin: true,  // 支持跨域\n        // pathRewrite: {  // 如果需要去掉 /api 前缀，可以启用这个配置\n        //   '^/api': ''\n        // }\n      }\n    }\n  }\n}\n```\n\n### 请求流程说明\n\n1. **前端开发环境 (8081端口)**\n   - 运行 `npm run serve` 启动开发服务器\n   - 提供热更新功能\n   - 处理静态资源\n   - 配置代理规则\n\n2. **代理转发过程**\n   - 前端请求 `http://localhost:8081/api/xxx`\n   - 开发服务器匹配到 `/api` 前缀\n   - 根据代理配置转发到 `http://localhost:8088/api/xxx`\n   - 后端处理请求并返回数据\n   - 开发服务器将响应转发回前端\n\n3. **后端服务 (8088端口)**\n   - 运行 SpringBoot 应用\n   - 处理 API 请求\n   - 返回数据给代理服务器\n\n4. **跨域处理**\n   - 前端配置代理解决开发环境跨域\n   - 生产环境通常由 nginx 处理跨域\n   - 后端也可以配置 CORS 支持跨域\n\n## 三、关键代码示例\n\n### 1. 前端组件 (LoginForm.vue)\n```vue\n<template>\n  <van-form @submit=\"onSubmit\">\n    <van-field\n      v-model=\"username\"\n      name=\"username\"\n      label=\"用户名\"\n      placeholder=\"请输入用户名\"\n      :rules=\"[{ required: true }]\"\n    />\n    <van-field\n      v-model=\"password\"\n      type=\"password\"\n      name=\"password\"\n      label=\"密码\"\n      placeholder=\"请输入密码\"\n      :rules=\"[{ required: true }]\"\n    />\n    <div style=\"margin: 16px;\">\n      <van-button round block type=\"primary\" native-type=\"submit\">\n        提交\n      </van-button>\n    </div>\n  </van-form>\n</template>\n\n<script>\nimport { login } from '@/api/user'\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    }\n  },\n  methods: {\n    async onSubmit() {\n      try {\n        const res = await login({\n          username: this.username,\n          password: this.password\n        })\n        // 存储token\n        this.$store.commit('SET_TOKEN', res.data.token)\n        // 跳转首页\n        this.$router.push('/')\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n}\n</script>\n```\n\n### 2. API封装 (api/user.js)\n```javascript\nimport request from '@/utils/request'\n\nexport function login(data) {\n  return request({\n    url: '/api/login',\n    method: 'post',\n    data\n  })\n}\n\nexport function getUserInfo() {\n  return request({\n    url: '/api/user/info',\n    method: 'get'\n  })\n}\n```\n\n### 3. 请求工具 (utils/request.js)\n```javascript\nimport axios from 'axios'\nimport store from '@/store'\nimport { Toast } from 'vant'\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  timeout: 5000\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    const res = response.data\n    if (res.code !== 200) {\n      Toast.fail(res.message)\n      return Promise.reject(res.message)\n    }\n    return res\n  },\n  error => {\n    Toast.fail(error.message)\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n```\n\n### 4. 后端控制器 (UserController.java)\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class UserController {\n    \n    @PostMapping(\"/login\")\n    public Result login(@RequestBody LoginRequest request) {\n        // 验证用户名密码\n        String token = userService.login(request);\n        // 返回token和用户信息\n        return Result.success(new HashMap<String, Object>() {{\n            put(\"token\", token);\n            put(\"userInfo\", userService.getUserInfo());\n        }});\n    }\n    \n    @GetMapping(\"/user/info\")\n    public Result getUserInfo() {\n        return Result.success(userService.getUserInfo());\n    }\n}\n```\n\n### 5. 服务实现 (UserServiceImpl.java)\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n    \n    @Override\n    public String login(LoginRequest request) {\n        // 验证用户名密码\n        User user = userMapper.findByUsername(request.getUsername());\n        if (user == null || !passwordMatch(request.getPassword(), user.getPassword())) {\n            throw new BusinessException(\"用户名或密码错误\");\n        }\n        // 生成token\n        return JwtUtil.generateToken(user.getId());\n    }\n    \n    @Override\n    public UserInfo getUserInfo() {\n        // 获取当前用户信息\n        Long userId = SecurityUtils.getUserId();\n        return userMapper.findUserInfoById(userId);\n    }\n}\n```\n\n## 四、请求示例流程\n\n以用户更新为例：\n\n1. **视图层触发**\n```vue\n<!-- UserEdit.vue -->\n<template>\n  <van-button @click=\"handleSave\">保存</van-button>\n</template>\n\n<script>\nimport { updateUser } from '@/api/user'\n\nexport default {\n  methods: {\n    async handleSave() {\n      const res = await updateUser(this.formData)\n      // 处理响应\n    }\n  }\n}\n</script>\n```\n\n2. **API 层处理**\n```javascript\n// api/user.js\nexport function updateUser(data) {\n  return request({\n    url: '/user/update',\n    method: 'post',\n    data\n  })\n}\n```\n\n3. **请求转发**\n- 前端发起请求：`http://localhost:8081/api/user/update`\n- 开发服务器代理到：`http://localhost:8088/api/user/update`\n- 后端处理请求并返回数据\n- 数据通过代理返回给前端\n- 组件接收数据并更新视图\n\n## 五、端口转发说明\n\n1. **前端开发服务器 (8081)**\n- `npm run serve` 启动开发服务器\n- 提供热更新\n- 处理静态资源\n- 配置代理规则\n\n2. **后端服务器 (8088)**\n- 提供 API 服务\n- 处理业务逻辑\n- 操作数据库\n- 返回数据\n\n3. **代理规则**\n- 所有 `/api` 开头的请求都会被代理\n- 自动转发到后端服务器\n- 处理跨域问题\n- 保持会话状态\n\n## 六、数据渲染流程\n\n1. **组件初始化**\n```javascript\nsetup() {\n  const formData = ref({})\n  \n  onMounted(async () => {\n    const res = await getUserInfo()\n    formData.value = res.data\n  })\n  \n  return { formData }\n}\n```\n\n2. **模板渲染**\n```vue\n<template>\n  <div>{{ formData.nickname }}</div>\n</template>\n```\n\n3. **响应式更新**\n- 数据变化自动触发视图更新\n- 使用 `v-model` 实现双向绑定\n- 计算属性处理派生状态\n- 监听器处理副作用 ","slug":"27_前后端交互流程说明","published":1,"updated":"2025-02-02T09:08:33.709Z","_id":"cm6ne6ilc0006052zdifjbv19","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"前后端交互流程说明\"><a href=\"#前后端交互流程说明\" class=\"headerlink\" title=\"前后端交互流程说明\"></a>前后端交互流程说明</h1><h2 id=\"一、Vue-项目目录结构\"><a href=\"#一、Vue-项目目录结构\" class=\"headerlink\" title=\"一、Vue 项目目录结构\"></a>一、Vue 项目目录结构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sports-h5/</span><br><span class=\"line\">├── public/                 # 静态资源目录</span><br><span class=\"line\">│   └── index.html         # HTML 模板</span><br><span class=\"line\">├── src/                   # 源代码目录</span><br><span class=\"line\">│   ├── api/              # API 接口定义</span><br><span class=\"line\">│   │   ├── user.js       # 用户相关接口</span><br><span class=\"line\">│   │   └── points.js     # 积分相关接口</span><br><span class=\"line\">│   ├── components/       # 公共组件</span><br><span class=\"line\">│   │   └── layout/      # 布局组件</span><br><span class=\"line\">│   ├── views/           # 页面组件</span><br><span class=\"line\">│   │   ├── user/        # 用户相关页面</span><br><span class=\"line\">│   │   ├── games/       # 赛事相关页面</span><br><span class=\"line\">│   │   └── points/      # 积分相关页面</span><br><span class=\"line\">│   ├── router/          # 路由配置</span><br><span class=\"line\">│   │   └── index.js     # 路由定义</span><br><span class=\"line\">│   ├── utils/           # 工具函数</span><br><span class=\"line\">│   │   └── request.js   # Axios 请求封装</span><br><span class=\"line\">│   ├── App.vue          # 根组件</span><br><span class=\"line\">│   └── main.js          # 入口文件</span><br><span class=\"line\">├── package.json          # 项目配置</span><br><span class=\"line\">└── vue.config.js        # Vue CLI 配置</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、请求流程时序图\"><a href=\"#二、请求流程时序图\" class=\"headerlink\" title=\"二、请求流程时序图\"></a>二、请求流程时序图</h2><pre class=\"mermaid\">sequenceDiagram\n    participant Browser as 浏览器\n    participant Vue as Vue组件\n    participant API as API层\n    participant Axios as Axios\n    participant DevServer as 开发服务器(8081)\n    participant Backend as 后端服务(8088)\n\n    Note over Browser,Backend: 以用户登录为例\n\n    Browser->>Vue: 点击登录按钮\n    Note over Vue: LoginForm.vue\n\n    Vue->>API: login(username, password)\n    Note over API: api/user.js\n\n    API->>Axios: request('/api/login')\n    Note over Axios: utils/request.js\n\n    Axios->>DevServer: POST http://localhost:8081/api/login\n    Note over DevServer: vue.config.js 配置代理\n\n    DevServer->>Backend: 转发到 http://localhost:8088/api/login\n    Note over Backend: UserController.java\n\n    Backend-->>DevServer: 返回token等数据\n    Note over Backend: {token: 'xxx', userInfo: {...}}\n\n    DevServer-->>Axios: 代理返回数据\n\n    Axios-->>API: 响应数据\n\n    API-->>Vue: 处理响应\n    Note over Vue: store.commit('SET_TOKEN')\n\n    Vue-->>Browser: 跳转首页\n    Note over Vue: router.push('/')</pre>\n\n<h3 id=\"代理配置说明-vue-config-js\"><a href=\"#代理配置说明-vue-config-js\" class=\"headerlink\" title=\"代理配置说明 (vue.config.js)\"></a>代理配置说明 (vue.config.js)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8081</span>,  <span class=\"comment\">// 前端开发服务器端口</span></span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;  <span class=\"comment\">// 匹配所有 /api 开头的请求</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8088&#x27;</span>,  <span class=\"comment\">// 后端服务器地址</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,  <span class=\"comment\">// 支持跨域</span></span><br><span class=\"line\">        <span class=\"comment\">// pathRewrite: &#123;  // 如果需要去掉 /api 前缀，可以启用这个配置</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;^/api&#x27;: &#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"请求流程说明\"><a href=\"#请求流程说明\" class=\"headerlink\" title=\"请求流程说明\"></a>请求流程说明</h3><ol>\n<li><p><strong>前端开发环境 (8081端口)</strong></p>\n<ul>\n<li>运行 <code>npm run serve</code> 启动开发服务器</li>\n<li>提供热更新功能</li>\n<li>处理静态资源</li>\n<li>配置代理规则</li>\n</ul>\n</li>\n<li><p><strong>代理转发过程</strong></p>\n<ul>\n<li>前端请求 <code>http://localhost:8081/api/xxx</code></li>\n<li>开发服务器匹配到 <code>/api</code> 前缀</li>\n<li>根据代理配置转发到 <code>http://localhost:8088/api/xxx</code></li>\n<li>后端处理请求并返回数据</li>\n<li>开发服务器将响应转发回前端</li>\n</ul>\n</li>\n<li><p><strong>后端服务 (8088端口)</strong></p>\n<ul>\n<li>运行 SpringBoot 应用</li>\n<li>处理 API 请求</li>\n<li>返回数据给代理服务器</li>\n</ul>\n</li>\n<li><p><strong>跨域处理</strong></p>\n<ul>\n<li>前端配置代理解决开发环境跨域</li>\n<li>生产环境通常由 nginx 处理跨域</li>\n<li>后端也可以配置 CORS 支持跨域</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"三、关键代码示例\"><a href=\"#三、关键代码示例\" class=\"headerlink\" title=\"三、关键代码示例\"></a>三、关键代码示例</h2><h3 id=\"1-前端组件-LoginForm-vue\"><a href=\"#1-前端组件-LoginForm-vue\" class=\"headerlink\" title=\"1. 前端组件 (LoginForm.vue)\"></a>1. 前端组件 (LoginForm.vue)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;van-form @submit=&quot;onSubmit&quot;&gt;</span><br><span class=\"line\">    &lt;van-field</span><br><span class=\"line\">      v-model=&quot;username&quot;</span><br><span class=\"line\">      name=&quot;username&quot;</span><br><span class=\"line\">      label=&quot;用户名&quot;</span><br><span class=\"line\">      placeholder=&quot;请输入用户名&quot;</span><br><span class=\"line\">      :rules=&quot;[&#123; required: true &#125;]&quot;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    &lt;van-field</span><br><span class=\"line\">      v-model=&quot;password&quot;</span><br><span class=\"line\">      type=&quot;password&quot;</span><br><span class=\"line\">      name=&quot;password&quot;</span><br><span class=\"line\">      label=&quot;密码&quot;</span><br><span class=\"line\">      placeholder=&quot;请输入密码&quot;</span><br><span class=\"line\">      :rules=&quot;[&#123; required: true &#125;]&quot;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    &lt;div style=&quot;margin: 16px;&quot;&gt;</span><br><span class=\"line\">      &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;</span><br><span class=\"line\">        提交</span><br><span class=\"line\">      &lt;/van-button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/van-form&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; login &#125; from &#x27;@/api/user&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      username: &#x27;&#x27;,</span><br><span class=\"line\">      password: &#x27;&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async onSubmit() &#123;</span><br><span class=\"line\">      try &#123;</span><br><span class=\"line\">        const res = await login(&#123;</span><br><span class=\"line\">          username: this.username,</span><br><span class=\"line\">          password: this.password</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        // 存储token</span><br><span class=\"line\">        this.$store.commit(&#x27;SET_TOKEN&#x27;, res.data.token)</span><br><span class=\"line\">        // 跳转首页</span><br><span class=\"line\">        this.$router.push(&#x27;/&#x27;)</span><br><span class=\"line\">      &#125; catch (error) &#123;</span><br><span class=\"line\">        console.error(error)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-API封装-api-user-js\"><a href=\"#2-API封装-api-user-js\" class=\"headerlink\" title=\"2. API封装 (api/user.js)\"></a>2. API封装 (api/user.js)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/request&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">login</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/api/login&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    data</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getUserInfo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/api/user/info&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;get&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-请求工具-utils-request-js\"><a href=\"#3-请求工具-utils-request-js\" class=\"headerlink\" title=\"3. 请求工具 (utils/request.js)\"></a>3. 请求工具 (utils/request.js)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Toast</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vant&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_BASE_API</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 请求拦截器</span></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = store.<span class=\"property\">state</span>.<span class=\"property\">token</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;Authorization&#x27;</span>] = <span class=\"string\">`Bearer <span class=\"subst\">$&#123;token&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 响应拦截器</span></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = response.<span class=\"property\">data</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> !== <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Toast</span>.<span class=\"title function_\">fail</span>(res.<span class=\"property\">message</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(res.<span class=\"property\">message</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Toast</span>.<span class=\"title function_\">fail</span>(error.<span class=\"property\">message</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> service</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-后端控制器-UserController-java\"><a href=\"#4-后端控制器-UserController-java\" class=\"headerlink\" title=\"4. 后端控制器 (UserController.java)\"></a>4. 后端控制器 (UserController.java)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/login&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">login</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> LoginRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 验证用户名密码</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> userService.login(request);</span><br><span class=\"line\">        <span class=\"comment\">// 返回token和用户信息</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success(<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;String, Object&gt;() &#123;&#123;</span><br><span class=\"line\">            put(<span class=\"string\">&quot;token&quot;</span>, token);</span><br><span class=\"line\">            put(<span class=\"string\">&quot;userInfo&quot;</span>, userService.getUserInfo());</span><br><span class=\"line\">        &#125;&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/info&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">getUserInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success(userService.getUserInfo());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-服务实现-UserServiceImpl-java\"><a href=\"#5-服务实现-UserServiceImpl-java\" class=\"headerlink\" title=\"5. 服务实现 (UserServiceImpl.java)\"></a>5. 服务实现 (UserServiceImpl.java)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">login</span><span class=\"params\">(LoginRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 验证用户名密码</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.findByUsername(request.getUsername());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user == <span class=\"literal\">null</span> || !passwordMatch(request.getPassword(), user.getPassword())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BusinessException</span>(<span class=\"string\">&quot;用户名或密码错误&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 生成token</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> JwtUtil.generateToken(user.getId());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserInfo <span class=\"title function_\">getUserInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取当前用户信息</span></span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> SecurityUtils.getUserId();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.findUserInfoById(userId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、请求示例流程\"><a href=\"#四、请求示例流程\" class=\"headerlink\" title=\"四、请求示例流程\"></a>四、请求示例流程</h2><p>以用户更新为例：</p>\n<ol>\n<li><p><strong>视图层触发</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- UserEdit.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;van-button @click=&quot;handleSave&quot;&gt;保存&lt;/van-button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; updateUser &#125; from &#x27;@/api/user&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async handleSave() &#123;</span><br><span class=\"line\">      const res = await updateUser(this.formData)</span><br><span class=\"line\">      // 处理响应</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>API 层处理</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// api/user.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">updateUser</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/user/update&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    data</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>请求转发</strong></p>\n</li>\n</ol>\n<ul>\n<li>前端发起请求：<code>http://localhost:8081/api/user/update</code></li>\n<li>开发服务器代理到：<code>http://localhost:8088/api/user/update</code></li>\n<li>后端处理请求并返回数据</li>\n<li>数据通过代理返回给前端</li>\n<li>组件接收数据并更新视图</li>\n</ul>\n<h2 id=\"五、端口转发说明\"><a href=\"#五、端口转发说明\" class=\"headerlink\" title=\"五、端口转发说明\"></a>五、端口转发说明</h2><ol>\n<li><strong>前端开发服务器 (8081)</strong></li>\n</ol>\n<ul>\n<li><code>npm run serve</code> 启动开发服务器</li>\n<li>提供热更新</li>\n<li>处理静态资源</li>\n<li>配置代理规则</li>\n</ul>\n<ol start=\"2\">\n<li><strong>后端服务器 (8088)</strong></li>\n</ol>\n<ul>\n<li>提供 API 服务</li>\n<li>处理业务逻辑</li>\n<li>操作数据库</li>\n<li>返回数据</li>\n</ul>\n<ol start=\"3\">\n<li><strong>代理规则</strong></li>\n</ol>\n<ul>\n<li>所有 <code>/api</code> 开头的请求都会被代理</li>\n<li>自动转发到后端服务器</li>\n<li>处理跨域问题</li>\n<li>保持会话状态</li>\n</ul>\n<h2 id=\"六、数据渲染流程\"><a href=\"#六、数据渲染流程\" class=\"headerlink\" title=\"六、数据渲染流程\"></a>六、数据渲染流程</h2><ol>\n<li><p><strong>组件初始化</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> formData = <span class=\"title function_\">ref</span>(&#123;&#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">onMounted</span>(<span class=\"title function_\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"title function_\">getUserInfo</span>()</span><br><span class=\"line\">    formData.<span class=\"property\">value</span> = res.<span class=\"property\">data</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; formData &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>模板渲染</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;&#123;&#123; formData.nickname &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>响应式更新</strong></p>\n</li>\n</ol>\n<ul>\n<li>数据变化自动触发视图更新</li>\n<li>使用 <code>v-model</code> 实现双向绑定</li>\n<li>计算属性处理派生状态</li>\n<li>监听器处理副作用 </li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"前后端交互流程说明\"><a href=\"#前后端交互流程说明\" class=\"headerlink\" title=\"前后端交互流程说明\"></a>前后端交互流程说明</h1><h2 id=\"一、Vue-项目目录结构\"><a href=\"#一、Vue-项目目录结构\" class=\"headerlink\" title=\"一、Vue 项目目录结构\"></a>一、Vue 项目目录结构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sports-h5/</span><br><span class=\"line\">├── public/                 # 静态资源目录</span><br><span class=\"line\">│   └── index.html         # HTML 模板</span><br><span class=\"line\">├── src/                   # 源代码目录</span><br><span class=\"line\">│   ├── api/              # API 接口定义</span><br><span class=\"line\">│   │   ├── user.js       # 用户相关接口</span><br><span class=\"line\">│   │   └── points.js     # 积分相关接口</span><br><span class=\"line\">│   ├── components/       # 公共组件</span><br><span class=\"line\">│   │   └── layout/      # 布局组件</span><br><span class=\"line\">│   ├── views/           # 页面组件</span><br><span class=\"line\">│   │   ├── user/        # 用户相关页面</span><br><span class=\"line\">│   │   ├── games/       # 赛事相关页面</span><br><span class=\"line\">│   │   └── points/      # 积分相关页面</span><br><span class=\"line\">│   ├── router/          # 路由配置</span><br><span class=\"line\">│   │   └── index.js     # 路由定义</span><br><span class=\"line\">│   ├── utils/           # 工具函数</span><br><span class=\"line\">│   │   └── request.js   # Axios 请求封装</span><br><span class=\"line\">│   ├── App.vue          # 根组件</span><br><span class=\"line\">│   └── main.js          # 入口文件</span><br><span class=\"line\">├── package.json          # 项目配置</span><br><span class=\"line\">└── vue.config.js        # Vue CLI 配置</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、请求流程时序图\"><a href=\"#二、请求流程时序图\" class=\"headerlink\" title=\"二、请求流程时序图\"></a>二、请求流程时序图</h2><pre class=\"mermaid\">sequenceDiagram\n    participant Browser as 浏览器\n    participant Vue as Vue组件\n    participant API as API层\n    participant Axios as Axios\n    participant DevServer as 开发服务器(8081)\n    participant Backend as 后端服务(8088)\n\n    Note over Browser,Backend: 以用户登录为例\n\n    Browser->>Vue: 点击登录按钮\n    Note over Vue: LoginForm.vue\n\n    Vue->>API: login(username, password)\n    Note over API: api/user.js\n\n    API->>Axios: request('/api/login')\n    Note over Axios: utils/request.js\n\n    Axios->>DevServer: POST http://localhost:8081/api/login\n    Note over DevServer: vue.config.js 配置代理\n\n    DevServer->>Backend: 转发到 http://localhost:8088/api/login\n    Note over Backend: UserController.java\n\n    Backend-->>DevServer: 返回token等数据\n    Note over Backend: {token: 'xxx', userInfo: {...}}\n\n    DevServer-->>Axios: 代理返回数据\n\n    Axios-->>API: 响应数据\n\n    API-->>Vue: 处理响应\n    Note over Vue: store.commit('SET_TOKEN')\n\n    Vue-->>Browser: 跳转首页\n    Note over Vue: router.push('/')</pre>\n\n<h3 id=\"代理配置说明-vue-config-js\"><a href=\"#代理配置说明-vue-config-js\" class=\"headerlink\" title=\"代理配置说明 (vue.config.js)\"></a>代理配置说明 (vue.config.js)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8081</span>,  <span class=\"comment\">// 前端开发服务器端口</span></span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;  <span class=\"comment\">// 匹配所有 /api 开头的请求</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8088&#x27;</span>,  <span class=\"comment\">// 后端服务器地址</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,  <span class=\"comment\">// 支持跨域</span></span><br><span class=\"line\">        <span class=\"comment\">// pathRewrite: &#123;  // 如果需要去掉 /api 前缀，可以启用这个配置</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;^/api&#x27;: &#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"请求流程说明\"><a href=\"#请求流程说明\" class=\"headerlink\" title=\"请求流程说明\"></a>请求流程说明</h3><ol>\n<li><p><strong>前端开发环境 (8081端口)</strong></p>\n<ul>\n<li>运行 <code>npm run serve</code> 启动开发服务器</li>\n<li>提供热更新功能</li>\n<li>处理静态资源</li>\n<li>配置代理规则</li>\n</ul>\n</li>\n<li><p><strong>代理转发过程</strong></p>\n<ul>\n<li>前端请求 <code>http://localhost:8081/api/xxx</code></li>\n<li>开发服务器匹配到 <code>/api</code> 前缀</li>\n<li>根据代理配置转发到 <code>http://localhost:8088/api/xxx</code></li>\n<li>后端处理请求并返回数据</li>\n<li>开发服务器将响应转发回前端</li>\n</ul>\n</li>\n<li><p><strong>后端服务 (8088端口)</strong></p>\n<ul>\n<li>运行 SpringBoot 应用</li>\n<li>处理 API 请求</li>\n<li>返回数据给代理服务器</li>\n</ul>\n</li>\n<li><p><strong>跨域处理</strong></p>\n<ul>\n<li>前端配置代理解决开发环境跨域</li>\n<li>生产环境通常由 nginx 处理跨域</li>\n<li>后端也可以配置 CORS 支持跨域</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"三、关键代码示例\"><a href=\"#三、关键代码示例\" class=\"headerlink\" title=\"三、关键代码示例\"></a>三、关键代码示例</h2><h3 id=\"1-前端组件-LoginForm-vue\"><a href=\"#1-前端组件-LoginForm-vue\" class=\"headerlink\" title=\"1. 前端组件 (LoginForm.vue)\"></a>1. 前端组件 (LoginForm.vue)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;van-form @submit=&quot;onSubmit&quot;&gt;</span><br><span class=\"line\">    &lt;van-field</span><br><span class=\"line\">      v-model=&quot;username&quot;</span><br><span class=\"line\">      name=&quot;username&quot;</span><br><span class=\"line\">      label=&quot;用户名&quot;</span><br><span class=\"line\">      placeholder=&quot;请输入用户名&quot;</span><br><span class=\"line\">      :rules=&quot;[&#123; required: true &#125;]&quot;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    &lt;van-field</span><br><span class=\"line\">      v-model=&quot;password&quot;</span><br><span class=\"line\">      type=&quot;password&quot;</span><br><span class=\"line\">      name=&quot;password&quot;</span><br><span class=\"line\">      label=&quot;密码&quot;</span><br><span class=\"line\">      placeholder=&quot;请输入密码&quot;</span><br><span class=\"line\">      :rules=&quot;[&#123; required: true &#125;]&quot;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    &lt;div style=&quot;margin: 16px;&quot;&gt;</span><br><span class=\"line\">      &lt;van-button round block type=&quot;primary&quot; native-type=&quot;submit&quot;&gt;</span><br><span class=\"line\">        提交</span><br><span class=\"line\">      &lt;/van-button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/van-form&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; login &#125; from &#x27;@/api/user&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      username: &#x27;&#x27;,</span><br><span class=\"line\">      password: &#x27;&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async onSubmit() &#123;</span><br><span class=\"line\">      try &#123;</span><br><span class=\"line\">        const res = await login(&#123;</span><br><span class=\"line\">          username: this.username,</span><br><span class=\"line\">          password: this.password</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        // 存储token</span><br><span class=\"line\">        this.$store.commit(&#x27;SET_TOKEN&#x27;, res.data.token)</span><br><span class=\"line\">        // 跳转首页</span><br><span class=\"line\">        this.$router.push(&#x27;/&#x27;)</span><br><span class=\"line\">      &#125; catch (error) &#123;</span><br><span class=\"line\">        console.error(error)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-API封装-api-user-js\"><a href=\"#2-API封装-api-user-js\" class=\"headerlink\" title=\"2. API封装 (api/user.js)\"></a>2. API封装 (api/user.js)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/request&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">login</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/api/login&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    data</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getUserInfo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/api/user/info&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;get&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-请求工具-utils-request-js\"><a href=\"#3-请求工具-utils-request-js\" class=\"headerlink\" title=\"3. 请求工具 (utils/request.js)\"></a>3. 请求工具 (utils/request.js)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Toast</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vant&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: process.<span class=\"property\">env</span>.<span class=\"property\">VUE_APP_BASE_API</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 请求拦截器</span></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = store.<span class=\"property\">state</span>.<span class=\"property\">token</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">      config.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;Authorization&#x27;</span>] = <span class=\"string\">`Bearer <span class=\"subst\">$&#123;token&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 响应拦截器</span></span><br><span class=\"line\">service.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = response.<span class=\"property\">data</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">code</span> !== <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Toast</span>.<span class=\"title function_\">fail</span>(res.<span class=\"property\">message</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(res.<span class=\"property\">message</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Toast</span>.<span class=\"title function_\">fail</span>(error.<span class=\"property\">message</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> service</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-后端控制器-UserController-java\"><a href=\"#4-后端控制器-UserController-java\" class=\"headerlink\" title=\"4. 后端控制器 (UserController.java)\"></a>4. 后端控制器 (UserController.java)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/login&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">login</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> LoginRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 验证用户名密码</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> userService.login(request);</span><br><span class=\"line\">        <span class=\"comment\">// 返回token和用户信息</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success(<span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;String, Object&gt;() &#123;&#123;</span><br><span class=\"line\">            put(<span class=\"string\">&quot;token&quot;</span>, token);</span><br><span class=\"line\">            put(<span class=\"string\">&quot;userInfo&quot;</span>, userService.getUserInfo());</span><br><span class=\"line\">        &#125;&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/info&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">getUserInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success(userService.getUserInfo());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-服务实现-UserServiceImpl-java\"><a href=\"#5-服务实现-UserServiceImpl-java\" class=\"headerlink\" title=\"5. 服务实现 (UserServiceImpl.java)\"></a>5. 服务实现 (UserServiceImpl.java)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">login</span><span class=\"params\">(LoginRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 验证用户名密码</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.findByUsername(request.getUsername());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user == <span class=\"literal\">null</span> || !passwordMatch(request.getPassword(), user.getPassword())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BusinessException</span>(<span class=\"string\">&quot;用户名或密码错误&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 生成token</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> JwtUtil.generateToken(user.getId());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserInfo <span class=\"title function_\">getUserInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取当前用户信息</span></span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> SecurityUtils.getUserId();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.findUserInfoById(userId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、请求示例流程\"><a href=\"#四、请求示例流程\" class=\"headerlink\" title=\"四、请求示例流程\"></a>四、请求示例流程</h2><p>以用户更新为例：</p>\n<ol>\n<li><p><strong>视图层触发</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- UserEdit.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;van-button @click=&quot;handleSave&quot;&gt;保存&lt;/van-button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; updateUser &#125; from &#x27;@/api/user&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async handleSave() &#123;</span><br><span class=\"line\">      const res = await updateUser(this.formData)</span><br><span class=\"line\">      // 处理响应</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>API 层处理</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// api/user.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">updateUser</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/user/update&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    data</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>请求转发</strong></p>\n</li>\n</ol>\n<ul>\n<li>前端发起请求：<code>http://localhost:8081/api/user/update</code></li>\n<li>开发服务器代理到：<code>http://localhost:8088/api/user/update</code></li>\n<li>后端处理请求并返回数据</li>\n<li>数据通过代理返回给前端</li>\n<li>组件接收数据并更新视图</li>\n</ul>\n<h2 id=\"五、端口转发说明\"><a href=\"#五、端口转发说明\" class=\"headerlink\" title=\"五、端口转发说明\"></a>五、端口转发说明</h2><ol>\n<li><strong>前端开发服务器 (8081)</strong></li>\n</ol>\n<ul>\n<li><code>npm run serve</code> 启动开发服务器</li>\n<li>提供热更新</li>\n<li>处理静态资源</li>\n<li>配置代理规则</li>\n</ul>\n<ol start=\"2\">\n<li><strong>后端服务器 (8088)</strong></li>\n</ol>\n<ul>\n<li>提供 API 服务</li>\n<li>处理业务逻辑</li>\n<li>操作数据库</li>\n<li>返回数据</li>\n</ul>\n<ol start=\"3\">\n<li><strong>代理规则</strong></li>\n</ol>\n<ul>\n<li>所有 <code>/api</code> 开头的请求都会被代理</li>\n<li>自动转发到后端服务器</li>\n<li>处理跨域问题</li>\n<li>保持会话状态</li>\n</ul>\n<h2 id=\"六、数据渲染流程\"><a href=\"#六、数据渲染流程\" class=\"headerlink\" title=\"六、数据渲染流程\"></a>六、数据渲染流程</h2><ol>\n<li><p><strong>组件初始化</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> formData = <span class=\"title function_\">ref</span>(&#123;&#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">onMounted</span>(<span class=\"title function_\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"title function_\">getUserInfo</span>()</span><br><span class=\"line\">    formData.<span class=\"property\">value</span> = res.<span class=\"property\">data</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; formData &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>模板渲染</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;&#123;&#123; formData.nickname &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>响应式更新</strong></p>\n</li>\n</ol>\n<ul>\n<li>数据变化自动触发视图更新</li>\n<li>使用 <code>v-model</code> 实现双向绑定</li>\n<li>计算属性处理派生状态</li>\n<li>监听器处理副作用 </li>\n</ul>\n"},{"title":"用户权限模型关系说明","date":"2025-02-01T16:00:00.000Z","_content":"\n# 用户权限模型关系说明\n\n## 一、数据表关系图\n\n```mermaid\nerDiagram\n    USER ||--o{ USER_ROLE : has\n    USER {\n        bigint id PK\n        varchar nickname\n        varchar phone\n        varchar credential\n        int points\n        varchar level\n        tinyint status\n    }\n    \n    ROLE ||--o{ USER_ROLE : contains\n    ROLE ||--o{ ROLE_PERMISSION : has\n    ROLE {\n        int id PK\n        varchar name\n        varchar description\n        timestamp created_at\n    }\n    \n    USER_ROLE {\n        int user_id PK,FK\n        int role_id PK,FK\n    }\n    \n    PERMISSION ||--o{ ROLE_PERMISSION : contains\n    PERMISSION {\n        int id PK\n        varchar name\n        varchar code\n        varchar description\n        timestamp created_at\n    }\n    \n    ROLE_PERMISSION {\n        int role_id PK,FK\n        int permission_id PK,FK\n    }\n\n    USER_AUTH ||--|| USER : authenticates\n    USER_AUTH {\n        bigint id PK\n        bigint user_id FK\n        varchar identity_type\n        varchar identifier\n        varchar credential\n    }\n```\n\n## 二、权限验证时序图\n\n```mermaid\nsequenceDiagram\n    participant C as Client\n    participant A as AuthController\n    participant U as UserService\n    participant R as RoleService\n    participant P as PermissionService\n    participant D as Database\n\n    C->>A: 发起请求 /api/xxx\n    A->>A: 获取Token\n    A->>U: 验证用户身份\n    U->>D: 查询用户信息\n    D-->>U: 返回用户数据\n    U->>R: 获取用户角色\n    R->>D: 查询用户角色关系\n    D-->>R: 返回角色数据\n    R->>P: 获取角色权限\n    P->>D: 查询角色权限关系\n    D-->>P: 返回权限数据\n    P-->>R: 返回权限列表\n    R-->>U: 返回角色和权限\n    U-->>A: 返回验证结果\n    A-->>C: 响应请求\n```\n\n## 三、用户分配角色时序图\n\n```mermaid\nsequenceDiagram\n    participant A as Admin\n    participant C as UserController\n    participant U as UserService\n    participant R as RoleService\n    participant D as Database\n\n    A->>C: 分配用户角色\n    C->>U: assignUserRole(userId, roleId)\n    U->>D: 检查用户存在性\n    D-->>U: 返回用户数据\n    U->>R: 验证角色有效性\n    R->>D: 检查角色存在性\n    D-->>R: 返回角色数据\n    R-->>U: 角色验证结果\n    U->>D: 插入用户角色关系\n    D-->>U: 保存成功\n    U-->>C: 返回操作结果\n    C-->>A: 显示操作结果\n```\n\n## 四、权限检查流程图\n\n```mermaid\ngraph TD\n    A[开始] --> B{是否携带Token?}\n    B -->|是| C[解析Token]\n    B -->|否| D[返回未授权]\n    C --> E{Token是否有效?}\n    E -->|是| F[获取用户信息]\n    E -->|否| D\n    F --> G[获取用户角色]\n    G --> H[获取角色权限]\n    H --> I{是否有请求权限?}\n    I -->|是| J[允许访问]\n    I -->|否| K[返回无权限]\n```\n\n## 五、核心权限表说明\n\n1. **用户表(user)**\n   - 存储基本用户信息\n   - 包含用户状态标识\n   - 关联用户认证信息\n\n2. **用户认证表(user_auth)**\n   - 多种认证方式支持\n   - 一个用户可以有多个认证方式\n   - 认证凭证加密存储\n\n3. **角色表(role)**\n   - 预定义系统角色\n   - 可自定义角色\n   - 角色层级关系\n\n4. **权限表(permission)**\n   - 功能权限定义\n   - 资源访问权限\n   - 操作权限控制\n\n5. **关联表**\n   - user_role: 用户-角色多对多关系\n   - role_permission: 角色-权限多对多关系\n\n## 六、权限码设计规范\n\n权限码格式：`模块:操作:资源`\n\n例如：\n- `user:create:*` - 创建任何用户\n- `event:update:own` - 更新自己创建的赛事\n- `points:read:all` - 查看所有积分信息\n- `system:manage:*` - 系统管理权限\n","source":"_posts/28_用户模型说明.md","raw":"---\ntitle: 用户权限模型关系说明\ndate: 2025-02-02\ntags:\n  - 球赛小程序\n---\n\n# 用户权限模型关系说明\n\n## 一、数据表关系图\n\n```mermaid\nerDiagram\n    USER ||--o{ USER_ROLE : has\n    USER {\n        bigint id PK\n        varchar nickname\n        varchar phone\n        varchar credential\n        int points\n        varchar level\n        tinyint status\n    }\n    \n    ROLE ||--o{ USER_ROLE : contains\n    ROLE ||--o{ ROLE_PERMISSION : has\n    ROLE {\n        int id PK\n        varchar name\n        varchar description\n        timestamp created_at\n    }\n    \n    USER_ROLE {\n        int user_id PK,FK\n        int role_id PK,FK\n    }\n    \n    PERMISSION ||--o{ ROLE_PERMISSION : contains\n    PERMISSION {\n        int id PK\n        varchar name\n        varchar code\n        varchar description\n        timestamp created_at\n    }\n    \n    ROLE_PERMISSION {\n        int role_id PK,FK\n        int permission_id PK,FK\n    }\n\n    USER_AUTH ||--|| USER : authenticates\n    USER_AUTH {\n        bigint id PK\n        bigint user_id FK\n        varchar identity_type\n        varchar identifier\n        varchar credential\n    }\n```\n\n## 二、权限验证时序图\n\n```mermaid\nsequenceDiagram\n    participant C as Client\n    participant A as AuthController\n    participant U as UserService\n    participant R as RoleService\n    participant P as PermissionService\n    participant D as Database\n\n    C->>A: 发起请求 /api/xxx\n    A->>A: 获取Token\n    A->>U: 验证用户身份\n    U->>D: 查询用户信息\n    D-->>U: 返回用户数据\n    U->>R: 获取用户角色\n    R->>D: 查询用户角色关系\n    D-->>R: 返回角色数据\n    R->>P: 获取角色权限\n    P->>D: 查询角色权限关系\n    D-->>P: 返回权限数据\n    P-->>R: 返回权限列表\n    R-->>U: 返回角色和权限\n    U-->>A: 返回验证结果\n    A-->>C: 响应请求\n```\n\n## 三、用户分配角色时序图\n\n```mermaid\nsequenceDiagram\n    participant A as Admin\n    participant C as UserController\n    participant U as UserService\n    participant R as RoleService\n    participant D as Database\n\n    A->>C: 分配用户角色\n    C->>U: assignUserRole(userId, roleId)\n    U->>D: 检查用户存在性\n    D-->>U: 返回用户数据\n    U->>R: 验证角色有效性\n    R->>D: 检查角色存在性\n    D-->>R: 返回角色数据\n    R-->>U: 角色验证结果\n    U->>D: 插入用户角色关系\n    D-->>U: 保存成功\n    U-->>C: 返回操作结果\n    C-->>A: 显示操作结果\n```\n\n## 四、权限检查流程图\n\n```mermaid\ngraph TD\n    A[开始] --> B{是否携带Token?}\n    B -->|是| C[解析Token]\n    B -->|否| D[返回未授权]\n    C --> E{Token是否有效?}\n    E -->|是| F[获取用户信息]\n    E -->|否| D\n    F --> G[获取用户角色]\n    G --> H[获取角色权限]\n    H --> I{是否有请求权限?}\n    I -->|是| J[允许访问]\n    I -->|否| K[返回无权限]\n```\n\n## 五、核心权限表说明\n\n1. **用户表(user)**\n   - 存储基本用户信息\n   - 包含用户状态标识\n   - 关联用户认证信息\n\n2. **用户认证表(user_auth)**\n   - 多种认证方式支持\n   - 一个用户可以有多个认证方式\n   - 认证凭证加密存储\n\n3. **角色表(role)**\n   - 预定义系统角色\n   - 可自定义角色\n   - 角色层级关系\n\n4. **权限表(permission)**\n   - 功能权限定义\n   - 资源访问权限\n   - 操作权限控制\n\n5. **关联表**\n   - user_role: 用户-角色多对多关系\n   - role_permission: 角色-权限多对多关系\n\n## 六、权限码设计规范\n\n权限码格式：`模块:操作:资源`\n\n例如：\n- `user:create:*` - 创建任何用户\n- `event:update:own` - 更新自己创建的赛事\n- `points:read:all` - 查看所有积分信息\n- `system:manage:*` - 系统管理权限\n","slug":"28_用户模型说明","published":1,"updated":"2025-02-02T09:36:03.025Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvoq0000bq2z833ihymr","content":"<h1 id=\"用户权限模型关系说明\"><a href=\"#用户权限模型关系说明\" class=\"headerlink\" title=\"用户权限模型关系说明\"></a>用户权限模型关系说明</h1><h2 id=\"一、数据表关系图\"><a href=\"#一、数据表关系图\" class=\"headerlink\" title=\"一、数据表关系图\"></a>一、数据表关系图</h2><pre class=\"mermaid\">erDiagram\n    USER ||--o{ USER_ROLE : has\n    USER {\n        bigint id PK\n        varchar nickname\n        varchar phone\n        varchar credential\n        int points\n        varchar level\n        tinyint status\n    }\n\n    ROLE ||--o{ USER_ROLE : contains\n    ROLE ||--o{ ROLE_PERMISSION : has\n    ROLE {\n        int id PK\n        varchar name\n        varchar description\n        timestamp created_at\n    }\n\n    USER_ROLE {\n        int user_id PK,FK\n        int role_id PK,FK\n    }\n\n    PERMISSION ||--o{ ROLE_PERMISSION : contains\n    PERMISSION {\n        int id PK\n        varchar name\n        varchar code\n        varchar description\n        timestamp created_at\n    }\n\n    ROLE_PERMISSION {\n        int role_id PK,FK\n        int permission_id PK,FK\n    }\n\n    USER_AUTH ||--|| USER : authenticates\n    USER_AUTH {\n        bigint id PK\n        bigint user_id FK\n        varchar identity_type\n        varchar identifier\n        varchar credential\n    }</pre>\n\n<h2 id=\"二、权限验证时序图\"><a href=\"#二、权限验证时序图\" class=\"headerlink\" title=\"二、权限验证时序图\"></a>二、权限验证时序图</h2><pre class=\"mermaid\">sequenceDiagram\n    participant C as Client\n    participant A as AuthController\n    participant U as UserService\n    participant R as RoleService\n    participant P as PermissionService\n    participant D as Database\n\n    C->>A: 发起请求 /api/xxx\n    A->>A: 获取Token\n    A->>U: 验证用户身份\n    U->>D: 查询用户信息\n    D-->>U: 返回用户数据\n    U->>R: 获取用户角色\n    R->>D: 查询用户角色关系\n    D-->>R: 返回角色数据\n    R->>P: 获取角色权限\n    P->>D: 查询角色权限关系\n    D-->>P: 返回权限数据\n    P-->>R: 返回权限列表\n    R-->>U: 返回角色和权限\n    U-->>A: 返回验证结果\n    A-->>C: 响应请求</pre>\n\n<h2 id=\"三、用户分配角色时序图\"><a href=\"#三、用户分配角色时序图\" class=\"headerlink\" title=\"三、用户分配角色时序图\"></a>三、用户分配角色时序图</h2><pre class=\"mermaid\">sequenceDiagram\n    participant A as Admin\n    participant C as UserController\n    participant U as UserService\n    participant R as RoleService\n    participant D as Database\n\n    A->>C: 分配用户角色\n    C->>U: assignUserRole(userId, roleId)\n    U->>D: 检查用户存在性\n    D-->>U: 返回用户数据\n    U->>R: 验证角色有效性\n    R->>D: 检查角色存在性\n    D-->>R: 返回角色数据\n    R-->>U: 角色验证结果\n    U->>D: 插入用户角色关系\n    D-->>U: 保存成功\n    U-->>C: 返回操作结果\n    C-->>A: 显示操作结果</pre>\n\n<h2 id=\"四、权限检查流程图\"><a href=\"#四、权限检查流程图\" class=\"headerlink\" title=\"四、权限检查流程图\"></a>四、权限检查流程图</h2><pre class=\"mermaid\">graph TD\n    A[开始] --> B{是否携带Token?}\n    B -->|是| C[解析Token]\n    B -->|否| D[返回未授权]\n    C --> E{Token是否有效?}\n    E -->|是| F[获取用户信息]\n    E -->|否| D\n    F --> G[获取用户角色]\n    G --> H[获取角色权限]\n    H --> I{是否有请求权限?}\n    I -->|是| J[允许访问]\n    I -->|否| K[返回无权限]</pre>\n\n<h2 id=\"五、核心权限表说明\"><a href=\"#五、核心权限表说明\" class=\"headerlink\" title=\"五、核心权限表说明\"></a>五、核心权限表说明</h2><ol>\n<li><p><strong>用户表(user)</strong></p>\n<ul>\n<li>存储基本用户信息</li>\n<li>包含用户状态标识</li>\n<li>关联用户认证信息</li>\n</ul>\n</li>\n<li><p><strong>用户认证表(user_auth)</strong></p>\n<ul>\n<li>多种认证方式支持</li>\n<li>一个用户可以有多个认证方式</li>\n<li>认证凭证加密存储</li>\n</ul>\n</li>\n<li><p><strong>角色表(role)</strong></p>\n<ul>\n<li>预定义系统角色</li>\n<li>可自定义角色</li>\n<li>角色层级关系</li>\n</ul>\n</li>\n<li><p><strong>权限表(permission)</strong></p>\n<ul>\n<li>功能权限定义</li>\n<li>资源访问权限</li>\n<li>操作权限控制</li>\n</ul>\n</li>\n<li><p><strong>关联表</strong></p>\n<ul>\n<li>user_role: 用户-角色多对多关系</li>\n<li>role_permission: 角色-权限多对多关系</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"六、权限码设计规范\"><a href=\"#六、权限码设计规范\" class=\"headerlink\" title=\"六、权限码设计规范\"></a>六、权限码设计规范</h2><p>权限码格式：<code>模块:操作:资源</code></p>\n<p>例如：</p>\n<ul>\n<li><code>user:create:*</code> - 创建任何用户</li>\n<li><code>event:update:own</code> - 更新自己创建的赛事</li>\n<li><code>points:read:all</code> - 查看所有积分信息</li>\n<li><code>system:manage:*</code> - 系统管理权限</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"用户权限模型关系说明\"><a href=\"#用户权限模型关系说明\" class=\"headerlink\" title=\"用户权限模型关系说明\"></a>用户权限模型关系说明</h1><h2 id=\"一、数据表关系图\"><a href=\"#一、数据表关系图\" class=\"headerlink\" title=\"一、数据表关系图\"></a>一、数据表关系图</h2><pre class=\"mermaid\">erDiagram\n    USER ||--o{ USER_ROLE : has\n    USER {\n        bigint id PK\n        varchar nickname\n        varchar phone\n        varchar credential\n        int points\n        varchar level\n        tinyint status\n    }\n\n    ROLE ||--o{ USER_ROLE : contains\n    ROLE ||--o{ ROLE_PERMISSION : has\n    ROLE {\n        int id PK\n        varchar name\n        varchar description\n        timestamp created_at\n    }\n\n    USER_ROLE {\n        int user_id PK,FK\n        int role_id PK,FK\n    }\n\n    PERMISSION ||--o{ ROLE_PERMISSION : contains\n    PERMISSION {\n        int id PK\n        varchar name\n        varchar code\n        varchar description\n        timestamp created_at\n    }\n\n    ROLE_PERMISSION {\n        int role_id PK,FK\n        int permission_id PK,FK\n    }\n\n    USER_AUTH ||--|| USER : authenticates\n    USER_AUTH {\n        bigint id PK\n        bigint user_id FK\n        varchar identity_type\n        varchar identifier\n        varchar credential\n    }</pre>\n\n<h2 id=\"二、权限验证时序图\"><a href=\"#二、权限验证时序图\" class=\"headerlink\" title=\"二、权限验证时序图\"></a>二、权限验证时序图</h2><pre class=\"mermaid\">sequenceDiagram\n    participant C as Client\n    participant A as AuthController\n    participant U as UserService\n    participant R as RoleService\n    participant P as PermissionService\n    participant D as Database\n\n    C->>A: 发起请求 /api/xxx\n    A->>A: 获取Token\n    A->>U: 验证用户身份\n    U->>D: 查询用户信息\n    D-->>U: 返回用户数据\n    U->>R: 获取用户角色\n    R->>D: 查询用户角色关系\n    D-->>R: 返回角色数据\n    R->>P: 获取角色权限\n    P->>D: 查询角色权限关系\n    D-->>P: 返回权限数据\n    P-->>R: 返回权限列表\n    R-->>U: 返回角色和权限\n    U-->>A: 返回验证结果\n    A-->>C: 响应请求</pre>\n\n<h2 id=\"三、用户分配角色时序图\"><a href=\"#三、用户分配角色时序图\" class=\"headerlink\" title=\"三、用户分配角色时序图\"></a>三、用户分配角色时序图</h2><pre class=\"mermaid\">sequenceDiagram\n    participant A as Admin\n    participant C as UserController\n    participant U as UserService\n    participant R as RoleService\n    participant D as Database\n\n    A->>C: 分配用户角色\n    C->>U: assignUserRole(userId, roleId)\n    U->>D: 检查用户存在性\n    D-->>U: 返回用户数据\n    U->>R: 验证角色有效性\n    R->>D: 检查角色存在性\n    D-->>R: 返回角色数据\n    R-->>U: 角色验证结果\n    U->>D: 插入用户角色关系\n    D-->>U: 保存成功\n    U-->>C: 返回操作结果\n    C-->>A: 显示操作结果</pre>\n\n<h2 id=\"四、权限检查流程图\"><a href=\"#四、权限检查流程图\" class=\"headerlink\" title=\"四、权限检查流程图\"></a>四、权限检查流程图</h2><pre class=\"mermaid\">graph TD\n    A[开始] --> B{是否携带Token?}\n    B -->|是| C[解析Token]\n    B -->|否| D[返回未授权]\n    C --> E{Token是否有效?}\n    E -->|是| F[获取用户信息]\n    E -->|否| D\n    F --> G[获取用户角色]\n    G --> H[获取角色权限]\n    H --> I{是否有请求权限?}\n    I -->|是| J[允许访问]\n    I -->|否| K[返回无权限]</pre>\n\n<h2 id=\"五、核心权限表说明\"><a href=\"#五、核心权限表说明\" class=\"headerlink\" title=\"五、核心权限表说明\"></a>五、核心权限表说明</h2><ol>\n<li><p><strong>用户表(user)</strong></p>\n<ul>\n<li>存储基本用户信息</li>\n<li>包含用户状态标识</li>\n<li>关联用户认证信息</li>\n</ul>\n</li>\n<li><p><strong>用户认证表(user_auth)</strong></p>\n<ul>\n<li>多种认证方式支持</li>\n<li>一个用户可以有多个认证方式</li>\n<li>认证凭证加密存储</li>\n</ul>\n</li>\n<li><p><strong>角色表(role)</strong></p>\n<ul>\n<li>预定义系统角色</li>\n<li>可自定义角色</li>\n<li>角色层级关系</li>\n</ul>\n</li>\n<li><p><strong>权限表(permission)</strong></p>\n<ul>\n<li>功能权限定义</li>\n<li>资源访问权限</li>\n<li>操作权限控制</li>\n</ul>\n</li>\n<li><p><strong>关联表</strong></p>\n<ul>\n<li>user_role: 用户-角色多对多关系</li>\n<li>role_permission: 角色-权限多对多关系</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"六、权限码设计规范\"><a href=\"#六、权限码设计规范\" class=\"headerlink\" title=\"六、权限码设计规范\"></a>六、权限码设计规范</h2><p>权限码格式：<code>模块:操作:资源</code></p>\n<p>例如：</p>\n<ul>\n<li><code>user:create:*</code> - 创建任何用户</li>\n<li><code>event:update:own</code> - 更新自己创建的赛事</li>\n<li><code>points:read:all</code> - 查看所有积分信息</li>\n<li><code>system:manage:*</code> - 系统管理权限</li>\n</ul>\n"},{"title":"赛事模型关系说明","date":"2025-02-03T16:00:00.000Z","_content":"\n# 赛事相关模型关系说明\n\n## 核心模型\n\n### 1. 赛事（Tournament）\n- 基本信息：标题、说明、类型、地点、时间等\n- 状态流转：草稿 -> 报名中 -> 进行中 -> 已结束\n- 人数控制：最大参与人数、当前参与人数\n- 其他属性：积分上限、报名费等\n\n### 2. 报名记录（TournamentRegistration）\n- 关联关系：赛事ID、用户ID\n- 状态管理：\n  - 报名状态：待审核、已通过、已拒绝、候补中\n  - 支付状态：未支付、已支付\n- 时间记录：创建时间、更新时间\n\n## 数据关系\n\n1. 一个赛事可以有多个报名记录（一对多）\n2. 一个用户可以报名多个赛事（多对多）\n3. 每个赛事-用户组合只能有一条报名记录（唯一约束）\n\n## 状态流转\n\n### 赛事状态\n```\nDRAFT -> REGISTERING -> ONGOING -> FINISHED\n草稿      报名中         进行中      已结束\n```\n\n### 报名状态\n```\nPENDING/WAITLIST -> APPROVED/REJECTED\n待审核/候补中       已通过/已拒绝\n``` ","source":"_posts/30_赛事模型关系说明.md","raw":"---\ntitle: 赛事模型关系说明\ndate: 2025-02-04\ntags: \n  - 数据模型\n  - 赛事管理\n---\n\n# 赛事相关模型关系说明\n\n## 核心模型\n\n### 1. 赛事（Tournament）\n- 基本信息：标题、说明、类型、地点、时间等\n- 状态流转：草稿 -> 报名中 -> 进行中 -> 已结束\n- 人数控制：最大参与人数、当前参与人数\n- 其他属性：积分上限、报名费等\n\n### 2. 报名记录（TournamentRegistration）\n- 关联关系：赛事ID、用户ID\n- 状态管理：\n  - 报名状态：待审核、已通过、已拒绝、候补中\n  - 支付状态：未支付、已支付\n- 时间记录：创建时间、更新时间\n\n## 数据关系\n\n1. 一个赛事可以有多个报名记录（一对多）\n2. 一个用户可以报名多个赛事（多对多）\n3. 每个赛事-用户组合只能有一条报名记录（唯一约束）\n\n## 状态流转\n\n### 赛事状态\n```\nDRAFT -> REGISTERING -> ONGOING -> FINISHED\n草稿      报名中         进行中      已结束\n```\n\n### 报名状态\n```\nPENDING/WAITLIST -> APPROVED/REJECTED\n待审核/候补中       已通过/已拒绝\n``` ","slug":"30_赛事模型关系说明","published":1,"updated":"2025-02-04T14:55:07.822Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvor0001bq2zfzmsagpu","content":"<h1 id=\"赛事相关模型关系说明\"><a href=\"#赛事相关模型关系说明\" class=\"headerlink\" title=\"赛事相关模型关系说明\"></a>赛事相关模型关系说明</h1><h2 id=\"核心模型\"><a href=\"#核心模型\" class=\"headerlink\" title=\"核心模型\"></a>核心模型</h2><h3 id=\"1-赛事（Tournament）\"><a href=\"#1-赛事（Tournament）\" class=\"headerlink\" title=\"1. 赛事（Tournament）\"></a>1. 赛事（Tournament）</h3><ul>\n<li>基本信息：标题、说明、类型、地点、时间等</li>\n<li>状态流转：草稿 -&gt; 报名中 -&gt; 进行中 -&gt; 已结束</li>\n<li>人数控制：最大参与人数、当前参与人数</li>\n<li>其他属性：积分上限、报名费等</li>\n</ul>\n<h3 id=\"2-报名记录（TournamentRegistration）\"><a href=\"#2-报名记录（TournamentRegistration）\" class=\"headerlink\" title=\"2. 报名记录（TournamentRegistration）\"></a>2. 报名记录（TournamentRegistration）</h3><ul>\n<li>关联关系：赛事ID、用户ID</li>\n<li>状态管理：<ul>\n<li>报名状态：待审核、已通过、已拒绝、候补中</li>\n<li>支付状态：未支付、已支付</li>\n</ul>\n</li>\n<li>时间记录：创建时间、更新时间</li>\n</ul>\n<h2 id=\"数据关系\"><a href=\"#数据关系\" class=\"headerlink\" title=\"数据关系\"></a>数据关系</h2><ol>\n<li>一个赛事可以有多个报名记录（一对多）</li>\n<li>一个用户可以报名多个赛事（多对多）</li>\n<li>每个赛事-用户组合只能有一条报名记录（唯一约束）</li>\n</ol>\n<h2 id=\"状态流转\"><a href=\"#状态流转\" class=\"headerlink\" title=\"状态流转\"></a>状态流转</h2><h3 id=\"赛事状态\"><a href=\"#赛事状态\" class=\"headerlink\" title=\"赛事状态\"></a>赛事状态</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DRAFT -&gt; REGISTERING -&gt; ONGOING -&gt; FINISHED</span><br><span class=\"line\">草稿      报名中         进行中      已结束</span><br></pre></td></tr></table></figure>\n<h3 id=\"报名状态\"><a href=\"#报名状态\" class=\"headerlink\" title=\"报名状态\"></a>报名状态</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PENDING/WAITLIST -&gt; APPROVED/REJECTED</span><br><span class=\"line\">待审核/候补中       已通过/已拒绝</span><br></pre></td></tr></table></figure><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"赛事相关模型关系说明\"><a href=\"#赛事相关模型关系说明\" class=\"headerlink\" title=\"赛事相关模型关系说明\"></a>赛事相关模型关系说明</h1><h2 id=\"核心模型\"><a href=\"#核心模型\" class=\"headerlink\" title=\"核心模型\"></a>核心模型</h2><h3 id=\"1-赛事（Tournament）\"><a href=\"#1-赛事（Tournament）\" class=\"headerlink\" title=\"1. 赛事（Tournament）\"></a>1. 赛事（Tournament）</h3><ul>\n<li>基本信息：标题、说明、类型、地点、时间等</li>\n<li>状态流转：草稿 -&gt; 报名中 -&gt; 进行中 -&gt; 已结束</li>\n<li>人数控制：最大参与人数、当前参与人数</li>\n<li>其他属性：积分上限、报名费等</li>\n</ul>\n<h3 id=\"2-报名记录（TournamentRegistration）\"><a href=\"#2-报名记录（TournamentRegistration）\" class=\"headerlink\" title=\"2. 报名记录（TournamentRegistration）\"></a>2. 报名记录（TournamentRegistration）</h3><ul>\n<li>关联关系：赛事ID、用户ID</li>\n<li>状态管理：<ul>\n<li>报名状态：待审核、已通过、已拒绝、候补中</li>\n<li>支付状态：未支付、已支付</li>\n</ul>\n</li>\n<li>时间记录：创建时间、更新时间</li>\n</ul>\n<h2 id=\"数据关系\"><a href=\"#数据关系\" class=\"headerlink\" title=\"数据关系\"></a>数据关系</h2><ol>\n<li>一个赛事可以有多个报名记录（一对多）</li>\n<li>一个用户可以报名多个赛事（多对多）</li>\n<li>每个赛事-用户组合只能有一条报名记录（唯一约束）</li>\n</ol>\n<h2 id=\"状态流转\"><a href=\"#状态流转\" class=\"headerlink\" title=\"状态流转\"></a>状态流转</h2><h3 id=\"赛事状态\"><a href=\"#赛事状态\" class=\"headerlink\" title=\"赛事状态\"></a>赛事状态</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DRAFT -&gt; REGISTERING -&gt; ONGOING -&gt; FINISHED</span><br><span class=\"line\">草稿      报名中         进行中      已结束</span><br></pre></td></tr></table></figure>\n<h3 id=\"报名状态\"><a href=\"#报名状态\" class=\"headerlink\" title=\"报名状态\"></a>报名状态</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PENDING/WAITLIST -&gt; APPROVED/REJECTED</span><br><span class=\"line\">待审核/候补中       已通过/已拒绝</span><br></pre></td></tr></table></figure>"},{"title":"数据库设计说明","date":"2025-02-03T16:00:00.000Z","_content":"\n# 数据库设计说明\n\n## 表结构说明\n\n### 1. 用户相关表\n- `user`: 用户基本信息\n- `role`: 角色定义\n- `permission`: 权限定义\n- `user_role`: 用户-角色关联\n- `role_permission`: 角色-权限关联\n\n### 2. 赛事相关表\n- `tournament`: 赛事信息\n- `tournament_registration`: 赛事报名记录\n\n## 字段说明\n\n### user 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 用户ID |\n| nickname | varchar(50) | 昵称 |\n| phone | varchar(20) | 手机号 |\n| credential | varchar(100) | 密码凭证 |\n| points | int | 积分 |\n| level | varchar(20) | 级别 |\n| grip_style | varchar(50) | 握拍方式 |\n| racket_config | varchar(100) | 球拍配置 |\n\n### tournament 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 赛事ID |\n| title | varchar(100) | 赛事标题 |\n| type | varchar(20) | 类型 |\n| status | varchar(20) | 状态 |\n| max_players | int | 最大参与人数 |\n| current_players | int | 当前参与人数 |\n| level | varchar(20) | 积分上限 |\n| entry_fee | decimal(10,2) | 报名费 |\n\n### tournament_registration 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 报名ID |\n| tournament_id | bigint | 赛事ID |\n| user_id | bigint | 用户ID |\n| status | varchar(20) | 状态 |\n| payment_status | varchar(20) | 支付状态 |\n\n## 索引设计\n\n### 唯一索引\n- user: uk_nickname, uk_phone\n- role: uk_code\n- permission: uk_code\n- tournament_registration: uk_tournament_user\n\n### 普通索引\n- tournament_registration: idx_tournament_status\n\n## 初始化数据\n详见 [init-data.sql](sql/init-data.sql) ","source":"_posts/31_数据库设计说明.md","raw":"---\ntitle: 数据库设计说明\ndate: 2025-02-04\ntags: \n  - 数据库\n  - 设计文档\n---\n\n# 数据库设计说明\n\n## 表结构说明\n\n### 1. 用户相关表\n- `user`: 用户基本信息\n- `role`: 角色定义\n- `permission`: 权限定义\n- `user_role`: 用户-角色关联\n- `role_permission`: 角色-权限关联\n\n### 2. 赛事相关表\n- `tournament`: 赛事信息\n- `tournament_registration`: 赛事报名记录\n\n## 字段说明\n\n### user 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 用户ID |\n| nickname | varchar(50) | 昵称 |\n| phone | varchar(20) | 手机号 |\n| credential | varchar(100) | 密码凭证 |\n| points | int | 积分 |\n| level | varchar(20) | 级别 |\n| grip_style | varchar(50) | 握拍方式 |\n| racket_config | varchar(100) | 球拍配置 |\n\n### tournament 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 赛事ID |\n| title | varchar(100) | 赛事标题 |\n| type | varchar(20) | 类型 |\n| status | varchar(20) | 状态 |\n| max_players | int | 最大参与人数 |\n| current_players | int | 当前参与人数 |\n| level | varchar(20) | 积分上限 |\n| entry_fee | decimal(10,2) | 报名费 |\n\n### tournament_registration 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 报名ID |\n| tournament_id | bigint | 赛事ID |\n| user_id | bigint | 用户ID |\n| status | varchar(20) | 状态 |\n| payment_status | varchar(20) | 支付状态 |\n\n## 索引设计\n\n### 唯一索引\n- user: uk_nickname, uk_phone\n- role: uk_code\n- permission: uk_code\n- tournament_registration: uk_tournament_user\n\n### 普通索引\n- tournament_registration: idx_tournament_status\n\n## 初始化数据\n详见 [init-data.sql](sql/init-data.sql) ","slug":"31_数据库设计说明","published":1,"updated":"2025-02-04T14:55:07.839Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvor0003bq2zclda0vge","content":"<h1 id=\"数据库设计说明\"><a href=\"#数据库设计说明\" class=\"headerlink\" title=\"数据库设计说明\"></a>数据库设计说明</h1><h2 id=\"表结构说明\"><a href=\"#表结构说明\" class=\"headerlink\" title=\"表结构说明\"></a>表结构说明</h2><h3 id=\"1-用户相关表\"><a href=\"#1-用户相关表\" class=\"headerlink\" title=\"1. 用户相关表\"></a>1. 用户相关表</h3><ul>\n<li><code>user</code>: 用户基本信息</li>\n<li><code>role</code>: 角色定义</li>\n<li><code>permission</code>: 权限定义</li>\n<li><code>user_role</code>: 用户-角色关联</li>\n<li><code>role_permission</code>: 角色-权限关联</li>\n</ul>\n<h3 id=\"2-赛事相关表\"><a href=\"#2-赛事相关表\" class=\"headerlink\" title=\"2. 赛事相关表\"></a>2. 赛事相关表</h3><ul>\n<li><code>tournament</code>: 赛事信息</li>\n<li><code>tournament_registration</code>: 赛事报名记录</li>\n</ul>\n<h2 id=\"字段说明\"><a href=\"#字段说明\" class=\"headerlink\" title=\"字段说明\"></a>字段说明</h2><h3 id=\"user-表\"><a href=\"#user-表\" class=\"headerlink\" title=\"user 表\"></a>user 表</h3><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>varchar(50)</td>\n<td>昵称</td>\n</tr>\n<tr>\n<td>phone</td>\n<td>varchar(20)</td>\n<td>手机号</td>\n</tr>\n<tr>\n<td>credential</td>\n<td>varchar(100)</td>\n<td>密码凭证</td>\n</tr>\n<tr>\n<td>points</td>\n<td>int</td>\n<td>积分</td>\n</tr>\n<tr>\n<td>level</td>\n<td>varchar(20)</td>\n<td>级别</td>\n</tr>\n<tr>\n<td>grip_style</td>\n<td>varchar(50)</td>\n<td>握拍方式</td>\n</tr>\n<tr>\n<td>racket_config</td>\n<td>varchar(100)</td>\n<td>球拍配置</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tournament-表\"><a href=\"#tournament-表\" class=\"headerlink\" title=\"tournament 表\"></a>tournament 表</h3><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>赛事ID</td>\n</tr>\n<tr>\n<td>title</td>\n<td>varchar(100)</td>\n<td>赛事标题</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(20)</td>\n<td>类型</td>\n</tr>\n<tr>\n<td>status</td>\n<td>varchar(20)</td>\n<td>状态</td>\n</tr>\n<tr>\n<td>max_players</td>\n<td>int</td>\n<td>最大参与人数</td>\n</tr>\n<tr>\n<td>current_players</td>\n<td>int</td>\n<td>当前参与人数</td>\n</tr>\n<tr>\n<td>level</td>\n<td>varchar(20)</td>\n<td>积分上限</td>\n</tr>\n<tr>\n<td>entry_fee</td>\n<td>decimal(10,2)</td>\n<td>报名费</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tournament-registration-表\"><a href=\"#tournament-registration-表\" class=\"headerlink\" title=\"tournament_registration 表\"></a>tournament_registration 表</h3><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>报名ID</td>\n</tr>\n<tr>\n<td>tournament_id</td>\n<td>bigint</td>\n<td>赛事ID</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>status</td>\n<td>varchar(20)</td>\n<td>状态</td>\n</tr>\n<tr>\n<td>payment_status</td>\n<td>varchar(20)</td>\n<td>支付状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"索引设计\"><a href=\"#索引设计\" class=\"headerlink\" title=\"索引设计\"></a>索引设计</h2><h3 id=\"唯一索引\"><a href=\"#唯一索引\" class=\"headerlink\" title=\"唯一索引\"></a>唯一索引</h3><ul>\n<li>user: uk_nickname, uk_phone</li>\n<li>role: uk_code</li>\n<li>permission: uk_code</li>\n<li>tournament_registration: uk_tournament_user</li>\n</ul>\n<h3 id=\"普通索引\"><a href=\"#普通索引\" class=\"headerlink\" title=\"普通索引\"></a>普通索引</h3><ul>\n<li>tournament_registration: idx_tournament_status</li>\n</ul>\n<h2 id=\"初始化数据\"><a href=\"#初始化数据\" class=\"headerlink\" title=\"初始化数据\"></a>初始化数据</h2><p>详见 <a href=\"sql/init-data.sql\">init-data.sql</a> </p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"数据库设计说明\"><a href=\"#数据库设计说明\" class=\"headerlink\" title=\"数据库设计说明\"></a>数据库设计说明</h1><h2 id=\"表结构说明\"><a href=\"#表结构说明\" class=\"headerlink\" title=\"表结构说明\"></a>表结构说明</h2><h3 id=\"1-用户相关表\"><a href=\"#1-用户相关表\" class=\"headerlink\" title=\"1. 用户相关表\"></a>1. 用户相关表</h3><ul>\n<li><code>user</code>: 用户基本信息</li>\n<li><code>role</code>: 角色定义</li>\n<li><code>permission</code>: 权限定义</li>\n<li><code>user_role</code>: 用户-角色关联</li>\n<li><code>role_permission</code>: 角色-权限关联</li>\n</ul>\n<h3 id=\"2-赛事相关表\"><a href=\"#2-赛事相关表\" class=\"headerlink\" title=\"2. 赛事相关表\"></a>2. 赛事相关表</h3><ul>\n<li><code>tournament</code>: 赛事信息</li>\n<li><code>tournament_registration</code>: 赛事报名记录</li>\n</ul>\n<h2 id=\"字段说明\"><a href=\"#字段说明\" class=\"headerlink\" title=\"字段说明\"></a>字段说明</h2><h3 id=\"user-表\"><a href=\"#user-表\" class=\"headerlink\" title=\"user 表\"></a>user 表</h3><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>varchar(50)</td>\n<td>昵称</td>\n</tr>\n<tr>\n<td>phone</td>\n<td>varchar(20)</td>\n<td>手机号</td>\n</tr>\n<tr>\n<td>credential</td>\n<td>varchar(100)</td>\n<td>密码凭证</td>\n</tr>\n<tr>\n<td>points</td>\n<td>int</td>\n<td>积分</td>\n</tr>\n<tr>\n<td>level</td>\n<td>varchar(20)</td>\n<td>级别</td>\n</tr>\n<tr>\n<td>grip_style</td>\n<td>varchar(50)</td>\n<td>握拍方式</td>\n</tr>\n<tr>\n<td>racket_config</td>\n<td>varchar(100)</td>\n<td>球拍配置</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tournament-表\"><a href=\"#tournament-表\" class=\"headerlink\" title=\"tournament 表\"></a>tournament 表</h3><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>赛事ID</td>\n</tr>\n<tr>\n<td>title</td>\n<td>varchar(100)</td>\n<td>赛事标题</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(20)</td>\n<td>类型</td>\n</tr>\n<tr>\n<td>status</td>\n<td>varchar(20)</td>\n<td>状态</td>\n</tr>\n<tr>\n<td>max_players</td>\n<td>int</td>\n<td>最大参与人数</td>\n</tr>\n<tr>\n<td>current_players</td>\n<td>int</td>\n<td>当前参与人数</td>\n</tr>\n<tr>\n<td>level</td>\n<td>varchar(20)</td>\n<td>积分上限</td>\n</tr>\n<tr>\n<td>entry_fee</td>\n<td>decimal(10,2)</td>\n<td>报名费</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tournament-registration-表\"><a href=\"#tournament-registration-表\" class=\"headerlink\" title=\"tournament_registration 表\"></a>tournament_registration 表</h3><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>报名ID</td>\n</tr>\n<tr>\n<td>tournament_id</td>\n<td>bigint</td>\n<td>赛事ID</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>status</td>\n<td>varchar(20)</td>\n<td>状态</td>\n</tr>\n<tr>\n<td>payment_status</td>\n<td>varchar(20)</td>\n<td>支付状态</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"索引设计\"><a href=\"#索引设计\" class=\"headerlink\" title=\"索引设计\"></a>索引设计</h2><h3 id=\"唯一索引\"><a href=\"#唯一索引\" class=\"headerlink\" title=\"唯一索引\"></a>唯一索引</h3><ul>\n<li>user: uk_nickname, uk_phone</li>\n<li>role: uk_code</li>\n<li>permission: uk_code</li>\n<li>tournament_registration: uk_tournament_user</li>\n</ul>\n<h3 id=\"普通索引\"><a href=\"#普通索引\" class=\"headerlink\" title=\"普通索引\"></a>普通索引</h3><ul>\n<li>tournament_registration: idx_tournament_status</li>\n</ul>\n<h2 id=\"初始化数据\"><a href=\"#初始化数据\" class=\"headerlink\" title=\"初始化数据\"></a>初始化数据</h2><p>详见 <a href=\"sql/init-data.sql\">init-data.sql</a> </p>\n"},{"title":"报名候补功能说明","date":"2025-02-03T16:00:00.000Z","_content":"\n# 赛事报名候补功能工作流程\n\n## 状态说明\n\n报名记录状态(status)包括：\n- `PENDING`: 正式报名\n- `WAITLIST`: 候补中\n- `APPROVED`: 已通过\n- `REJECTED`: 已拒绝\n\n## 报名流程\n\n### 1. 用户发起报名\n\n当用户点击\"立即报名\"按钮时：\n\n1. 系统检查赛事是否存在且处于报名阶段\n2. 检查用户是否已经报名过该赛事\n3. 检查当前报名人数：\n   - 如果未满：设置状态为 `PENDING`，增加当前参与人数\n   - 如果已满：设置状态为 `WAITLIST`，进入候补队列\n4. 创建报名记录，设置支付状态为 `UNPAID`\n\n### 2. 取消报名\n\n当用户点击\"取消报名\"按钮时：\n\n1. 系统检查报名记录是否存在\n2. 检查当前状态是否可取消（仅 `PENDING` 或 `WAITLIST` 状态可取消）\n3. 删除报名记录\n4. 如果取消的是正式报名（`PENDING`）：\n   - 减少赛事当前参与人数\n   - 触发候补队列处理\n\n### 3. 候补队列处理\n\n当有正式报名被取消时，系统自动处理候补：\n\n1. 检查赛事是否存在且未满员\n2. 获取最早的候补记录（按报名时间排序）\n3. 如果存在候补记录：\n   - 将状态更新为 `PENDING`\n   - 增加赛事当前参与人数\n   - 更新记录的更新时间\n\n## 前端展示\n\n1. 报名按钮：\n   - 当人数已满时，点击报名会提示\"当前报名人数已满，您将进入候补名单\"\n   - 用户确认后进入候补队列\n\n2. 报名列表：\n   - 使用不同颜色标签显示不同状态：\n     - 正式报名（绿色）\n     - 候补中（黄色）\n     - 已拒绝（红色）\n   - 列表排序规则：\n     1. 首先按状态排序：正式报名/已通过 > 候补中 > 已拒绝\n     2. 同一状态内按报名时间升序排列（先报名的在前）\n\n3. 用户详情：\n   - 点击用户时显示详细信息\n   - 实时查询最新的用户信息（包括握拍方式、球拍配置等）\n   - 确保显示的是用户的最新状态\n\n## 注意事项\n\n1. 只有正式报名（`PENDING`）状态才会占用赛事名额\n2. 候补队列严格按照报名时间先后顺序处理\n3. 取消报名后无法恢复，需要重新报名\n4. 候补用户可以随时取消报名\n5. 当有人取消报名时，系统自动处理候补队列，无需人工干预\n6. 用户详情信息（如握拍方式、球拍配置）通过实时查询获取，确保数据准确性 ","source":"_posts/32_报名候补功能说明.md","raw":"---\ntitle: 报名候补功能说明\ndate: 2025-02-04\ntags: \n  - 功能说明\n  - 报名管理\n---\n\n# 赛事报名候补功能工作流程\n\n## 状态说明\n\n报名记录状态(status)包括：\n- `PENDING`: 正式报名\n- `WAITLIST`: 候补中\n- `APPROVED`: 已通过\n- `REJECTED`: 已拒绝\n\n## 报名流程\n\n### 1. 用户发起报名\n\n当用户点击\"立即报名\"按钮时：\n\n1. 系统检查赛事是否存在且处于报名阶段\n2. 检查用户是否已经报名过该赛事\n3. 检查当前报名人数：\n   - 如果未满：设置状态为 `PENDING`，增加当前参与人数\n   - 如果已满：设置状态为 `WAITLIST`，进入候补队列\n4. 创建报名记录，设置支付状态为 `UNPAID`\n\n### 2. 取消报名\n\n当用户点击\"取消报名\"按钮时：\n\n1. 系统检查报名记录是否存在\n2. 检查当前状态是否可取消（仅 `PENDING` 或 `WAITLIST` 状态可取消）\n3. 删除报名记录\n4. 如果取消的是正式报名（`PENDING`）：\n   - 减少赛事当前参与人数\n   - 触发候补队列处理\n\n### 3. 候补队列处理\n\n当有正式报名被取消时，系统自动处理候补：\n\n1. 检查赛事是否存在且未满员\n2. 获取最早的候补记录（按报名时间排序）\n3. 如果存在候补记录：\n   - 将状态更新为 `PENDING`\n   - 增加赛事当前参与人数\n   - 更新记录的更新时间\n\n## 前端展示\n\n1. 报名按钮：\n   - 当人数已满时，点击报名会提示\"当前报名人数已满，您将进入候补名单\"\n   - 用户确认后进入候补队列\n\n2. 报名列表：\n   - 使用不同颜色标签显示不同状态：\n     - 正式报名（绿色）\n     - 候补中（黄色）\n     - 已拒绝（红色）\n   - 列表排序规则：\n     1. 首先按状态排序：正式报名/已通过 > 候补中 > 已拒绝\n     2. 同一状态内按报名时间升序排列（先报名的在前）\n\n3. 用户详情：\n   - 点击用户时显示详细信息\n   - 实时查询最新的用户信息（包括握拍方式、球拍配置等）\n   - 确保显示的是用户的最新状态\n\n## 注意事项\n\n1. 只有正式报名（`PENDING`）状态才会占用赛事名额\n2. 候补队列严格按照报名时间先后顺序处理\n3. 取消报名后无法恢复，需要重新报名\n4. 候补用户可以随时取消报名\n5. 当有人取消报名时，系统自动处理候补队列，无需人工干预\n6. 用户详情信息（如握拍方式、球拍配置）通过实时查询获取，确保数据准确性 ","slug":"32_报名候补功能说明","published":1,"updated":"2025-02-04T14:55:07.857Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvou0005bq2zhipw4ck4","content":"<h1 id=\"赛事报名候补功能工作流程\"><a href=\"#赛事报名候补功能工作流程\" class=\"headerlink\" title=\"赛事报名候补功能工作流程\"></a>赛事报名候补功能工作流程</h1><h2 id=\"状态说明\"><a href=\"#状态说明\" class=\"headerlink\" title=\"状态说明\"></a>状态说明</h2><p>报名记录状态(status)包括：</p>\n<ul>\n<li><code>PENDING</code>: 正式报名</li>\n<li><code>WAITLIST</code>: 候补中</li>\n<li><code>APPROVED</code>: 已通过</li>\n<li><code>REJECTED</code>: 已拒绝</li>\n</ul>\n<h2 id=\"报名流程\"><a href=\"#报名流程\" class=\"headerlink\" title=\"报名流程\"></a>报名流程</h2><h3 id=\"1-用户发起报名\"><a href=\"#1-用户发起报名\" class=\"headerlink\" title=\"1. 用户发起报名\"></a>1. 用户发起报名</h3><p>当用户点击”立即报名”按钮时：</p>\n<ol>\n<li>系统检查赛事是否存在且处于报名阶段</li>\n<li>检查用户是否已经报名过该赛事</li>\n<li>检查当前报名人数：<ul>\n<li>如果未满：设置状态为 <code>PENDING</code>，增加当前参与人数</li>\n<li>如果已满：设置状态为 <code>WAITLIST</code>，进入候补队列</li>\n</ul>\n</li>\n<li>创建报名记录，设置支付状态为 <code>UNPAID</code></li>\n</ol>\n<h3 id=\"2-取消报名\"><a href=\"#2-取消报名\" class=\"headerlink\" title=\"2. 取消报名\"></a>2. 取消报名</h3><p>当用户点击”取消报名”按钮时：</p>\n<ol>\n<li>系统检查报名记录是否存在</li>\n<li>检查当前状态是否可取消（仅 <code>PENDING</code> 或 <code>WAITLIST</code> 状态可取消）</li>\n<li>删除报名记录</li>\n<li>如果取消的是正式报名（<code>PENDING</code>）：<ul>\n<li>减少赛事当前参与人数</li>\n<li>触发候补队列处理</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-候补队列处理\"><a href=\"#3-候补队列处理\" class=\"headerlink\" title=\"3. 候补队列处理\"></a>3. 候补队列处理</h3><p>当有正式报名被取消时，系统自动处理候补：</p>\n<ol>\n<li>检查赛事是否存在且未满员</li>\n<li>获取最早的候补记录（按报名时间排序）</li>\n<li>如果存在候补记录：<ul>\n<li>将状态更新为 <code>PENDING</code></li>\n<li>增加赛事当前参与人数</li>\n<li>更新记录的更新时间</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"前端展示\"><a href=\"#前端展示\" class=\"headerlink\" title=\"前端展示\"></a>前端展示</h2><ol>\n<li><p>报名按钮：</p>\n<ul>\n<li>当人数已满时，点击报名会提示”当前报名人数已满，您将进入候补名单”</li>\n<li>用户确认后进入候补队列</li>\n</ul>\n</li>\n<li><p>报名列表：</p>\n<ul>\n<li>使用不同颜色标签显示不同状态：<ul>\n<li>正式报名（绿色）</li>\n<li>候补中（黄色）</li>\n<li>已拒绝（红色）</li>\n</ul>\n</li>\n<li>列表排序规则：<ol>\n<li>首先按状态排序：正式报名/已通过 &gt; 候补中 &gt; 已拒绝</li>\n<li>同一状态内按报名时间升序排列（先报名的在前）</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>用户详情：</p>\n<ul>\n<li>点击用户时显示详细信息</li>\n<li>实时查询最新的用户信息（包括握拍方式、球拍配置等）</li>\n<li>确保显示的是用户的最新状态</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ol>\n<li>只有正式报名（<code>PENDING</code>）状态才会占用赛事名额</li>\n<li>候补队列严格按照报名时间先后顺序处理</li>\n<li>取消报名后无法恢复，需要重新报名</li>\n<li>候补用户可以随时取消报名</li>\n<li>当有人取消报名时，系统自动处理候补队列，无需人工干预</li>\n<li>用户详情信息（如握拍方式、球拍配置）通过实时查询获取，确保数据准确性 </li>\n</ol>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"赛事报名候补功能工作流程\"><a href=\"#赛事报名候补功能工作流程\" class=\"headerlink\" title=\"赛事报名候补功能工作流程\"></a>赛事报名候补功能工作流程</h1><h2 id=\"状态说明\"><a href=\"#状态说明\" class=\"headerlink\" title=\"状态说明\"></a>状态说明</h2><p>报名记录状态(status)包括：</p>\n<ul>\n<li><code>PENDING</code>: 正式报名</li>\n<li><code>WAITLIST</code>: 候补中</li>\n<li><code>APPROVED</code>: 已通过</li>\n<li><code>REJECTED</code>: 已拒绝</li>\n</ul>\n<h2 id=\"报名流程\"><a href=\"#报名流程\" class=\"headerlink\" title=\"报名流程\"></a>报名流程</h2><h3 id=\"1-用户发起报名\"><a href=\"#1-用户发起报名\" class=\"headerlink\" title=\"1. 用户发起报名\"></a>1. 用户发起报名</h3><p>当用户点击”立即报名”按钮时：</p>\n<ol>\n<li>系统检查赛事是否存在且处于报名阶段</li>\n<li>检查用户是否已经报名过该赛事</li>\n<li>检查当前报名人数：<ul>\n<li>如果未满：设置状态为 <code>PENDING</code>，增加当前参与人数</li>\n<li>如果已满：设置状态为 <code>WAITLIST</code>，进入候补队列</li>\n</ul>\n</li>\n<li>创建报名记录，设置支付状态为 <code>UNPAID</code></li>\n</ol>\n<h3 id=\"2-取消报名\"><a href=\"#2-取消报名\" class=\"headerlink\" title=\"2. 取消报名\"></a>2. 取消报名</h3><p>当用户点击”取消报名”按钮时：</p>\n<ol>\n<li>系统检查报名记录是否存在</li>\n<li>检查当前状态是否可取消（仅 <code>PENDING</code> 或 <code>WAITLIST</code> 状态可取消）</li>\n<li>删除报名记录</li>\n<li>如果取消的是正式报名（<code>PENDING</code>）：<ul>\n<li>减少赛事当前参与人数</li>\n<li>触发候补队列处理</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-候补队列处理\"><a href=\"#3-候补队列处理\" class=\"headerlink\" title=\"3. 候补队列处理\"></a>3. 候补队列处理</h3><p>当有正式报名被取消时，系统自动处理候补：</p>\n<ol>\n<li>检查赛事是否存在且未满员</li>\n<li>获取最早的候补记录（按报名时间排序）</li>\n<li>如果存在候补记录：<ul>\n<li>将状态更新为 <code>PENDING</code></li>\n<li>增加赛事当前参与人数</li>\n<li>更新记录的更新时间</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"前端展示\"><a href=\"#前端展示\" class=\"headerlink\" title=\"前端展示\"></a>前端展示</h2><ol>\n<li><p>报名按钮：</p>\n<ul>\n<li>当人数已满时，点击报名会提示”当前报名人数已满，您将进入候补名单”</li>\n<li>用户确认后进入候补队列</li>\n</ul>\n</li>\n<li><p>报名列表：</p>\n<ul>\n<li>使用不同颜色标签显示不同状态：<ul>\n<li>正式报名（绿色）</li>\n<li>候补中（黄色）</li>\n<li>已拒绝（红色）</li>\n</ul>\n</li>\n<li>列表排序规则：<ol>\n<li>首先按状态排序：正式报名/已通过 &gt; 候补中 &gt; 已拒绝</li>\n<li>同一状态内按报名时间升序排列（先报名的在前）</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>用户详情：</p>\n<ul>\n<li>点击用户时显示详细信息</li>\n<li>实时查询最新的用户信息（包括握拍方式、球拍配置等）</li>\n<li>确保显示的是用户的最新状态</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ol>\n<li>只有正式报名（<code>PENDING</code>）状态才会占用赛事名额</li>\n<li>候补队列严格按照报名时间先后顺序处理</li>\n<li>取消报名后无法恢复，需要重新报名</li>\n<li>候补用户可以随时取消报名</li>\n<li>当有人取消报名时，系统自动处理候补队列，无需人工干预</li>\n<li>用户详情信息（如握拍方式、球拍配置）通过实时查询获取，确保数据准确性 </li>\n</ol>\n"},{"title":"403权限问题排查","date":"2025-02-03T16:00:00.000Z","_content":"\n ","source":"_posts/34_403权限问题排查.md","raw":"---\ntitle: 403权限问题排查\ndate: 2025-02-04\ntags: \n  - 问题排查\n  - 权限管理\n---\n\n ","slug":"34_403权限问题排查","published":1,"updated":"2025-02-04T14:55:07.888Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvou0006bq2zcl07fs6j","content":"<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":""},{"title":"用户权限模型说明","date":"2025-02-03T16:00:00.000Z","_content":"\n ","source":"_posts/35_用户权限模型说明.md","raw":"---\ntitle: 用户权限模型说明\ndate: 2025-02-04\ntags: \n  - 数据模型\n  - 权限管理\n---\n\n ","slug":"35_用户权限模型说明","published":1,"updated":"2025-02-04T14:55:07.920Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvou0007bq2zehle190g","content":"<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":""},{"_content":"# 积分系统设计说明\n\n## 一、系统概述\n积分系统是Mini Sports平台的核心功能之一，用于记录和管理用户在平台上的活动积分，支持积分获取、消耗、等级晋升等功能。\n\n## 二、数据库设计\n\n### 1. 表结构说明\n\n#### points_rule 积分规则表\n存储各类行为对应的积分规则，包括获取和消耗规则\n\n#### points_record 积分记录表\n记录用户积分变更历史，包括获取和消耗记录\n\n#### points_level 积分等级表\n定义积分等级划分标准和对应权益\n\n### 2. 字段说明\n\n#### points_rule 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 规则ID |\n| type | varchar(50) | 规则类型(GAIN-获取,COST-消耗) |\n| action | varchar(50) | 行为编码 |\n| name | varchar(100) | 规则名称 |\n| points | int | 积分值 |\n| description | varchar(200) | 规则描述 |\n| status | tinyint | 状态(0-禁用,1-启用) |\n| created_at | datetime | 创建时间 |\n| updated_at | datetime | 更新时间 |\n\n#### points_record 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 记录ID |\n| user_id | bigint | 用户ID |\n| rule_id | bigint | 规则ID |\n| type | varchar(50) | 类型(GAIN-获取,COST-消耗) |\n| points | int | 积分值 |\n| balance | int | 变更后余额 |\n| description | varchar(200) | 变更说明 |\n| ref_id | bigint | 关联业务ID |\n| created_at | datetime | 创建时间 |\n\n#### points_level 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 等级ID |\n| code | varchar(50) | 等级编码 |\n| name | varchar(100) | 等级名称 |\n| min_points | int | 最小积分 |\n| max_points | int | 最大积分 |\n| description | varchar(200) | 等级说明 |\n| created_at | datetime | 创建时间 |\n| updated_at | datetime | 更新时间 |\n\n## 三、核心功能\n\n### 1. 积分获取\n- 比赛胜利获取积分\n- 比赛平局获取积分\n\n### 2. 积分消耗\n- 比赛失败扣减积分\n\n### 3. 等级晋升\n- 根据积分自动计算等级\n- 等级变更实时通知\n- 等级权益自动生效\n\n### 4. 积分排行\n- 总积分排行榜\n- 周期性积分排行\n- 特定赛事积分排行\n\n## 四、业务流程\n\n### 1. 积分获取流程\n1. 触发积分获取场景\n2. 查询对应积分规则\n3. 计算获取积分数\n4. 更新用户积分\n5. 记录积分变更\n6. 检查等级变更\n7. 发送变更通知\n\n### 2. 积分消耗流程\n1. 发起积分消耗\n2. 校验积分余额\n3. 冻结所需积分\n4. 完成业务操作\n5. 扣减冻结积分\n6. 记录消耗记录\n7. 更新等级信息\n\n### 3. 等级晋升流程\n1. 积分变更触发\n2. 计算最新积分\n3. 查询等级配置\n4. 确定目标等级\n5. 执行等级变更\n6. 发放等级权益\n7. 推送晋升通知\n\n## 五、注意事项\n\n1. 积分安全\n- 积分变更必须有明确来源\n- 重要操作需要添加日志\n- 防止积分重复发放\n\n2. 性能优化\n- 高频接口添加缓存\n- 批量处理大量数据\n- 异步处理非实时业务\n\n3. 数据一致性\n- 使用事务保证原子性\n- 关键流程添加幂等\n- 定期数据对账校验","source":"_posts/36_积分系统设计说明.md","raw":"# 积分系统设计说明\n\n## 一、系统概述\n积分系统是Mini Sports平台的核心功能之一，用于记录和管理用户在平台上的活动积分，支持积分获取、消耗、等级晋升等功能。\n\n## 二、数据库设计\n\n### 1. 表结构说明\n\n#### points_rule 积分规则表\n存储各类行为对应的积分规则，包括获取和消耗规则\n\n#### points_record 积分记录表\n记录用户积分变更历史，包括获取和消耗记录\n\n#### points_level 积分等级表\n定义积分等级划分标准和对应权益\n\n### 2. 字段说明\n\n#### points_rule 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 规则ID |\n| type | varchar(50) | 规则类型(GAIN-获取,COST-消耗) |\n| action | varchar(50) | 行为编码 |\n| name | varchar(100) | 规则名称 |\n| points | int | 积分值 |\n| description | varchar(200) | 规则描述 |\n| status | tinyint | 状态(0-禁用,1-启用) |\n| created_at | datetime | 创建时间 |\n| updated_at | datetime | 更新时间 |\n\n#### points_record 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 记录ID |\n| user_id | bigint | 用户ID |\n| rule_id | bigint | 规则ID |\n| type | varchar(50) | 类型(GAIN-获取,COST-消耗) |\n| points | int | 积分值 |\n| balance | int | 变更后余额 |\n| description | varchar(200) | 变更说明 |\n| ref_id | bigint | 关联业务ID |\n| created_at | datetime | 创建时间 |\n\n#### points_level 表\n| 字段名 | 类型 | 说明 |\n|--------|------|------|\n| id | bigint | 等级ID |\n| code | varchar(50) | 等级编码 |\n| name | varchar(100) | 等级名称 |\n| min_points | int | 最小积分 |\n| max_points | int | 最大积分 |\n| description | varchar(200) | 等级说明 |\n| created_at | datetime | 创建时间 |\n| updated_at | datetime | 更新时间 |\n\n## 三、核心功能\n\n### 1. 积分获取\n- 比赛胜利获取积分\n- 比赛平局获取积分\n\n### 2. 积分消耗\n- 比赛失败扣减积分\n\n### 3. 等级晋升\n- 根据积分自动计算等级\n- 等级变更实时通知\n- 等级权益自动生效\n\n### 4. 积分排行\n- 总积分排行榜\n- 周期性积分排行\n- 特定赛事积分排行\n\n## 四、业务流程\n\n### 1. 积分获取流程\n1. 触发积分获取场景\n2. 查询对应积分规则\n3. 计算获取积分数\n4. 更新用户积分\n5. 记录积分变更\n6. 检查等级变更\n7. 发送变更通知\n\n### 2. 积分消耗流程\n1. 发起积分消耗\n2. 校验积分余额\n3. 冻结所需积分\n4. 完成业务操作\n5. 扣减冻结积分\n6. 记录消耗记录\n7. 更新等级信息\n\n### 3. 等级晋升流程\n1. 积分变更触发\n2. 计算最新积分\n3. 查询等级配置\n4. 确定目标等级\n5. 执行等级变更\n6. 发放等级权益\n7. 推送晋升通知\n\n## 五、注意事项\n\n1. 积分安全\n- 积分变更必须有明确来源\n- 重要操作需要添加日志\n- 防止积分重复发放\n\n2. 性能优化\n- 高频接口添加缓存\n- 批量处理大量数据\n- 异步处理非实时业务\n\n3. 数据一致性\n- 使用事务保证原子性\n- 关键流程添加幂等\n- 定期数据对账校验","slug":"36_积分系统设计说明","published":1,"date":"2025-02-08T18:06:16.799Z","updated":"2025-02-08T18:06:16.801Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvov0009bq2zebm34yjg","content":"<h1 id=\"积分系统设计说明\"><a href=\"#积分系统设计说明\" class=\"headerlink\" title=\"积分系统设计说明\"></a>积分系统设计说明</h1><h2 id=\"一、系统概述\"><a href=\"#一、系统概述\" class=\"headerlink\" title=\"一、系统概述\"></a>一、系统概述</h2><p>积分系统是Mini Sports平台的核心功能之一，用于记录和管理用户在平台上的活动积分，支持积分获取、消耗、等级晋升等功能。</p>\n<h2 id=\"二、数据库设计\"><a href=\"#二、数据库设计\" class=\"headerlink\" title=\"二、数据库设计\"></a>二、数据库设计</h2><h3 id=\"1-表结构说明\"><a href=\"#1-表结构说明\" class=\"headerlink\" title=\"1. 表结构说明\"></a>1. 表结构说明</h3><h4 id=\"points-rule-积分规则表\"><a href=\"#points-rule-积分规则表\" class=\"headerlink\" title=\"points_rule 积分规则表\"></a>points_rule 积分规则表</h4><p>存储各类行为对应的积分规则，包括获取和消耗规则</p>\n<h4 id=\"points-record-积分记录表\"><a href=\"#points-record-积分记录表\" class=\"headerlink\" title=\"points_record 积分记录表\"></a>points_record 积分记录表</h4><p>记录用户积分变更历史，包括获取和消耗记录</p>\n<h4 id=\"points-level-积分等级表\"><a href=\"#points-level-积分等级表\" class=\"headerlink\" title=\"points_level 积分等级表\"></a>points_level 积分等级表</h4><p>定义积分等级划分标准和对应权益</p>\n<h3 id=\"2-字段说明\"><a href=\"#2-字段说明\" class=\"headerlink\" title=\"2. 字段说明\"></a>2. 字段说明</h3><h4 id=\"points-rule-表\"><a href=\"#points-rule-表\" class=\"headerlink\" title=\"points_rule 表\"></a>points_rule 表</h4><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>规则ID</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(50)</td>\n<td>规则类型(GAIN-获取,COST-消耗)</td>\n</tr>\n<tr>\n<td>action</td>\n<td>varchar(50)</td>\n<td>行为编码</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(100)</td>\n<td>规则名称</td>\n</tr>\n<tr>\n<td>points</td>\n<td>int</td>\n<td>积分值</td>\n</tr>\n<tr>\n<td>description</td>\n<td>varchar(200)</td>\n<td>规则描述</td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td>状态(0-禁用,1-启用)</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>datetime</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>datetime</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"points-record-表\"><a href=\"#points-record-表\" class=\"headerlink\" title=\"points_record 表\"></a>points_record 表</h4><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>记录ID</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>rule_id</td>\n<td>bigint</td>\n<td>规则ID</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(50)</td>\n<td>类型(GAIN-获取,COST-消耗)</td>\n</tr>\n<tr>\n<td>points</td>\n<td>int</td>\n<td>积分值</td>\n</tr>\n<tr>\n<td>balance</td>\n<td>int</td>\n<td>变更后余额</td>\n</tr>\n<tr>\n<td>description</td>\n<td>varchar(200)</td>\n<td>变更说明</td>\n</tr>\n<tr>\n<td>ref_id</td>\n<td>bigint</td>\n<td>关联业务ID</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>datetime</td>\n<td>创建时间</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"points-level-表\"><a href=\"#points-level-表\" class=\"headerlink\" title=\"points_level 表\"></a>points_level 表</h4><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>等级ID</td>\n</tr>\n<tr>\n<td>code</td>\n<td>varchar(50)</td>\n<td>等级编码</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(100)</td>\n<td>等级名称</td>\n</tr>\n<tr>\n<td>min_points</td>\n<td>int</td>\n<td>最小积分</td>\n</tr>\n<tr>\n<td>max_points</td>\n<td>int</td>\n<td>最大积分</td>\n</tr>\n<tr>\n<td>description</td>\n<td>varchar(200)</td>\n<td>等级说明</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>datetime</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>datetime</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"三、核心功能\"><a href=\"#三、核心功能\" class=\"headerlink\" title=\"三、核心功能\"></a>三、核心功能</h2><h3 id=\"1-积分获取\"><a href=\"#1-积分获取\" class=\"headerlink\" title=\"1. 积分获取\"></a>1. 积分获取</h3><ul>\n<li>比赛胜利获取积分</li>\n<li>比赛平局获取积分</li>\n</ul>\n<h3 id=\"2-积分消耗\"><a href=\"#2-积分消耗\" class=\"headerlink\" title=\"2. 积分消耗\"></a>2. 积分消耗</h3><ul>\n<li>比赛失败扣减积分</li>\n</ul>\n<h3 id=\"3-等级晋升\"><a href=\"#3-等级晋升\" class=\"headerlink\" title=\"3. 等级晋升\"></a>3. 等级晋升</h3><ul>\n<li>根据积分自动计算等级</li>\n<li>等级变更实时通知</li>\n<li>等级权益自动生效</li>\n</ul>\n<h3 id=\"4-积分排行\"><a href=\"#4-积分排行\" class=\"headerlink\" title=\"4. 积分排行\"></a>4. 积分排行</h3><ul>\n<li>总积分排行榜</li>\n<li>周期性积分排行</li>\n<li>特定赛事积分排行</li>\n</ul>\n<h2 id=\"四、业务流程\"><a href=\"#四、业务流程\" class=\"headerlink\" title=\"四、业务流程\"></a>四、业务流程</h2><h3 id=\"1-积分获取流程\"><a href=\"#1-积分获取流程\" class=\"headerlink\" title=\"1. 积分获取流程\"></a>1. 积分获取流程</h3><ol>\n<li>触发积分获取场景</li>\n<li>查询对应积分规则</li>\n<li>计算获取积分数</li>\n<li>更新用户积分</li>\n<li>记录积分变更</li>\n<li>检查等级变更</li>\n<li>发送变更通知</li>\n</ol>\n<h3 id=\"2-积分消耗流程\"><a href=\"#2-积分消耗流程\" class=\"headerlink\" title=\"2. 积分消耗流程\"></a>2. 积分消耗流程</h3><ol>\n<li>发起积分消耗</li>\n<li>校验积分余额</li>\n<li>冻结所需积分</li>\n<li>完成业务操作</li>\n<li>扣减冻结积分</li>\n<li>记录消耗记录</li>\n<li>更新等级信息</li>\n</ol>\n<h3 id=\"3-等级晋升流程\"><a href=\"#3-等级晋升流程\" class=\"headerlink\" title=\"3. 等级晋升流程\"></a>3. 等级晋升流程</h3><ol>\n<li>积分变更触发</li>\n<li>计算最新积分</li>\n<li>查询等级配置</li>\n<li>确定目标等级</li>\n<li>执行等级变更</li>\n<li>发放等级权益</li>\n<li>推送晋升通知</li>\n</ol>\n<h2 id=\"五、注意事项\"><a href=\"#五、注意事项\" class=\"headerlink\" title=\"五、注意事项\"></a>五、注意事项</h2><ol>\n<li>积分安全</li>\n</ol>\n<ul>\n<li>积分变更必须有明确来源</li>\n<li>重要操作需要添加日志</li>\n<li>防止积分重复发放</li>\n</ul>\n<ol start=\"2\">\n<li>性能优化</li>\n</ol>\n<ul>\n<li>高频接口添加缓存</li>\n<li>批量处理大量数据</li>\n<li>异步处理非实时业务</li>\n</ul>\n<ol start=\"3\">\n<li>数据一致性</li>\n</ol>\n<ul>\n<li>使用事务保证原子性</li>\n<li>关键流程添加幂等</li>\n<li>定期数据对账校验</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"积分系统设计说明\"><a href=\"#积分系统设计说明\" class=\"headerlink\" title=\"积分系统设计说明\"></a>积分系统设计说明</h1><h2 id=\"一、系统概述\"><a href=\"#一、系统概述\" class=\"headerlink\" title=\"一、系统概述\"></a>一、系统概述</h2><p>积分系统是Mini Sports平台的核心功能之一，用于记录和管理用户在平台上的活动积分，支持积分获取、消耗、等级晋升等功能。</p>\n<h2 id=\"二、数据库设计\"><a href=\"#二、数据库设计\" class=\"headerlink\" title=\"二、数据库设计\"></a>二、数据库设计</h2><h3 id=\"1-表结构说明\"><a href=\"#1-表结构说明\" class=\"headerlink\" title=\"1. 表结构说明\"></a>1. 表结构说明</h3><h4 id=\"points-rule-积分规则表\"><a href=\"#points-rule-积分规则表\" class=\"headerlink\" title=\"points_rule 积分规则表\"></a>points_rule 积分规则表</h4><p>存储各类行为对应的积分规则，包括获取和消耗规则</p>\n<h4 id=\"points-record-积分记录表\"><a href=\"#points-record-积分记录表\" class=\"headerlink\" title=\"points_record 积分记录表\"></a>points_record 积分记录表</h4><p>记录用户积分变更历史，包括获取和消耗记录</p>\n<h4 id=\"points-level-积分等级表\"><a href=\"#points-level-积分等级表\" class=\"headerlink\" title=\"points_level 积分等级表\"></a>points_level 积分等级表</h4><p>定义积分等级划分标准和对应权益</p>\n<h3 id=\"2-字段说明\"><a href=\"#2-字段说明\" class=\"headerlink\" title=\"2. 字段说明\"></a>2. 字段说明</h3><h4 id=\"points-rule-表\"><a href=\"#points-rule-表\" class=\"headerlink\" title=\"points_rule 表\"></a>points_rule 表</h4><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>规则ID</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(50)</td>\n<td>规则类型(GAIN-获取,COST-消耗)</td>\n</tr>\n<tr>\n<td>action</td>\n<td>varchar(50)</td>\n<td>行为编码</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(100)</td>\n<td>规则名称</td>\n</tr>\n<tr>\n<td>points</td>\n<td>int</td>\n<td>积分值</td>\n</tr>\n<tr>\n<td>description</td>\n<td>varchar(200)</td>\n<td>规则描述</td>\n</tr>\n<tr>\n<td>status</td>\n<td>tinyint</td>\n<td>状态(0-禁用,1-启用)</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>datetime</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>datetime</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"points-record-表\"><a href=\"#points-record-表\" class=\"headerlink\" title=\"points_record 表\"></a>points_record 表</h4><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>记录ID</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>rule_id</td>\n<td>bigint</td>\n<td>规则ID</td>\n</tr>\n<tr>\n<td>type</td>\n<td>varchar(50)</td>\n<td>类型(GAIN-获取,COST-消耗)</td>\n</tr>\n<tr>\n<td>points</td>\n<td>int</td>\n<td>积分值</td>\n</tr>\n<tr>\n<td>balance</td>\n<td>int</td>\n<td>变更后余额</td>\n</tr>\n<tr>\n<td>description</td>\n<td>varchar(200)</td>\n<td>变更说明</td>\n</tr>\n<tr>\n<td>ref_id</td>\n<td>bigint</td>\n<td>关联业务ID</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>datetime</td>\n<td>创建时间</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"points-level-表\"><a href=\"#points-level-表\" class=\"headerlink\" title=\"points_level 表\"></a>points_level 表</h4><table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>bigint</td>\n<td>等级ID</td>\n</tr>\n<tr>\n<td>code</td>\n<td>varchar(50)</td>\n<td>等级编码</td>\n</tr>\n<tr>\n<td>name</td>\n<td>varchar(100)</td>\n<td>等级名称</td>\n</tr>\n<tr>\n<td>min_points</td>\n<td>int</td>\n<td>最小积分</td>\n</tr>\n<tr>\n<td>max_points</td>\n<td>int</td>\n<td>最大积分</td>\n</tr>\n<tr>\n<td>description</td>\n<td>varchar(200)</td>\n<td>等级说明</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>datetime</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>datetime</td>\n<td>更新时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"三、核心功能\"><a href=\"#三、核心功能\" class=\"headerlink\" title=\"三、核心功能\"></a>三、核心功能</h2><h3 id=\"1-积分获取\"><a href=\"#1-积分获取\" class=\"headerlink\" title=\"1. 积分获取\"></a>1. 积分获取</h3><ul>\n<li>比赛胜利获取积分</li>\n<li>比赛平局获取积分</li>\n</ul>\n<h3 id=\"2-积分消耗\"><a href=\"#2-积分消耗\" class=\"headerlink\" title=\"2. 积分消耗\"></a>2. 积分消耗</h3><ul>\n<li>比赛失败扣减积分</li>\n</ul>\n<h3 id=\"3-等级晋升\"><a href=\"#3-等级晋升\" class=\"headerlink\" title=\"3. 等级晋升\"></a>3. 等级晋升</h3><ul>\n<li>根据积分自动计算等级</li>\n<li>等级变更实时通知</li>\n<li>等级权益自动生效</li>\n</ul>\n<h3 id=\"4-积分排行\"><a href=\"#4-积分排行\" class=\"headerlink\" title=\"4. 积分排行\"></a>4. 积分排行</h3><ul>\n<li>总积分排行榜</li>\n<li>周期性积分排行</li>\n<li>特定赛事积分排行</li>\n</ul>\n<h2 id=\"四、业务流程\"><a href=\"#四、业务流程\" class=\"headerlink\" title=\"四、业务流程\"></a>四、业务流程</h2><h3 id=\"1-积分获取流程\"><a href=\"#1-积分获取流程\" class=\"headerlink\" title=\"1. 积分获取流程\"></a>1. 积分获取流程</h3><ol>\n<li>触发积分获取场景</li>\n<li>查询对应积分规则</li>\n<li>计算获取积分数</li>\n<li>更新用户积分</li>\n<li>记录积分变更</li>\n<li>检查等级变更</li>\n<li>发送变更通知</li>\n</ol>\n<h3 id=\"2-积分消耗流程\"><a href=\"#2-积分消耗流程\" class=\"headerlink\" title=\"2. 积分消耗流程\"></a>2. 积分消耗流程</h3><ol>\n<li>发起积分消耗</li>\n<li>校验积分余额</li>\n<li>冻结所需积分</li>\n<li>完成业务操作</li>\n<li>扣减冻结积分</li>\n<li>记录消耗记录</li>\n<li>更新等级信息</li>\n</ol>\n<h3 id=\"3-等级晋升流程\"><a href=\"#3-等级晋升流程\" class=\"headerlink\" title=\"3. 等级晋升流程\"></a>3. 等级晋升流程</h3><ol>\n<li>积分变更触发</li>\n<li>计算最新积分</li>\n<li>查询等级配置</li>\n<li>确定目标等级</li>\n<li>执行等级变更</li>\n<li>发放等级权益</li>\n<li>推送晋升通知</li>\n</ol>\n<h2 id=\"五、注意事项\"><a href=\"#五、注意事项\" class=\"headerlink\" title=\"五、注意事项\"></a>五、注意事项</h2><ol>\n<li>积分安全</li>\n</ol>\n<ul>\n<li>积分变更必须有明确来源</li>\n<li>重要操作需要添加日志</li>\n<li>防止积分重复发放</li>\n</ul>\n<ol start=\"2\">\n<li>性能优化</li>\n</ol>\n<ul>\n<li>高频接口添加缓存</li>\n<li>批量处理大量数据</li>\n<li>异步处理非实时业务</li>\n</ul>\n<ol start=\"3\">\n<li>数据一致性</li>\n</ol>\n<ul>\n<li>使用事务保证原子性</li>\n<li>关键流程添加幂等</li>\n<li>定期数据对账校验</li>\n</ul>\n"},{"_content":"# 积分系统实现总结\n\n## 一、系统架构\n\n### 1. 核心模块\n- 积分规则管理\n- 积分计算引擎\n- 等级晋升系统\n- 积分历史记录\n\n### 2. 数据模型\n- 用户积分表：记录用户当前积分和等级\n- 积分规则表：配置不同行为的积分规则\n- 积分变更记录表：记录所有积分变动历史\n- 等级配置表：定义不同等级的积分要求\n\n## 二、数据流转\n\n### 1. 积分获取流程\n1. 触发积分场景（比赛结果、活动参与等）\n2. 查询对应积分规则\n3. 计算获取积分数\n4. 更新用户积分\n5. 记录积分变更\n6. 触发等级检查\n\n```mermaid\nsequenceDiagram\n    participant C as 客户端\n    participant S as 积分服务\n    participant R as 规则服务\n    participant DB as 数据库\n\n    C->>S: POST /api/points/earn\n    Note over C,S: 请求参数：用户ID、行为类型\n    S->>R: 获取积分规则\n    R->>DB: SELECT * FROM point_rules\n    DB-->>R: 返回规则配置\n    R-->>S: 返回规则信息\n    \n    S->>S: 计算获得积分\n    S->>DB: BEGIN TRANSACTION\n    S->>DB: UPDATE user_points\n    S->>DB: INSERT INTO point_history\n    S->>DB: COMMIT\n    \n    S->>S: 检查等级变更\n    S-->>C: 返回积分变更结果\n    Note over C,S: 响应：积分变更数量、当前积分、等级信息\n```\n\n### 2. 等级晋升流程\n1. 积分变更触发检查\n2. 获取用户当前积分\n3. 查询等级配置\n4. 判断是否满足晋升条件\n5. 执行等级更新\n6. 发送晋升通知\n\n```mermaid\nsequenceDiagram\n    participant S as 积分服务\n    participant L as 等级服务\n    participant N as 通知服务\n    participant DB as 数据库\n\n    S->>L: POST /api/level/check\n    Note over S,L: 请求参数：用户ID、当前积分\n    \n    L->>DB: SELECT * FROM level_config\n    DB-->>L: 返回等级配置\n    L->>L: 判断晋升条件\n    \n    alt 满足晋升条件\n        L->>DB: BEGIN TRANSACTION\n        L->>DB: UPDATE user_points SET level\n        L->>DB: INSERT INTO level_history\n        L->>DB: COMMIT\n        \n        L->>N: 发送晋升通知\n        N-->>L: 通知发送结果\n    end\n    \n    L-->>S: 返回等级更新结果\n    Note over S,L: 响应：新等级、权益信息\n```\n\n## 三、关键功能实现\n\n### 1. 积分规则管理\n- 支持多种积分获取场景\n- 灵活的规则配置\n- 规则版本管理\n\n### 2. 积分计算引擎\n- 实时计算\n- 批量处理能力\n- 事务保证\n\n### 3. 等级晋升系统\n- 自动晋升判定\n- 等级权益管理\n- 晋升通知推送\n\n### 4. 积分历史记录\n- 完整的变更记录\n- 支持多维度查询\n- 数据统计分析\n\n## 四、安全性保障\n\n### 1. 数据安全\n- 积分变更必须有明确来源\n- 关键操作记录日志\n- 防止重复计算\n\n### 2. 业务安全\n- 规则变更审核机制\n- 异常变更监控\n- 定期数据核对\n\n## 五、性能优化\n\n### 1. 查询优化\n- 合理使用缓存\n- 索引优化\n- 分页查询\n\n### 2. 计算优化\n- 批量处理\n- 异步计算\n- 定时任务\n\n## 六、后续优化方向\n\n### 1. 功能扩展\n- 积分兑换系统\n- 积分有效期管理\n- 特殊积分活动\n\n### 2. 性能提升\n- 引入分布式缓存\n- 优化计算逻辑\n- 添加预警机制\n\n### 3. 运营支持\n- 数据分析报表\n- 运营活动支持\n- 用户行为分析","source":"_posts/37_积分系统实现总结.md","raw":"# 积分系统实现总结\n\n## 一、系统架构\n\n### 1. 核心模块\n- 积分规则管理\n- 积分计算引擎\n- 等级晋升系统\n- 积分历史记录\n\n### 2. 数据模型\n- 用户积分表：记录用户当前积分和等级\n- 积分规则表：配置不同行为的积分规则\n- 积分变更记录表：记录所有积分变动历史\n- 等级配置表：定义不同等级的积分要求\n\n## 二、数据流转\n\n### 1. 积分获取流程\n1. 触发积分场景（比赛结果、活动参与等）\n2. 查询对应积分规则\n3. 计算获取积分数\n4. 更新用户积分\n5. 记录积分变更\n6. 触发等级检查\n\n```mermaid\nsequenceDiagram\n    participant C as 客户端\n    participant S as 积分服务\n    participant R as 规则服务\n    participant DB as 数据库\n\n    C->>S: POST /api/points/earn\n    Note over C,S: 请求参数：用户ID、行为类型\n    S->>R: 获取积分规则\n    R->>DB: SELECT * FROM point_rules\n    DB-->>R: 返回规则配置\n    R-->>S: 返回规则信息\n    \n    S->>S: 计算获得积分\n    S->>DB: BEGIN TRANSACTION\n    S->>DB: UPDATE user_points\n    S->>DB: INSERT INTO point_history\n    S->>DB: COMMIT\n    \n    S->>S: 检查等级变更\n    S-->>C: 返回积分变更结果\n    Note over C,S: 响应：积分变更数量、当前积分、等级信息\n```\n\n### 2. 等级晋升流程\n1. 积分变更触发检查\n2. 获取用户当前积分\n3. 查询等级配置\n4. 判断是否满足晋升条件\n5. 执行等级更新\n6. 发送晋升通知\n\n```mermaid\nsequenceDiagram\n    participant S as 积分服务\n    participant L as 等级服务\n    participant N as 通知服务\n    participant DB as 数据库\n\n    S->>L: POST /api/level/check\n    Note over S,L: 请求参数：用户ID、当前积分\n    \n    L->>DB: SELECT * FROM level_config\n    DB-->>L: 返回等级配置\n    L->>L: 判断晋升条件\n    \n    alt 满足晋升条件\n        L->>DB: BEGIN TRANSACTION\n        L->>DB: UPDATE user_points SET level\n        L->>DB: INSERT INTO level_history\n        L->>DB: COMMIT\n        \n        L->>N: 发送晋升通知\n        N-->>L: 通知发送结果\n    end\n    \n    L-->>S: 返回等级更新结果\n    Note over S,L: 响应：新等级、权益信息\n```\n\n## 三、关键功能实现\n\n### 1. 积分规则管理\n- 支持多种积分获取场景\n- 灵活的规则配置\n- 规则版本管理\n\n### 2. 积分计算引擎\n- 实时计算\n- 批量处理能力\n- 事务保证\n\n### 3. 等级晋升系统\n- 自动晋升判定\n- 等级权益管理\n- 晋升通知推送\n\n### 4. 积分历史记录\n- 完整的变更记录\n- 支持多维度查询\n- 数据统计分析\n\n## 四、安全性保障\n\n### 1. 数据安全\n- 积分变更必须有明确来源\n- 关键操作记录日志\n- 防止重复计算\n\n### 2. 业务安全\n- 规则变更审核机制\n- 异常变更监控\n- 定期数据核对\n\n## 五、性能优化\n\n### 1. 查询优化\n- 合理使用缓存\n- 索引优化\n- 分页查询\n\n### 2. 计算优化\n- 批量处理\n- 异步计算\n- 定时任务\n\n## 六、后续优化方向\n\n### 1. 功能扩展\n- 积分兑换系统\n- 积分有效期管理\n- 特殊积分活动\n\n### 2. 性能提升\n- 引入分布式缓存\n- 优化计算逻辑\n- 添加预警机制\n\n### 3. 运营支持\n- 数据分析报表\n- 运营活动支持\n- 用户行为分析","slug":"37_积分系统实现总结","published":1,"date":"2025-02-08T18:06:16.811Z","updated":"2025-02-09T03:12:25.669Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvov000abq2za014e80d","content":"<h1 id=\"积分系统实现总结\"><a href=\"#积分系统实现总结\" class=\"headerlink\" title=\"积分系统实现总结\"></a>积分系统实现总结</h1><h2 id=\"一、系统架构\"><a href=\"#一、系统架构\" class=\"headerlink\" title=\"一、系统架构\"></a>一、系统架构</h2><h3 id=\"1-核心模块\"><a href=\"#1-核心模块\" class=\"headerlink\" title=\"1. 核心模块\"></a>1. 核心模块</h3><ul>\n<li>积分规则管理</li>\n<li>积分计算引擎</li>\n<li>等级晋升系统</li>\n<li>积分历史记录</li>\n</ul>\n<h3 id=\"2-数据模型\"><a href=\"#2-数据模型\" class=\"headerlink\" title=\"2. 数据模型\"></a>2. 数据模型</h3><ul>\n<li>用户积分表：记录用户当前积分和等级</li>\n<li>积分规则表：配置不同行为的积分规则</li>\n<li>积分变更记录表：记录所有积分变动历史</li>\n<li>等级配置表：定义不同等级的积分要求</li>\n</ul>\n<h2 id=\"二、数据流转\"><a href=\"#二、数据流转\" class=\"headerlink\" title=\"二、数据流转\"></a>二、数据流转</h2><h3 id=\"1-积分获取流程\"><a href=\"#1-积分获取流程\" class=\"headerlink\" title=\"1. 积分获取流程\"></a>1. 积分获取流程</h3><ol>\n<li>触发积分场景（比赛结果、活动参与等）</li>\n<li>查询对应积分规则</li>\n<li>计算获取积分数</li>\n<li>更新用户积分</li>\n<li>记录积分变更</li>\n<li>触发等级检查</li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    participant C as 客户端\n    participant S as 积分服务\n    participant R as 规则服务\n    participant DB as 数据库\n\n    C->>S: POST /api/points/earn\n    Note over C,S: 请求参数：用户ID、行为类型\n    S->>R: 获取积分规则\n    R->>DB: SELECT * FROM point_rules\n    DB-->>R: 返回规则配置\n    R-->>S: 返回规则信息\n\n    S->>S: 计算获得积分\n    S->>DB: BEGIN TRANSACTION\n    S->>DB: UPDATE user_points\n    S->>DB: INSERT INTO point_history\n    S->>DB: COMMIT\n\n    S->>S: 检查等级变更\n    S-->>C: 返回积分变更结果\n    Note over C,S: 响应：积分变更数量、当前积分、等级信息</pre>\n\n<h3 id=\"2-等级晋升流程\"><a href=\"#2-等级晋升流程\" class=\"headerlink\" title=\"2. 等级晋升流程\"></a>2. 等级晋升流程</h3><ol>\n<li>积分变更触发检查</li>\n<li>获取用户当前积分</li>\n<li>查询等级配置</li>\n<li>判断是否满足晋升条件</li>\n<li>执行等级更新</li>\n<li>发送晋升通知</li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    participant S as 积分服务\n    participant L as 等级服务\n    participant N as 通知服务\n    participant DB as 数据库\n\n    S->>L: POST /api/level/check\n    Note over S,L: 请求参数：用户ID、当前积分\n\n    L->>DB: SELECT * FROM level_config\n    DB-->>L: 返回等级配置\n    L->>L: 判断晋升条件\n\n    alt 满足晋升条件\n        L->>DB: BEGIN TRANSACTION\n        L->>DB: UPDATE user_points SET level\n        L->>DB: INSERT INTO level_history\n        L->>DB: COMMIT\n\n        L->>N: 发送晋升通知\n        N-->>L: 通知发送结果\n    end\n\n    L-->>S: 返回等级更新结果\n    Note over S,L: 响应：新等级、权益信息</pre>\n\n<h2 id=\"三、关键功能实现\"><a href=\"#三、关键功能实现\" class=\"headerlink\" title=\"三、关键功能实现\"></a>三、关键功能实现</h2><h3 id=\"1-积分规则管理\"><a href=\"#1-积分规则管理\" class=\"headerlink\" title=\"1. 积分规则管理\"></a>1. 积分规则管理</h3><ul>\n<li>支持多种积分获取场景</li>\n<li>灵活的规则配置</li>\n<li>规则版本管理</li>\n</ul>\n<h3 id=\"2-积分计算引擎\"><a href=\"#2-积分计算引擎\" class=\"headerlink\" title=\"2. 积分计算引擎\"></a>2. 积分计算引擎</h3><ul>\n<li>实时计算</li>\n<li>批量处理能力</li>\n<li>事务保证</li>\n</ul>\n<h3 id=\"3-等级晋升系统\"><a href=\"#3-等级晋升系统\" class=\"headerlink\" title=\"3. 等级晋升系统\"></a>3. 等级晋升系统</h3><ul>\n<li>自动晋升判定</li>\n<li>等级权益管理</li>\n<li>晋升通知推送</li>\n</ul>\n<h3 id=\"4-积分历史记录\"><a href=\"#4-积分历史记录\" class=\"headerlink\" title=\"4. 积分历史记录\"></a>4. 积分历史记录</h3><ul>\n<li>完整的变更记录</li>\n<li>支持多维度查询</li>\n<li>数据统计分析</li>\n</ul>\n<h2 id=\"四、安全性保障\"><a href=\"#四、安全性保障\" class=\"headerlink\" title=\"四、安全性保障\"></a>四、安全性保障</h2><h3 id=\"1-数据安全\"><a href=\"#1-数据安全\" class=\"headerlink\" title=\"1. 数据安全\"></a>1. 数据安全</h3><ul>\n<li>积分变更必须有明确来源</li>\n<li>关键操作记录日志</li>\n<li>防止重复计算</li>\n</ul>\n<h3 id=\"2-业务安全\"><a href=\"#2-业务安全\" class=\"headerlink\" title=\"2. 业务安全\"></a>2. 业务安全</h3><ul>\n<li>规则变更审核机制</li>\n<li>异常变更监控</li>\n<li>定期数据核对</li>\n</ul>\n<h2 id=\"五、性能优化\"><a href=\"#五、性能优化\" class=\"headerlink\" title=\"五、性能优化\"></a>五、性能优化</h2><h3 id=\"1-查询优化\"><a href=\"#1-查询优化\" class=\"headerlink\" title=\"1. 查询优化\"></a>1. 查询优化</h3><ul>\n<li>合理使用缓存</li>\n<li>索引优化</li>\n<li>分页查询</li>\n</ul>\n<h3 id=\"2-计算优化\"><a href=\"#2-计算优化\" class=\"headerlink\" title=\"2. 计算优化\"></a>2. 计算优化</h3><ul>\n<li>批量处理</li>\n<li>异步计算</li>\n<li>定时任务</li>\n</ul>\n<h2 id=\"六、后续优化方向\"><a href=\"#六、后续优化方向\" class=\"headerlink\" title=\"六、后续优化方向\"></a>六、后续优化方向</h2><h3 id=\"1-功能扩展\"><a href=\"#1-功能扩展\" class=\"headerlink\" title=\"1. 功能扩展\"></a>1. 功能扩展</h3><ul>\n<li>积分兑换系统</li>\n<li>积分有效期管理</li>\n<li>特殊积分活动</li>\n</ul>\n<h3 id=\"2-性能提升\"><a href=\"#2-性能提升\" class=\"headerlink\" title=\"2. 性能提升\"></a>2. 性能提升</h3><ul>\n<li>引入分布式缓存</li>\n<li>优化计算逻辑</li>\n<li>添加预警机制</li>\n</ul>\n<h3 id=\"3-运营支持\"><a href=\"#3-运营支持\" class=\"headerlink\" title=\"3. 运营支持\"></a>3. 运营支持</h3><ul>\n<li>数据分析报表</li>\n<li>运营活动支持</li>\n<li>用户行为分析</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"积分系统实现总结\"><a href=\"#积分系统实现总结\" class=\"headerlink\" title=\"积分系统实现总结\"></a>积分系统实现总结</h1><h2 id=\"一、系统架构\"><a href=\"#一、系统架构\" class=\"headerlink\" title=\"一、系统架构\"></a>一、系统架构</h2><h3 id=\"1-核心模块\"><a href=\"#1-核心模块\" class=\"headerlink\" title=\"1. 核心模块\"></a>1. 核心模块</h3><ul>\n<li>积分规则管理</li>\n<li>积分计算引擎</li>\n<li>等级晋升系统</li>\n<li>积分历史记录</li>\n</ul>\n<h3 id=\"2-数据模型\"><a href=\"#2-数据模型\" class=\"headerlink\" title=\"2. 数据模型\"></a>2. 数据模型</h3><ul>\n<li>用户积分表：记录用户当前积分和等级</li>\n<li>积分规则表：配置不同行为的积分规则</li>\n<li>积分变更记录表：记录所有积分变动历史</li>\n<li>等级配置表：定义不同等级的积分要求</li>\n</ul>\n<h2 id=\"二、数据流转\"><a href=\"#二、数据流转\" class=\"headerlink\" title=\"二、数据流转\"></a>二、数据流转</h2><h3 id=\"1-积分获取流程\"><a href=\"#1-积分获取流程\" class=\"headerlink\" title=\"1. 积分获取流程\"></a>1. 积分获取流程</h3><ol>\n<li>触发积分场景（比赛结果、活动参与等）</li>\n<li>查询对应积分规则</li>\n<li>计算获取积分数</li>\n<li>更新用户积分</li>\n<li>记录积分变更</li>\n<li>触发等级检查</li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    participant C as 客户端\n    participant S as 积分服务\n    participant R as 规则服务\n    participant DB as 数据库\n\n    C->>S: POST /api/points/earn\n    Note over C,S: 请求参数：用户ID、行为类型\n    S->>R: 获取积分规则\n    R->>DB: SELECT * FROM point_rules\n    DB-->>R: 返回规则配置\n    R-->>S: 返回规则信息\n\n    S->>S: 计算获得积分\n    S->>DB: BEGIN TRANSACTION\n    S->>DB: UPDATE user_points\n    S->>DB: INSERT INTO point_history\n    S->>DB: COMMIT\n\n    S->>S: 检查等级变更\n    S-->>C: 返回积分变更结果\n    Note over C,S: 响应：积分变更数量、当前积分、等级信息</pre>\n\n<h3 id=\"2-等级晋升流程\"><a href=\"#2-等级晋升流程\" class=\"headerlink\" title=\"2. 等级晋升流程\"></a>2. 等级晋升流程</h3><ol>\n<li>积分变更触发检查</li>\n<li>获取用户当前积分</li>\n<li>查询等级配置</li>\n<li>判断是否满足晋升条件</li>\n<li>执行等级更新</li>\n<li>发送晋升通知</li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    participant S as 积分服务\n    participant L as 等级服务\n    participant N as 通知服务\n    participant DB as 数据库\n\n    S->>L: POST /api/level/check\n    Note over S,L: 请求参数：用户ID、当前积分\n\n    L->>DB: SELECT * FROM level_config\n    DB-->>L: 返回等级配置\n    L->>L: 判断晋升条件\n\n    alt 满足晋升条件\n        L->>DB: BEGIN TRANSACTION\n        L->>DB: UPDATE user_points SET level\n        L->>DB: INSERT INTO level_history\n        L->>DB: COMMIT\n\n        L->>N: 发送晋升通知\n        N-->>L: 通知发送结果\n    end\n\n    L-->>S: 返回等级更新结果\n    Note over S,L: 响应：新等级、权益信息</pre>\n\n<h2 id=\"三、关键功能实现\"><a href=\"#三、关键功能实现\" class=\"headerlink\" title=\"三、关键功能实现\"></a>三、关键功能实现</h2><h3 id=\"1-积分规则管理\"><a href=\"#1-积分规则管理\" class=\"headerlink\" title=\"1. 积分规则管理\"></a>1. 积分规则管理</h3><ul>\n<li>支持多种积分获取场景</li>\n<li>灵活的规则配置</li>\n<li>规则版本管理</li>\n</ul>\n<h3 id=\"2-积分计算引擎\"><a href=\"#2-积分计算引擎\" class=\"headerlink\" title=\"2. 积分计算引擎\"></a>2. 积分计算引擎</h3><ul>\n<li>实时计算</li>\n<li>批量处理能力</li>\n<li>事务保证</li>\n</ul>\n<h3 id=\"3-等级晋升系统\"><a href=\"#3-等级晋升系统\" class=\"headerlink\" title=\"3. 等级晋升系统\"></a>3. 等级晋升系统</h3><ul>\n<li>自动晋升判定</li>\n<li>等级权益管理</li>\n<li>晋升通知推送</li>\n</ul>\n<h3 id=\"4-积分历史记录\"><a href=\"#4-积分历史记录\" class=\"headerlink\" title=\"4. 积分历史记录\"></a>4. 积分历史记录</h3><ul>\n<li>完整的变更记录</li>\n<li>支持多维度查询</li>\n<li>数据统计分析</li>\n</ul>\n<h2 id=\"四、安全性保障\"><a href=\"#四、安全性保障\" class=\"headerlink\" title=\"四、安全性保障\"></a>四、安全性保障</h2><h3 id=\"1-数据安全\"><a href=\"#1-数据安全\" class=\"headerlink\" title=\"1. 数据安全\"></a>1. 数据安全</h3><ul>\n<li>积分变更必须有明确来源</li>\n<li>关键操作记录日志</li>\n<li>防止重复计算</li>\n</ul>\n<h3 id=\"2-业务安全\"><a href=\"#2-业务安全\" class=\"headerlink\" title=\"2. 业务安全\"></a>2. 业务安全</h3><ul>\n<li>规则变更审核机制</li>\n<li>异常变更监控</li>\n<li>定期数据核对</li>\n</ul>\n<h2 id=\"五、性能优化\"><a href=\"#五、性能优化\" class=\"headerlink\" title=\"五、性能优化\"></a>五、性能优化</h2><h3 id=\"1-查询优化\"><a href=\"#1-查询优化\" class=\"headerlink\" title=\"1. 查询优化\"></a>1. 查询优化</h3><ul>\n<li>合理使用缓存</li>\n<li>索引优化</li>\n<li>分页查询</li>\n</ul>\n<h3 id=\"2-计算优化\"><a href=\"#2-计算优化\" class=\"headerlink\" title=\"2. 计算优化\"></a>2. 计算优化</h3><ul>\n<li>批量处理</li>\n<li>异步计算</li>\n<li>定时任务</li>\n</ul>\n<h2 id=\"六、后续优化方向\"><a href=\"#六、后续优化方向\" class=\"headerlink\" title=\"六、后续优化方向\"></a>六、后续优化方向</h2><h3 id=\"1-功能扩展\"><a href=\"#1-功能扩展\" class=\"headerlink\" title=\"1. 功能扩展\"></a>1. 功能扩展</h3><ul>\n<li>积分兑换系统</li>\n<li>积分有效期管理</li>\n<li>特殊积分活动</li>\n</ul>\n<h3 id=\"2-性能提升\"><a href=\"#2-性能提升\" class=\"headerlink\" title=\"2. 性能提升\"></a>2. 性能提升</h3><ul>\n<li>引入分布式缓存</li>\n<li>优化计算逻辑</li>\n<li>添加预警机制</li>\n</ul>\n<h3 id=\"3-运营支持\"><a href=\"#3-运营支持\" class=\"headerlink\" title=\"3. 运营支持\"></a>3. 运营支持</h3><ul>\n<li>数据分析报表</li>\n<li>运营活动支持</li>\n<li>用户行为分析</li>\n</ul>\n"},{"title":"API路径问题排查","date":"2025-02-03T16:00:00.000Z","_content":" ","source":"_posts/33_API路径问题排查.md","raw":"---\ntitle: API路径问题排查\ndate: 2025-02-04\ntags: \n  - 问题排查\n  - API管理\n--- ","slug":"33_API路径问题排查","published":1,"updated":"2025-02-04T14:55:07.871Z","comments":1,"layout":"post","photos":[],"_id":"cm6x1tvow000cbq2z8jcx67r9","content":"<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cm5jr7reo001jfd2z0v8ycz3d","category_id":"cm5jr7rep001mfd2z94ch2dol","_id":"cm5jr7rep001qfd2zhy5wclzw"},{"post_id":"cm5jrjsoj0000i02zcr2g5chc","category_id":"cm5jrn2o80001i02z1157fnqa","_id":"cm5jrn2o90004i02z196v0gpg"}],"PostTag":[{"post_id":"cm5jr7red0001fd2zeetm0u92","tag_id":"cm5jr7ref0004fd2z4yj414x6","_id":"cm5jr7rei000cfd2z6nae633v"},{"post_id":"cm5jr7ref0003fd2z7qrka365","tag_id":"cm5jr7rei000bfd2z7myd0wbv","_id":"cm5jr7rej000kfd2z37w5ey4e"},{"post_id":"cm5jr7reg0006fd2z2rzr9bgk","tag_id":"cm5jr7rej000hfd2zfmdngi3l","_id":"cm5jr7rek000qfd2z6pc9fg5l"},{"post_id":"cm5jr7reh0008fd2z1wnbge6t","tag_id":"cm5jr7rek000nfd2zaragguzf","_id":"cm5jr7rel000ufd2z0zvne892"},{"post_id":"cm5jr7rek000rfd2z9kifak6y","tag_id":"cm5jr7ref0004fd2z4yj414x6","_id":"cm5jr7rel000wfd2zdnua1k5q"},{"post_id":"cm5jr7reh000afd2z63e1bheu","tag_id":"cm5jr7rel000sfd2zfbgr5iib","_id":"cm5jr7rem000zfd2z0ppm3mo3"},{"post_id":"cm5jr7rei000efd2zaw9keenx","tag_id":"cm5jr7rej000hfd2zfmdngi3l","_id":"cm5jr7rem0012fd2z91gcc2ah"},{"post_id":"cm5jr7rej000gfd2zboll4rla","tag_id":"cm5jr7rem0011fd2zc8ag2lpr","_id":"cm5jr7ren0014fd2zally0zwu"},{"post_id":"cm5jr7rej000jfd2zc83i6kt7","tag_id":"cm5jr7rem0013fd2z7a5paagy","_id":"cm5jr7ren0016fd2zd94sba73"},{"post_id":"cm5jr7rek000mfd2z1c9y12cs","tag_id":"cm5jr7ren0015fd2z3hkh7llh","_id":"cm5jr7ren0018fd2z2lhpavmo"},{"post_id":"cm5jr7rek000pfd2zbwtsbmex","tag_id":"cm5jr7ren0017fd2z2b87he1o","_id":"cm5jr7ren001afd2zehbh61ho"},{"post_id":"cm5jr7rel000tfd2z6c080vah","tag_id":"cm5jr7ren0019fd2zhnouc4nc","_id":"cm5jr7ren001cfd2z4owmfaxb"},{"post_id":"cm5jr7rel000vfd2z08sj8vof","tag_id":"cm5jr7ren001bfd2z87071mbl","_id":"cm5jr7ren001efd2zgf346xwk"},{"post_id":"cm5jr7rel000xfd2z4lwc651w","tag_id":"cm5jr7ren001dfd2z5f8gedk3","_id":"cm5jr7ren001gfd2zf3kx4ph1"},{"post_id":"cm5jr7rem0010fd2z3ceb4hg5","tag_id":"cm5jr7ren0019fd2zhnouc4nc","_id":"cm5jr7ren001hfd2zh45se36w"},{"post_id":"cm5jr7reo001ifd2z2e77doz2","tag_id":"cm5jr7ren0019fd2zhnouc4nc","_id":"cm5jr7reo001kfd2z2h3u7gbd"},{"post_id":"cm5jr7reo001lfd2z809rgelm","tag_id":"cm5jr7ren0019fd2zhnouc4nc","_id":"cm5jr7rep001ofd2z8n1ee35m"},{"post_id":"cm5jr7reo001jfd2z0v8ycz3d","tag_id":"cm5jr7rep001nfd2zh0idhm9c","_id":"cm5jr7rep001sfd2z1nye6lxg"},{"post_id":"cm5jr7reo001jfd2z0v8ycz3d","tag_id":"cm5jr7rep001pfd2zcrtp4tub","_id":"cm5jr7rep001tfd2zgeeeb7os"},{"post_id":"cm5jr7reo001jfd2z0v8ycz3d","tag_id":"cm5jr7rep001rfd2zhd4ney6c","_id":"cm5jr7rep001ufd2z2f8ue06i"},{"post_id":"cm5jrjsoj0000i02zcr2g5chc","tag_id":"cm5jrn2o80002i02z8c2nd8an","_id":"cm5jrn2oa0006i02z0fx98jlp"},{"post_id":"cm5jrjsoj0000i02zcr2g5chc","tag_id":"cm5jrn2o90003i02zdmtq1ymn","_id":"cm5jrn2oa0007i02z5nkdgvvh"},{"post_id":"cm5jrjsoj0000i02zcr2g5chc","tag_id":"cm5jrn2o90005i02z64sfftu7","_id":"cm5jrn2oa0008i02zgmvt3pg0"},{"post_id":"cm6gbnxvo0000o92zcxu040cp","tag_id":"cm6gbnxvp0002o92zaqcw69zv","_id":"cm6gbnxvr0003o92z2bzibatg"},{"post_id":"cm5js1bbo000bi02zhzgr2hlm","tag_id":"cm6ne6il80000052z4rsugipc","_id":"cm6ne6ilb0002052zdmp1cn52"},{"post_id":"cm6ne6ilc0006052zdifjbv19","tag_id":"cm6gbnxvp0002o92zaqcw69zv","_id":"cm6ne6ilc0008052zd6ox3k11"},{"post_id":"cm5jryl88000ai02z7bbc4o0b","tag_id":"cm6ne6ilb0001052zg70q8pay","_id":"cm6ne6ild0009052z0xc15gwe"},{"post_id":"cm5jryl88000ai02z7bbc4o0b","tag_id":"cm6ne6ilc0005052ze7zscyhe","_id":"cm6ne6ild000b052z1ogohz67"},{"post_id":"cm6gbnxvo0001o92z00bbem0v","tag_id":"cm6ne6ilb0001052zg70q8pay","_id":"cm6ne6ild000d052zb3g7f6t6"},{"post_id":"cm6gbnxvo0001o92z00bbem0v","tag_id":"cm6ne6ild000a052z38xfax3p","_id":"cm6ne6ild000e052zf19kea38"},{"post_id":"cm6gbnxvo0000o92zcxu040cp","tag_id":"cm6ne6ild000c052zf17t4d0q","_id":"cm6ne6ild000g052zhfix5b7w"},{"post_id":"cm5pidh4g0000dc2zdnhef4t5","tag_id":"cm6ne6ilb0001052zg70q8pay","_id":"cm6ne6ile000j052z48pc6pyq"},{"post_id":"cm5pidh4g0000dc2zdnhef4t5","tag_id":"cm6ne6ile000h052zdbjsg5w9","_id":"cm6ne6ile000k052z4pwe5qgz"},{"post_id":"cm6ne6ilb0003052z6ey9h6d4","tag_id":"cm6ne6ild000c052zf17t4d0q","_id":"cm6ne6ile000m052z4kusaxzv"},{"post_id":"cm6ne6ilb0003052z6ey9h6d4","tag_id":"cm6gbnxvp0002o92zaqcw69zv","_id":"cm6ne6ile000n052zhf2m25cm"},{"post_id":"cm6ne6ilb0004052zgjryh155","tag_id":"cm6ne6ile000l052zbluac98q","_id":"cm6ne6ile000p052z144v6bzt"},{"post_id":"cm6ne6ilb0004052zgjryh155","tag_id":"cm6ne6ile000o052zadtua291","_id":"cm6ne6ile000q052zd8ze6mup"},{"post_id":"cm6x1tvoq0000bq2z833ihymr","tag_id":"cm6ne6ild000c052zf17t4d0q","_id":"cm6x1tvor0002bq2zc19r3rht"},{"post_id":"cm6x1tvor0001bq2zfzmsagpu","tag_id":"cm6x1tvos0004bq2zd5ti46mi","_id":"cm6x1tvow000dbq2z470dbq3z"},{"post_id":"cm6x1tvor0001bq2zfzmsagpu","tag_id":"cm6x1tvov0008bq2zb333ejbx","_id":"cm6x1tvow000ebq2z027fbm2h"},{"post_id":"cm6x1tvor0003bq2zclda0vge","tag_id":"cm6x1tvow000bbq2z4qtk7z5u","_id":"cm6x1tvox000hbq2z382tdt8u"},{"post_id":"cm6x1tvor0003bq2zclda0vge","tag_id":"cm6x1tvow000fbq2z9d5r3u4b","_id":"cm6x1tvox000ibq2zdnqf4oam"},{"post_id":"cm6x1tvou0005bq2zhipw4ck4","tag_id":"cm6x1tvox000gbq2zczwi450y","_id":"cm6x1tvox000lbq2zfrys5tgg"},{"post_id":"cm6x1tvou0005bq2zhipw4ck4","tag_id":"cm6x1tvox000jbq2zdfpgbnzm","_id":"cm6x1tvox000mbq2ze31w2a9o"},{"post_id":"cm6x1tvou0006bq2zcl07fs6j","tag_id":"cm6x1tvox000kbq2z00ig2g51","_id":"cm6x1tvoy000pbq2z08eehvlb"},{"post_id":"cm6x1tvou0006bq2zcl07fs6j","tag_id":"cm6x1tvox000nbq2zb6plao9t","_id":"cm6x1tvoy000qbq2z0bti2gih"},{"post_id":"cm6x1tvou0007bq2zehle190g","tag_id":"cm6x1tvos0004bq2zd5ti46mi","_id":"cm6x1tvoy000sbq2z1yl22di0"},{"post_id":"cm6x1tvou0007bq2zehle190g","tag_id":"cm6x1tvox000nbq2zb6plao9t","_id":"cm6x1tvoy000tbq2z9ak468qd"},{"post_id":"cm6x1tvow000cbq2z8jcx67r9","tag_id":"cm6x1tvox000kbq2z00ig2g51","_id":"cm6x1tvoy000vbq2z2v565pa2"},{"post_id":"cm6x1tvow000cbq2z8jcx67r9","tag_id":"cm6x1tvoy000ubq2zg3gy59o6","_id":"cm6x1tvoy000wbq2zf3ri2we9"}],"Tag":[{"name":"hexo","_id":"cm5jr7ref0004fd2z4yj414x6"},{"name":"git","_id":"cm5jr7rei000bfd2z7myd0wbv"},{"name":"算法","_id":"cm5jr7rej000hfd2zfmdngi3l"},{"name":"java","_id":"cm5jr7rek000nfd2zaragguzf"},{"name":"android","_id":"cm5jr7rel000sfd2zfbgr5iib"},{"name":"markdown","_id":"cm5jr7rem0011fd2zc8ag2lpr"},{"name":"python","_id":"cm5jr7rem0013fd2z7a5paagy"},{"name":"ADB","_id":"cm5jr7ren0015fd2z3hkh7llh"},{"name":"bat","_id":"cm5jr7ren0017fd2z2b87he1o"},{"name":"总结","_id":"cm5jr7ren0019fd2zhnouc4nc"},{"name":"总结,android","_id":"cm5jr7ren001bfd2z87071mbl"},{"name":"工具","_id":"cm5jr7ren001dfd2z5f8gedk3"},{"name":"微信公众号","_id":"cm5jr7rep001nfd2zh0idhm9c"},{"name":"GitHub","_id":"cm5jr7rep001pfd2zcrtp4tub"},{"name":"Python","_id":"cm5jr7rep001rfd2zhd4ney6c"},{"name":"自动化","_id":"cm5jrn2o80002i02z8c2nd8an"},{"name":"系统设计","_id":"cm5jrn2o90003i02zdmtq1ymn"},{"name":"效率提升","_id":"cm5jrn2o90005i02z64sfftu7"},{"name":"项目文档","_id":"cm6gbnxvp0002o92zaqcw69zv"},{"name":"闲聊","_id":"cm6ne6il80000052z4rsugipc"},{"name":"技术文档","_id":"cm6ne6ilb0001052zg70q8pay"},{"name":"乒乓球","_id":"cm6ne6ilc0005052ze7zscyhe"},{"name":"github","_id":"cm6ne6ild000a052z38xfax3p"},{"name":"球赛小程序","_id":"cm6ne6ild000c052zf17t4d0q"},{"name":"测试用例","_id":"cm6ne6ile000h052zdbjsg5w9"},{"name":"学习计划","_id":"cm6ne6ile000l052zbluac98q"},{"name":"Java","_id":"cm6ne6ile000o052zadtua291"},{"name":"数据模型","_id":"cm6x1tvos0004bq2zd5ti46mi"},{"name":"赛事管理","_id":"cm6x1tvov0008bq2zb333ejbx"},{"name":"数据库","_id":"cm6x1tvow000bbq2z4qtk7z5u"},{"name":"设计文档","_id":"cm6x1tvow000fbq2z9d5r3u4b"},{"name":"功能说明","_id":"cm6x1tvox000gbq2zczwi450y"},{"name":"报名管理","_id":"cm6x1tvox000jbq2zdfpgbnzm"},{"name":"问题排查","_id":"cm6x1tvox000kbq2z00ig2g51"},{"name":"权限管理","_id":"cm6x1tvox000nbq2zb6plao9t"},{"name":"API管理","_id":"cm6x1tvoy000ubq2zg3gy59o6"}]}}