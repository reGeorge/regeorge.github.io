{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":0,"renderable":0},{"_id":"source/images/lofter.png","path":"images/lofter.png","modified":0,"renderable":0},{"_id":"themes/yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"source/CV/resume/resume.md","path":"CV/resume/resume.md","modified":0,"renderable":0},{"_id":"themes/yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/CSDN.png","path":"img/CSDN.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/LOFTER.png","path":"img/LOFTER.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Coding.png","path":"img/Coding.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Plunker.png","path":"img/Plunker.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/AcFun.png","path":"img/AcFun.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/Quora.png","path":"img/Quora.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/niconico.png","path":"img/niconico.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/博客园.png","path":"img/博客园.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/bilibili.png","path":"img/bilibili.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/知乎.png","path":"img/知乎.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/简书.png","path":"img/简书.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":0,"renderable":1},{"_id":"themes/yelee/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/yelee/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"source/CV/resume/90k.jpg","path":"CV/resume/90k.jpg","modified":0,"renderable":0},{"_id":"source/CV/resume/resume.html","path":"CV/resume/resume.html","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1703497847876},{"_id":"themes/yelee/README.md","hash":"034155f3c0a9ac4a30bbdcfd549f151960f5ef8d","modified":1703497847914},{"_id":"themes/yelee/.gitignore","hash":"237760b38ce80bcc3a8b556566bef0295c145393","modified":1703497847914},{"_id":"themes/yelee/_config.yml","hash":"2e2ff290c1cff37f383061e5a4c7cb02e6cd0201","modified":1703497847914},{"_id":"themes/yelee/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1703497847917},{"_id":"source/_posts/01_如何搭建个人博客.md","hash":"11d9ee263b747f8532b6231b5a6c6cf108149053","modified":1703497847876},{"_id":"source/_posts/02_git常用命令.md","hash":"7a3baf05fb25a476dac3ce57ba6d812fd2b8b378","modified":1703497847876},{"_id":"source/_posts/03_冒泡排序算法.md","hash":"f0d9d08afa0c5421b6304794b26c18f9cfee2442","modified":1703497847876},{"_id":"source/_posts/04_GBK和UTF-8的区别.md","hash":"077dbbac618f201310cc2bcaeca187503eaa7b2e","modified":1703497847876},{"_id":"source/_posts/07_Markdown的使用.md","hash":"a75ee7ba1d708a907faa31bcb1a73c53f7edd90c","modified":1703497847877},{"_id":"source/_posts/08_使用selenium-wget实现自动下载图片.md","hash":"81ac3e4b4c86d25c9f3dcabb6480c776bab8a4c3","modified":1703497847877},{"_id":"source/_posts/09_ADB常用命令.md","hash":"fa58e834bcbc0efc9ce57c09e2af6974fd67bfe6","modified":1703497847877},{"_id":"source/_posts/10_安卓客户端取日志脚本.md","hash":"3a62d608f151647d5e5769377b0cfcab87108809","modified":1713068116109},{"_id":"source/_posts/05_基于android实现一个简单的备忘录app.md","hash":"ae555945fb884bd4fdbbb6a3883e42aa2bf7a419","modified":1703497847876},{"_id":"source/_posts/06_百日囚徒问题.md","hash":"2f9701a2e42aa56fef0fdc1dcd63fcf130124e55","modified":1703497847876},{"_id":"source/_posts/11_让你的Hexo支持mermaid.md","hash":"1c481c7196f35233cc7844d552b24d4db095ff2b","modified":1703497847877},{"_id":"source/_posts/12_测试方案的设计思路.md","hash":"76cc2ba244cc771cebfe43c0b0743c05d670e406","modified":1703497847877},{"_id":"source/_posts/15_测试工作的一些总结.md","hash":"0b9e3964978a2539e86aef6b612338a5861a5518","modified":1703497847877},{"_id":"source/_posts/13_sublimetext插件安装.md","hash":"3ce9c8b2baea91feedd4a8ff8f99e1a4c7412cfb","modified":1703497847877},{"_id":"source/hiden/东方之门.md","hash":"c26b3c475669c1ff3537fab85c9a066bcf6ff061","modified":1703497847877},{"_id":"source/hiden/亲人，愿望，时光，记忆.md","hash":"743e2ac288e9e41957bb37e821345cadf025923d","modified":1703497847877},{"_id":"source/hiden/人生逆旅.md","hash":"7870f65ebdfa0559aa33c36f26098cc19afc4c99","modified":1703497847877},{"_id":"source/hiden/你好，2017——再见，2017.md","hash":"bcd70348ea95ed9b5bc04c1416dc635ba088726c","modified":1703497847877},{"_id":"source/hiden/在盐城.md","hash":"44937569ec7f9fb281986fdba1529a51c6dae597","modified":1703497847877},{"_id":"source/hiden/夜色褪红妆.md","hash":"3a7d85e83eacf56cfe3b0efad9f87adc3fccf085","modified":1703497847878},{"_id":"source/hiden/我是一个什么样的人.md","hash":"89e2334f76c4df53fdb9bbe56a9400ef626710fe","modified":1703497847878},{"_id":"source/hiden/测试方案的设计思路.md","hash":"17ddf7f1ad75e98e0b546fa3d9a5871ae5bc65c1","modified":1703497847878},{"_id":"source/hiden/看见时光.md","hash":"b49a4bc88806a86ca8e874bdcf7701c21fedecb2","modified":1703497847878},{"_id":"source/tags/index.md","hash":"a2606207e3bc215f426c8a44c969edd4f4cce875","modified":1703497847881},{"_id":"source/images/lofter.png","hash":"90e8b1967b57f27c009fd0aebf00ae18715c7f76","modified":1703497847881},{"_id":"themes/yelee/.github/ISSUE_TEMPLATE.md","hash":"09e2580d457ce93b4d7d554b75618036b45f8717","modified":1703497847913},{"_id":"themes/yelee/languages/default.yml","hash":"80cc17267333753accc0b1c85a73678fedcbce76","modified":1703497847914},{"_id":"themes/yelee/languages/en.yml","hash":"2c096d06c0af4ddf9c128fc8f77fb276b59a47fb","modified":1703497847914},{"_id":"themes/yelee/languages/zh-Hans.yml","hash":"b5b2d20cde04db3773962284a002d025b09134b0","modified":1703497847914},{"_id":"themes/yelee/languages/zh-Hant-HK.yml","hash":"c38a95f5076ad951839aaf7748295d7eea277c61","modified":1703497847914},{"_id":"themes/yelee/languages/zh-Hant-TW.yml","hash":"f372cc0d758a7d8bbb885aa9756d607bec26469a","modified":1703497847914},{"_id":"themes/yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1703497847917},{"_id":"themes/yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1703497847917},{"_id":"themes/yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1703497847917},{"_id":"themes/yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1703497847917},{"_id":"themes/yelee/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1703497847917},{"_id":"themes/yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1703497847917},{"_id":"themes/yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1703497847917},{"_id":"themes/yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1703497847917},{"_id":"source/CV/resume/resume.md","hash":"9c8584285b0d5be085876e1ad1126550eef9e293","modified":1703497847876},{"_id":"themes/yelee/layout/_partial/after-footer.ejs","hash":"4024557da5cd7925084eb0bdf045ef438a0b5754","modified":1703497847914},{"_id":"themes/yelee/layout/_partial/archive-post.ejs","hash":"8af583c5f60c69ffdc97bee4e8fdac1ba34ebecd","modified":1703497847914},{"_id":"themes/yelee/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1703497847914},{"_id":"themes/yelee/layout/_partial/article.ejs","hash":"d781737389f408a5dd57a0f9430d2704b7fe192c","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/background.ejs","hash":"a439ebf7c4798ad3830e66ccf226a60b05ffea0a","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/footer.ejs","hash":"cd24fe1c9097af027910c00ef2f79bb650a8975c","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/head.ejs","hash":"8ef930a8ed8b1a3d71b18cca02bc4963e310cf00","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/ie-updater.ejs","hash":"3e5f2e41bbb1a5b93a8a7a6cb9ccd191ced54408","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/mathjax.ejs","hash":"252f3757edea31d55a7e5624e2214f268bf07283","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/mobile-nav.ejs","hash":"48696ded8e57def05d7ea58e74730f49d66ea6b5","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/open-in-new-tab.ejs","hash":"a6046bc322ce9194faa9559c70e1618a7e1e4cbc","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/left-col.ejs","hash":"6ea8bacacc8370ccf5af4e6f66da3bc743b88342","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/page.ejs","hash":"9e504a0ec060ac3c6622855734ebea6eca2b78e9","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post-nav-button.ejs","hash":"190efc2e8ee037387685ff7dd24ae6db8bc77c60","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/tab-title-change.ejs","hash":"1bebab6eb7a849319cd48fe051f3c71b9349a723","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/scrolling-button.ejs","hash":"6da102cd4a05bc6b4807b937862a7332f6845e5f","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/tag-cloud-page.ejs","hash":"432ded02bcc1f0d52cd833e8eeac688ee886169a","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/toc.ejs","hash":"a0c6362e0f0161bbb7e70d50a4d9e39f2ff8ca48","modified":1703497847917},{"_id":"themes/yelee/source/background/bg-1.jpg","hash":"a0e916a1d6d42e9de467f590273bf48eab2cbff4","modified":1703497847917},{"_id":"themes/yelee/source/background/bg-2.jpg","hash":"3bc593c1f7d329dfa5a481aa56a04acff5074410","modified":1703497847918},{"_id":"themes/yelee/source/background/bg-3.jpg","hash":"dd681609670a00fc3a6f5556f8018f274455b190","modified":1703497847918},{"_id":"themes/yelee/source/background/bg-5.jpg","hash":"2a74546e53f71d00d398a47978ed033a46071349","modified":1703497847918},{"_id":"themes/yelee/source/background/bg-4.jpg","hash":"d450f587ce2bcd761eff18ae463155cd2d2536e5","modified":1703497847918},{"_id":"themes/yelee/source/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1703497847921},{"_id":"themes/yelee/source/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1703497847921},{"_id":"themes/yelee/source/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1703497847921},{"_id":"themes/yelee/source/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1703497847921},{"_id":"themes/yelee/source/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1703497847920},{"_id":"themes/yelee/source/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1703497847921},{"_id":"themes/yelee/source/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1703497847921},{"_id":"themes/yelee/source/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1703497847921},{"_id":"themes/yelee/source/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1703497847921},{"_id":"themes/yelee/source/img/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1703497847921},{"_id":"themes/yelee/source/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1703497847921},{"_id":"themes/yelee/source/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1703497847921},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1703497847921},{"_id":"themes/yelee/source/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1703497847921},{"_id":"themes/yelee/source/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1703497847921},{"_id":"themes/yelee/source/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1703497847921},{"_id":"themes/yelee/source/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1703497847921},{"_id":"themes/yelee/source/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1703497847921},{"_id":"themes/yelee/source/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1703497847922},{"_id":"themes/yelee/source/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1703497847922},{"_id":"themes/yelee/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1703497847918},{"_id":"themes/yelee/source/css/_variables.styl","hash":"bca217a64e422ea7a4a1748b8fc980b408e8c836","modified":1703497847920},{"_id":"themes/yelee/source/css/style.styl","hash":"33519d7a6be12193795382840810e9ab1a5eae8e","modified":1703497847920},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","hash":"624e81a3b0e57495b0c0e0b3e056296c6e8ae5df","modified":1703497847922},{"_id":"themes/yelee/source/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1703497847922},{"_id":"themes/yelee/source/js/main.js","hash":"d58bbc593d94d48e85d4ebfb002910444080cb06","modified":1703497847922},{"_id":"themes/yelee/source/js/mobile.js","hash":"0f4c1fcd6df47a196ed9495c225173402aa7d769","modified":1703497847922},{"_id":"themes/yelee/source/js/pc.js","hash":"19a1660b10358046e7a1f398284491519b2ffd47","modified":1703497847922},{"_id":"themes/yelee/source/js/search.js","hash":"b456aaab98bbc3b0906f8a16d1e6e4f74dfcffda","modified":1703497847922},{"_id":"themes/yelee/source/js/toc.js","hash":"72ba1228fc1a44df45b8f4b562eba78594f13016","modified":1703497847922},{"_id":"source/CV/resume/90k.jpg","hash":"8437b4cb4029bf1294d6d2fa037176b08ce03fe4","modified":1703497847876},{"_id":"source/CV/resume/resume.html","hash":"fea089eceb905dcd1732451dfc3c08810f930f52","modified":1703497847876},{"_id":"themes/yelee/layout/_partial/comments/click2show.ejs","hash":"678f3aec2980d378ea44be60eec3eb504c8ba668","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/comments/count-comment.ejs","hash":"d3c1b0b31db9d80e857f3054d010ea49c0f88134","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/comments/disqus.ejs","hash":"b0b73b4629983b4de447418f30bf744cdf7ed044","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/comments/duoshuo.ejs","hash":"15c269b81046b22ee44d38d9a08fc66618318435","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/comments/youyan.ejs","hash":"bcf2070587645afd20a4eb046b9c8bb9c44d1cf5","modified":1703497847915},{"_id":"themes/yelee/layout/_partial/post/category.ejs","hash":"265bb12f7cfa5e0bcbb74fdd409ba13a6d9d2e22","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post/date.ejs","hash":"357a8de8a7ed8194efc16f55f97f7e2551b31bf9","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post/nav.ejs","hash":"593cdf0a9eca655c8a763f2d5fb22254d19b1252","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post/share.ejs","hash":"60cb646f3bc22c46d6ff4b95bb36dad577ed76c0","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post/tag.ejs","hash":"9dad471e27de9e066666f3082137eccaede2e67b","modified":1703497847916},{"_id":"themes/yelee/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1703497847916},{"_id":"themes/yelee/source/css/_partial/archive.styl","hash":"416786f566582fe697a12bb03a9eb2d1c604e2c7","modified":1703497847918},{"_id":"themes/yelee/source/css/_partial/article.styl","hash":"45d36a307c22a754ed87f3ae6441ba8616f7329c","modified":1703497847918},{"_id":"themes/yelee/source/css/_partial/footer.styl","hash":"384f9a9c017400b12f52ac33759380075e527998","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/highlight.styl","hash":"4dcf5d3e3435897de91b39473a93fb7c3ad73dde","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/instagram.styl","hash":"db9cc156c7df27f7f54b0e7ff34b5949f55f99eb","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/mobile.styl","hash":"4681032f51fd0df6451051ba35efa1f9f745c302","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/mobile-slider.styl","hash":"034eb9605e006a0d0098bd963e9cdc11a1eaf6c3","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/page.styl","hash":"d05287b44c64576b8560461bc6c3b7e8ceda5539","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/scroll.styl","hash":"1932774d30b8706919342f9cf36ea2d99987ce14","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/main.styl","hash":"d82129844528ae1a5c9547bc6d3f5bd37b0fb801","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/search.styl","hash":"fcaa5deaa654aaec69e267e23b49df07f84f633a","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/share.styl","hash":"24ff28457b5e1519a8b4561284f6159bdd827ad4","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/tagcloud.styl","hash":"9d7847cc899970a19d288c9eec9f24691c053ef3","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/toc.styl","hash":"eb19bbd37fc2c1abd238e2ed96b22cb1aae41ab7","modified":1703497847920},{"_id":"themes/yelee/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1703497847920},{"_id":"themes/yelee/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1703497847920},{"_id":"themes/yelee/source/css/_partial/customise/code-block.styl","hash":"ebf7ca8598d93235479460ea7d1be97d44224b05","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/blockquote.styl","hash":"9b96dd1c51b43a1130b3bb6eedb293b77eef8b1d","modified":1703497847918},{"_id":"themes/yelee/source/css/_partial/customise/heading.styl","hash":"f309241c1daa9b6c04aa04063307537c219fdd59","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/inline-code.styl","hash":"2014a25ec300910b8a093ec8010f6703a2142021","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/color-scheme.styl","hash":"816044b7680514626981e945ee6be943a5de60a7","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/list.styl","hash":"b1e564ed76d6e892556b61b4278270fc9eeea961","modified":1703497847919},{"_id":"themes/yelee/source/css/_partial/customise/social-icon.styl","hash":"365026a5a30bcc88bec1b46c391c7d3bce41f033","modified":1703497847919},{"_id":"source/images/avatar.jpg","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1703497847879},{"_id":"source/images/avatar.png","hash":"67cb201dfb7753bc43f935b8a7da6e27d4a4b22b","modified":1703497847881},{"_id":"source/.DS_Store","hash":"41a09c69c7f9d5e6ec7a9c02fd60c51a14d3c043","modified":1735913395665},{"_id":"source/_posts/14_测试工作的一些总结.md","hash":"0048acb0e45d17a1768f3f9a9b3266d28a9ff282","modified":1704103317323},{"_id":"source/_posts/16_读书笔记收集.md","hash":"a91031b9c8b96add715dba1d59f9cc987442a571","modified":1713068116109},{"_id":"source/_posts/15_开发相关内容记录.md","hash":"fc3a2c5454cd18d79a1b60c89b3db19646c89963","modified":1704103325452}],"Category":[],"Data":[],"Page":[{"title":"东方之门","date":"2017-01-13T15:03:25.000Z","tags":"摄影","_content":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n\n<img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\">\n","source":"hiden/东方之门.md","raw":"---\ntitle: 东方之门\ndate: 2017-01-13 23:03:25\ntags: 摄影\n---\n<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n\n<img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\">\n","updated":"2023-12-25T09:50:47.877Z","path":"hiden/东方之门.html","comments":1,"layout":"page","_id":"clqkrbsxs000j7vjkcqim7ob7","content":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n<p><img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\"></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4) -->\n<p><img src=\"http://b367.photo.store.qq.com/psb?/V10nzslk3sSUXk/tPF1UzYt*YMuFBrv9vXAGwyuZ0sHldUUzkBs0FRKj2w!/b/dG8BAAAAAAAA&bo=qwYABcAMkAkFCdc!&rf=viewer_4\" height=\"400\"></p>\n"},{"title":"亲人，愿望，时光，记忆","date":"2017-02-27T14:22:44.000Z","tags":"随笔","_content":"每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。\n\n我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。\n\n四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。\n\n若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。\n","source":"hiden/亲人，愿望，时光，记忆.md","raw":"---\ntitle: 亲人，愿望，时光，记忆\ndate: 2017-02-27 22:22:44\ntags: 随笔\n---\n每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。\n\n我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。\n\n四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。\n\n若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。\n","updated":"2023-12-25T09:50:47.877Z","path":"hiden/亲人，愿望，时光，记忆.html","comments":1,"layout":"page","_id":"clqkrbsxs000l7vjkw158qb9q","content":"<p>每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。</p>\n<p>我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。</p>\n<p>四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。</p>\n<p>若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<p>每当我有一点喜悦，内心总会涌起一股找个最亲近的人一起分享的冲动。小时候那个人是爸爸妈妈，上学了那个人是最好的朋友，恋爱了那个人是自己喜欢的女生。最亲近的人不断更迭，前者的落寞却容易被忽略。</p>\n<p>我应该多分享的，不管是喜悦悲伤，仅仅告诉一个人也算是自私，让每个亲近的人参与到我的生活中来，才是我一路至此的健康方式。</p>\n<p>四季交替，人们会恍惚忘记彼此分开的时空；转角回眸，我又回到那年夏天和你挥手的午后。</p>\n<p>若干年前模糊的愿望至今终于成功的忘记，若干年后模糊的记忆可不能化作一声叹息。</p>\n"},{"title":"人生逆旅","date":"2017-01-13T15:21:41.000Z","tags":"摄影","_content":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n\n<img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\">","source":"hiden/人生逆旅.md","raw":"---\ntitle: 人生逆旅\ndate: 2017-01-13 23:21:41\ntags: 摄影\n---\n<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n\n<img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\">","updated":"2023-12-25T09:50:47.877Z","path":"hiden/人生逆旅.html","comments":1,"layout":"page","_id":"clqkrbsxt000o7vjksbnyv21a","content":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n<p><img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\"></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311) -->\n<p><img src=\"http://b259.photo.store.qq.com/psb?/V10nzslk2zVr0M/26NCy52WKl7*B1yfcplkRjuN5G2z.c7229LcQo1bskU!/b/dAMBAAAAAAAA&bo=VQOAAkAGsAQFCA0!&rf=viewer_311\" height=\"400\"></p>\n"},{"title":"你好，2017 —— 再见，2017","<!-- date":"2017-01-10 19:04:41 -->","date":"2017-12-30T16:00:00.000Z","tags":"随笔","_content":"你好，2017\n\n大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。\n\n坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿\n\n<!--more-->\n我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿\n\n“有的人忙着死，有的人忙着活。”﻿﻿\n\n丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿\n\n新的一年里希望自己能高效地完成每一步规划。﻿﻿\n\n----\n\n#### 1月18日\t南邮三牌楼\n\n一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。\n\n#### 2月1日\t益林三里\n\n二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。\n\n#### 2月8日\t盐城医院\n\n在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。\n\n#### 3月10日\t入职培训\n\n接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。\n\n#### 3月11日\t南京老门东\n\n许久不见的朋友来玩\n\n#### 5月10日\t南邮毕设\n\n还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。\n\n#### 6月22日\t毕业\n\n除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。\n\n#### 789月\t试用、测试、webtest、devicetest\n到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。\n\n#### 10月\t转正\n\n转正可以领全份的工资，虽然还是月欠。。。\n\n转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。\n\n#### 11月5日\t上海\n\n带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。\n\n#### 11月11日\t益林三里\n\n外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。\n\n\n#### 12月\t江宁\n\n女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？\n\n\n这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。\n\n只有拼尽全力，才能毫不费力。这句话送给明年的自己。\n\n再见，2017\n\n","source":"hiden/你好，2017——再见，2017.md","raw":"---\ntitle: 你好，2017 —— 再见，2017\n<!-- date: 2017-01-10 19:04:41 -->\ndate: 2017-12-31 00:00:00\ntags: 随笔\n---\n你好，2017\n\n大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。\n\n坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿\n\n<!--more-->\n我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿\n\n“有的人忙着死，有的人忙着活。”﻿﻿\n\n丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿\n\n新的一年里希望自己能高效地完成每一步规划。﻿﻿\n\n----\n\n#### 1月18日\t南邮三牌楼\n\n一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。\n\n#### 2月1日\t益林三里\n\n二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。\n\n#### 2月8日\t盐城医院\n\n在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。\n\n#### 3月10日\t入职培训\n\n接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。\n\n#### 3月11日\t南京老门东\n\n许久不见的朋友来玩\n\n#### 5月10日\t南邮毕设\n\n还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。\n\n#### 6月22日\t毕业\n\n除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。\n\n#### 789月\t试用、测试、webtest、devicetest\n到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。\n\n#### 10月\t转正\n\n转正可以领全份的工资，虽然还是月欠。。。\n\n转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。\n\n#### 11月5日\t上海\n\n带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。\n\n#### 11月11日\t益林三里\n\n外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。\n\n\n#### 12月\t江宁\n\n女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？\n\n\n这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。\n\n只有拼尽全力，才能毫不费力。这句话送给明年的自己。\n\n再见，2017\n\n","updated":"2023-12-25T09:50:47.877Z","path":"hiden/你好，2017——再见，2017.html","comments":1,"layout":"page","_id":"clqkrbsxt000q7vjk0j72nwfs","content":"<p>你好，2017</p>\n<p>大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。</p>\n<p>坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿</p>\n<a id=\"more\"></a>\n<p>我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿</p>\n<p>“有的人忙着死，有的人忙着活。”﻿﻿</p>\n<p>丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿</p>\n<p>新的一年里希望自己能高效地完成每一步规划。﻿﻿</p>\n<hr>\n<h4 id=\"1月18日-南邮三牌楼\"><a href=\"#1月18日-南邮三牌楼\" class=\"headerlink\" title=\"1月18日    南邮三牌楼\"></a>1月18日    南邮三牌楼</h4><p>一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。</p>\n<h4 id=\"2月1日-益林三里\"><a href=\"#2月1日-益林三里\" class=\"headerlink\" title=\"2月1日    益林三里\"></a>2月1日    益林三里</h4><p>二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。</p>\n<h4 id=\"2月8日-盐城医院\"><a href=\"#2月8日-盐城医院\" class=\"headerlink\" title=\"2月8日    盐城医院\"></a>2月8日    盐城医院</h4><p>在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。</p>\n<h4 id=\"3月10日-入职培训\"><a href=\"#3月10日-入职培训\" class=\"headerlink\" title=\"3月10日    入职培训\"></a>3月10日    入职培训</h4><p>接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。</p>\n<h4 id=\"3月11日-南京老门东\"><a href=\"#3月11日-南京老门东\" class=\"headerlink\" title=\"3月11日    南京老门东\"></a>3月11日    南京老门东</h4><p>许久不见的朋友来玩</p>\n<h4 id=\"5月10日-南邮毕设\"><a href=\"#5月10日-南邮毕设\" class=\"headerlink\" title=\"5月10日    南邮毕设\"></a>5月10日    南邮毕设</h4><p>还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。</p>\n<h4 id=\"6月22日-毕业\"><a href=\"#6月22日-毕业\" class=\"headerlink\" title=\"6月22日    毕业\"></a>6月22日    毕业</h4><p>除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。</p>\n<h4 id=\"789月-试用、测试、webtest、devicetest\"><a href=\"#789月-试用、测试、webtest、devicetest\" class=\"headerlink\" title=\"789月    试用、测试、webtest、devicetest\"></a>789月    试用、测试、webtest、devicetest</h4><p>到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。</p>\n<h4 id=\"10月-转正\"><a href=\"#10月-转正\" class=\"headerlink\" title=\"10月    转正\"></a>10月    转正</h4><p>转正可以领全份的工资，虽然还是月欠。。。</p>\n<p>转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。</p>\n<h4 id=\"11月5日-上海\"><a href=\"#11月5日-上海\" class=\"headerlink\" title=\"11月5日    上海\"></a>11月5日    上海</h4><p>带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。</p>\n<h4 id=\"11月11日-益林三里\"><a href=\"#11月11日-益林三里\" class=\"headerlink\" title=\"11月11日    益林三里\"></a>11月11日    益林三里</h4><p>外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。</p>\n<h4 id=\"12月-江宁\"><a href=\"#12月-江宁\" class=\"headerlink\" title=\"12月    江宁\"></a>12月    江宁</h4><p>女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？</p>\n<p>这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。</p>\n<p>只有拼尽全力，才能毫不费力。这句话送给明年的自己。</p>\n<p>再见，2017</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>你好，2017</p>\n<p>大学课程将尽，回首发现最舒适的四年里做的最多的一件事就是列出要深入学习的清单，却很少能善始善终回过头来踏实地钻研。</p>\n<p>坐不住是最大的根源，找到一本好书，第一反应永远是记住书名回去找电子版，却不是在书架前多停留片刻，感受知识被汲取的厚实感。﻿﻿</p>","more":"<p>我到底急着去哪里呢？急着赶下一场电影，下一顿聚餐，还是回宿舍饱睡一顿？急着考完最后一场试，做完最后的毕设，还是找到一份高枕无忧的工作？从什么时候开始，我这么忙着赶场，以至于坐立不安？﻿﻿</p>\n<p>“有的人忙着死，有的人忙着活。”﻿﻿</p>\n<p>丢下手头的事情逃避着睡去和关掉社交软件闭上眼睛去迎接新的清晨是两种态度。﻿﻿</p>\n<p>新的一年里希望自己能高效地完成每一步规划。﻿﻿</p>\n<hr>\n<h4 id=\"1月18日-南邮三牌楼\"><a href=\"#1月18日-南邮三牌楼\" class=\"headerlink\" title=\"1月18日    南邮三牌楼\"></a>1月18日    南邮三牌楼</h4><p>一月份还是在大学的老校区度过，签完了三方，忙完了毕设的开题报告，剩下的十几天是相对空闲的日子，望着被雾霾笼罩的南京城，我还是会幻想着会不会有离开的可能。</p>\n<h4 id=\"2月1日-益林三里\"><a href=\"#2月1日-益林三里\" class=\"headerlink\" title=\"2月1日    益林三里\"></a>2月1日    益林三里</h4><p>二月即将过年，提前回老家。老家的日子过得很慢，起床洗漱后哪也不想去，在家里坐上一整天也不会觉得今天无所事事。以前严厉的外公总会斥责护短的外婆，现在却因为生病行动反应都大不如前而反被外婆‘调侃’。那真是一幕五味杂陈的场景，可惜再也不会重现了。</p>\n<h4 id=\"2月8日-盐城医院\"><a href=\"#2月8日-盐城医院\" class=\"headerlink\" title=\"2月8日    盐城医院\"></a>2月8日    盐城医院</h4><p>在新建的盐城医院，手续流程相较老院区比较复杂，陪外公住院期间的想法也比较少，可能是常态化的一种表现，也可能种种未知引发的不安。</p>\n<h4 id=\"3月10日-入职培训\"><a href=\"#3月10日-入职培训\" class=\"headerlink\" title=\"3月10日    入职培训\"></a>3月10日    入职培训</h4><p>接受了一些新的职场理念，对后面的适应工作压力有一定的帮助。</p>\n<h4 id=\"3月11日-南京老门东\"><a href=\"#3月11日-南京老门东\" class=\"headerlink\" title=\"3月11日    南京老门东\"></a>3月11日    南京老门东</h4><p>许久不见的朋友来玩</p>\n<h4 id=\"5月10日-南邮毕设\"><a href=\"#5月10日-南邮毕设\" class=\"headerlink\" title=\"5月10日    南邮毕设\"></a>5月10日    南邮毕设</h4><p>还算认真的做完了毕设，结果也获得了老师的认可（其实老师的要求也不高，主要看态度），也算对后面的工作学习有一定的导向作用，不得不说，坚持做一件事总会有回报。</p>\n<h4 id=\"6月22日-毕业\"><a href=\"#6月22日-毕业\" class=\"headerlink\" title=\"6月22日    毕业\"></a>6月22日    毕业</h4><p>除了领毕业证和统一拍毕业照之外还拍了一些好看的照片，吃了一顿走心的散伙饭，去杭州逛了一趟西湖。这里想说，这些大小琐事人人都要经历，但是没有准备好下一步的人（比如我）显然有些心不在焉。</p>\n<h4 id=\"789月-试用、测试、webtest、devicetest\"><a href=\"#789月-试用、测试、webtest、devicetest\" class=\"headerlink\" title=\"789月    试用、测试、webtest、devicetest\"></a>789月    试用、测试、webtest、devicetest</h4><p>到公司发现所在的岗位和预期不一样，心情从之前的忐忑变成的近乎绝望（坐着头上直冒汗的那种），好在导师实力强劲，一下子hold住了我，后面才有了耐心去接触自动化。</p>\n<h4 id=\"10月-转正\"><a href=\"#10月-转正\" class=\"headerlink\" title=\"10月    转正\"></a>10月    转正</h4><p>转正可以领全份的工资，虽然还是月欠。。。</p>\n<p>转正答辩准备的很充分，给我的感觉像毕设答辩一样顺利。希望自己以后在这种场合自信一点，不要因为腼腆失去了一些机会。</p>\n<h4 id=\"11月5日-上海\"><a href=\"#11月5日-上海\" class=\"headerlink\" title=\"11月5日    上海\"></a>11月5日    上海</h4><p>带着新买的相机去上海扫了一波南京路，这是我曾经预想过的场景。</p>\n<h4 id=\"11月11日-益林三里\"><a href=\"#11月11日-益林三里\" class=\"headerlink\" title=\"11月11日    益林三里\"></a>11月11日    益林三里</h4><p>外婆在下午6点离开我们，很心疼她受癌症折磨的这几个月（可能更久），除去不舍，离开可能是最好的解脱，我能做的就是不要忘记她，还有她为我们带来的对美好的定义。</p>\n<h4 id=\"12月-江宁\"><a href=\"#12月-江宁\" class=\"headerlink\" title=\"12月    江宁\"></a>12月    江宁</h4><p>女朋友又被我气跑了，认识马上就7年了，被自己这慢到世界末日都不慌的性子感到。。。没啥想法。。。我这种人怎么会有女朋友？</p>\n<p>这一年对我来说本该是走出迷茫的一年，外婆的离开让我意识到花费太多的时间去和不重要的事情纠缠，只会让自己更迷茫，现在想的事，现在应该去做。</p>\n<p>只有拼尽全力，才能毫不费力。这句话送给明年的自己。</p>\n<p>再见，2017</p>"},{"title":"在盐城","date":"2017-01-13T15:19:27.000Z","tags":"摄影","_content":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n\n<img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\">","source":"hiden/在盐城.md","raw":"---\ntitle: 在盐城\ndate: 2017-01-13 23:19:27\ntags: 摄影\n---\n<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n\n<img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\">","updated":"2023-12-25T09:50:47.877Z","path":"hiden/在盐城.html","comments":1,"layout":"page","_id":"clqkrbsxu000t7vjkgmtyd0tu","content":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n<p><img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\"></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4) -->\n<p><img src=\"http://b370.photo.store.qq.com/psb?/V10nzslk2zVr0M/o5OZ.OKkNznEoaJbUajEUwkv3OLtDjxcbtfWQPrxzTM!/b/dHIBAAAAAAAA&bo=KwQgA0AGsAQFB9o!&rf=viewer_4\" height=\"400\"></p>\n"},{"title":"夜色褪红妆","date":"2017-01-13T15:25:11.000Z","tags":"摄影","_content":"\n<img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\">\n","source":"hiden/夜色褪红妆.md","raw":"---\ntitle: 夜色褪红妆\ndate: 2017-01-13 23:25:11\ntags: 摄影\n---\n\n<img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\">\n","updated":"2023-12-25T09:50:47.878Z","path":"hiden/夜色褪红妆.html","comments":1,"layout":"page","_id":"clqkrbsxu000w7vjkv1t1fynd","content":"<p><img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\"></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<p><img src=\"http://b369.photo.store.qq.com/psb?/V10nzslk2zVr0M/spb.nNnqg9s6pa7oWmFn8N0eafQXksiDBoC*gLfqdQo!/c/dHEBAAAAAAAA&bo=0ALAA7AEQAYFAMA!\" height=\"400\"></p>\n"},{"noDate":true,"top":null,"title":"我是一个什么样的人","date":"2017-01-08T16:00:00.000Z","tags":"随笔","_content":"我是一个什么样的人，我还能变成一个什么样的人？\n这将是一个伴随我10年的问题。\n\n<!--more-->\n\n刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。\n\n大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。\n\n大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。\n\n......","source":"hiden/我是一个什么样的人.md","raw":"---\nnoDate: true\ntop: \ntitle: 我是一个什么样的人\ndate: 2017-01-09 00:00:00\ntags: 随笔\n---\n我是一个什么样的人，我还能变成一个什么样的人？\n这将是一个伴随我10年的问题。\n\n<!--more-->\n\n刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。\n\n大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。\n\n大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。\n\n......","updated":"2023-12-25T09:50:47.878Z","path":"hiden/我是一个什么样的人.html","comments":1,"layout":"page","_id":"clqkrbsxu000z7vjkq7ts8r0h","content":"<p>我是一个什么样的人，我还能变成一个什么样的人？<br>这将是一个伴随我10年的问题。</p>\n<a id=\"more\"></a>\n<p>刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。</p>\n<p>大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。</p>\n<p>大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。</p>\n<p>……</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>我是一个什么样的人，我还能变成一个什么样的人？<br>这将是一个伴随我10年的问题。</p>","more":"<p>刚上大学的我不善交际，热衷幻想，遇事三分钟热度，期望得到身边人的认可，但是因为没有耐心和计划，很多想法都半路搁浅，顿生一事无成之感。</p>\n<p>大三开始接触安卓，尝试从看得见的apk安装文件入手，照着教程敲出第一行安卓代码。</p>\n<p>大四准备工作，一边学习安卓，一边接触更多的互联网知识，在自己的博客上整理学习内容，争取早日形成知识体系。</p>\n<p>……</p>"},{"title":"测试方案的设计思路","date":"2020-08-31T12:32:18.000Z","tags":"总结","_content":"\n#### 测试方案的设计思路\n<!--more-->\n\n{% pullquote mindmap mindmap-md %}\n- 影响因子\n\t- 空间状态\n\t- 账号状态\n\t- 网络状态\n\t- 业务状态\n\t- 服务器状态\n\t- 用户操作\n\n{% endpullquote %}","source":"hiden/测试方案的设计思路.md","raw":"---\ntitle: 测试方案的设计思路\ndate: 2020-08-31 20:32:18\ntags: 总结\n---\n\n#### 测试方案的设计思路\n<!--more-->\n\n{% pullquote mindmap mindmap-md %}\n- 影响因子\n\t- 空间状态\n\t- 账号状态\n\t- 网络状态\n\t- 业务状态\n\t- 服务器状态\n\t- 用户操作\n\n{% endpullquote %}","updated":"2023-12-25T09:50:47.878Z","path":"hiden/测试方案的设计思路.html","comments":1,"layout":"page","_id":"clqkrbsxv00137vjkc1czdt8y","content":"<h4 id=\"测试方案的设计思路\"><a href=\"#测试方案的设计思路\" class=\"headerlink\" title=\"测试方案的设计思路\"></a>测试方案的设计思路</h4><a id=\"more\"></a>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>影响因子<ul>\n<li>空间状态</li>\n<li>账号状态</li>\n<li>网络状态</li>\n<li>业务状态</li>\n<li>服务器状态</li>\n<li>用户操作</li>\n</ul>\n</li>\n</ul>\n</blockquote><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"测试方案的设计思路\"><a href=\"#测试方案的设计思路\" class=\"headerlink\" title=\"测试方案的设计思路\"></a>测试方案的设计思路</h4>","more":"<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>影响因子<ul>\n<li>空间状态</li>\n<li>账号状态</li>\n<li>网络状态</li>\n<li>业务状态</li>\n<li>服务器状态</li>\n<li>用户操作</li>\n</ul>\n</li>\n</ul>\n</blockquote>"},{"title":"看见时光","date":"2017-01-13T15:28:39.000Z","tags":"摄影","_content":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n\n<img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\">","source":"hiden/看见时光.md","raw":"---\ntitle: 看见时光\ndate: 2017-01-13 23:28:39\ntags: 摄影\n---\n<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n\n<img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\">","updated":"2023-12-25T09:50:47.878Z","path":"hiden/看见时光.html","comments":1,"layout":"page","_id":"clqkrbsxv00157vjk588us8fr","content":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n<p><img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\"></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<!-- ![](http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA) -->\n<p><img src=\"http://r.photo.store.qq.com/psb?/V10nzslk0UHSHE/SR9bvV3dW9ZYZwNvD0IFSBIdUtahVyvY5ndNHNtc9n8!/r/dHIBAAAAAAAA\" height=\"400\"></p>\n"},{"title":"tags","date":"2017-03-01T11:46:44.000Z","type":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-03-01 19:46:44\ntype: \n---\n","updated":"2023-12-25T09:50:47.881Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clqkrbsxv00177vjkmot4s86a","content":"<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":""}],"Post":[{"title":"如何搭建个人博客","date":"2017-01-09T14:27:45.000Z","_content":"\n搭建个人主页的步骤如下：\n- 先将我们写的文章或者照片生成静态页面(hexo)\n- 并将这些静态页面部署到支持静态页面的服务器(github或coding)\n- 这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)\n\n<!--more-->\n\n下面是操作步骤：\n\n#### 准备环境：\n\n- node.js（npm）的安装\n\t\n\t1、hexo 是基于 node.js 来生成页面的\n\t2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令\n\n- hexo 的安装和初始化\n\n\t1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果\n\t2、常用的几条命令如下：\n\t\thexo n p '文章标题'\t//新建文章\n\t\thexo g\t\t\t\t//生成页面\n\t\thexo s\t\t\t\t//本地预览\n\t\thexo d\t\t\t\t//提交页面\n\n- git 的安装和配置\n\n\t1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器\n\t2、上一条的提交页面命令`hexo d`其实就是通过git将页面提交到配置文件中填写的github仓库的\n\n- github 的注册和配置\n\n\t1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件\n\t2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中\n\n\n具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：[手把手教你用Hexo+Github 搭建属于自己的博客](http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&fps=1)\n\n#### 配置主题\n\n跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme\n\n配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置\n\n#### 提交页面\n\n假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件`_config.yml`中\n\t\n\t# Deployment\n\tdeploy:\n\t  type: git\n\t  repo: \n\t    github: git@github.com:reGeorge/regeorge.github.io.git,master\t//github仓库\n\t    coding: git@git.coding.net:reGeorge/reGeorge.git,master\t\t//coding仓库\n\t  branch: master\n\n这里我配置了两个地址，执行`hexo d`命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）\n\t\n\thttps://regeorge.github.io/\n\thttp://regeorge.coding.me/\n\n\n\n\n\n\n","source":"_posts/01_如何搭建个人博客.md","raw":"---\ntitle: 如何搭建个人博客\ndate: 2017-01-09 22:27:45\ntags: hexo\n---\n\n搭建个人主页的步骤如下：\n- 先将我们写的文章或者照片生成静态页面(hexo)\n- 并将这些静态页面部署到支持静态页面的服务器(github或coding)\n- 这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)\n\n<!--more-->\n\n下面是操作步骤：\n\n#### 准备环境：\n\n- node.js（npm）的安装\n\t\n\t1、hexo 是基于 node.js 来生成页面的\n\t2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令\n\n- hexo 的安装和初始化\n\n\t1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果\n\t2、常用的几条命令如下：\n\t\thexo n p '文章标题'\t//新建文章\n\t\thexo g\t\t\t\t//生成页面\n\t\thexo s\t\t\t\t//本地预览\n\t\thexo d\t\t\t\t//提交页面\n\n- git 的安装和配置\n\n\t1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器\n\t2、上一条的提交页面命令`hexo d`其实就是通过git将页面提交到配置文件中填写的github仓库的\n\n- github 的注册和配置\n\n\t1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件\n\t2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中\n\n\n具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：[手把手教你用Hexo+Github 搭建属于自己的博客](http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&fps=1)\n\n#### 配置主题\n\n跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme\n\n配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置\n\n#### 提交页面\n\n假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件`_config.yml`中\n\t\n\t# Deployment\n\tdeploy:\n\t  type: git\n\t  repo: \n\t    github: git@github.com:reGeorge/regeorge.github.io.git,master\t//github仓库\n\t    coding: git@git.coding.net:reGeorge/reGeorge.git,master\t\t//coding仓库\n\t  branch: master\n\n这里我配置了两个地址，执行`hexo d`命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）\n\t\n\thttps://regeorge.github.io/\n\thttp://regeorge.coding.me/\n\n\n\n\n\n\n","slug":"01_如何搭建个人博客","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxk00007vjkp4jq9y5z","content":"<p>搭建个人主页的步骤如下：</p>\n<ul>\n<li>先将我们写的文章或者照片生成静态页面(hexo)</li>\n<li>并将这些静态页面部署到支持静态页面的服务器(github或coding)</li>\n<li>这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)</li>\n</ul>\n<a id=\"more\"></a>\n<p>下面是操作步骤：</p>\n<h4 id=\"准备环境：\"><a href=\"#准备环境：\" class=\"headerlink\" title=\"准备环境：\"></a>准备环境：</h4><ul>\n<li><p>node.js（npm）的安装</p>\n<p>  1、hexo 是基于 node.js 来生成页面的<br>  2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令</p>\n</li>\n<li><p>hexo 的安装和初始化</p>\n<p>  1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果<br>  2、常用的几条命令如下：</p>\n<pre><code>hexo n p &apos;文章标题&apos;    //新建文章\nhexo g                //生成页面\nhexo s                //本地预览\nhexo d                //提交页面\n</code></pre></li>\n<li><p>git 的安装和配置</p>\n<p>  1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器<br>  2、上一条的提交页面命令<code>hexo d</code>其实就是通过git将页面提交到配置文件中填写的github仓库的</p>\n</li>\n<li><p>github 的注册和配置</p>\n<p>  1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件<br>  2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中</p>\n</li>\n</ul>\n<p>具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：<a href=\"http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&amp;fps=1\">手把手教你用Hexo+Github 搭建属于自己的博客</a></p>\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme</p>\n<p>配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置</p>\n<h4 id=\"提交页面\"><a href=\"#提交页面\" class=\"headerlink\" title=\"提交页面\"></a>提交页面</h4><p>假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件<code>_config.yml</code>中</p>\n<pre><code># Deployment\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:reGeorge/regeorge.github.io.git,master    //github仓库\n    coding: git@git.coding.net:reGeorge/reGeorge.git,master        //coding仓库\n  branch: master\n</code></pre><p>这里我配置了两个地址，执行<code>hexo d</code>命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）</p>\n<pre><code>https://regeorge.github.io/\nhttp://regeorge.coding.me/\n</code></pre><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>搭建个人主页的步骤如下：</p>\n<ul>\n<li>先将我们写的文章或者照片生成静态页面(hexo)</li>\n<li>并将这些静态页面部署到支持静态页面的服务器(github或coding)</li>\n<li>这样我们就可以通过服务器的域名地址访问到自己的博客了(regeorge.github.io)</li>\n</ul>","more":"<p>下面是操作步骤：</p>\n<h4 id=\"准备环境：\"><a href=\"#准备环境：\" class=\"headerlink\" title=\"准备环境：\"></a>准备环境：</h4><ul>\n<li><p>node.js（npm）的安装</p>\n<p>  1、hexo 是基于 node.js 来生成页面的<br>  2、node.js 提供了 npm 包管理工具，后面安装 hexo 只需要几行命令</p>\n</li>\n<li><p>hexo 的安装和初始化</p>\n<p>  1、完成后可以在本地生成默认的博客页面，并通过浏览器预览效果<br>  2、常用的几条命令如下：</p>\n<pre><code>hexo n p &apos;文章标题&apos;    //新建文章\nhexo g                //生成页面\nhexo s                //本地预览\nhexo d                //提交页面\n</code></pre></li>\n<li><p>git 的安装和配置</p>\n<p>  1、git是用作版本控制的，也就是在本地生成的博客都是通过git来同步到云端服务器<br>  2、上一条的提交页面命令<code>hexo d</code>其实就是通过git将页面提交到配置文件中填写的github仓库的</p>\n</li>\n<li><p>github 的注册和配置</p>\n<p>  1、github 提供了一个静态页面服务功能，这里要做的是在github上创建一个指定名称的仓库来放置本地生成好的博客页面文件<br>  2、同时还需要把这个创建好的仓库地址填写到本地的配置信息中</p>\n</li>\n</ul>\n<p>具体的安装步骤请参考gdutxiaoxu的文章，每一步都非常详细：<a href=\"http://blog.csdn.net/gdutxiaoxu/article/details/53576018?locationNum=2&amp;fps=1\">手把手教你用Hexo+Github 搭建属于自己的博客</a></p>\n<h4 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h4><p>跟着上述参考文章的操作步骤配置好环境后，已经可以在本地预览到生成的博客界面了，按照这种方法生成的页面其实都是一样的，要让自己的博客不一样，一是要时常更新自己的文章，二是自定义页面的样式，网上也提供了很多开源的主题可以配置，非常方便，我推荐的主题有Next，Yilia，Yelee，更多的主题可以百度hexo theme</p>\n<p>配置的方法就是将主题通过git pull到博客的theme目录下，然后按照该主题的说明文档（github上的readme.md）进行修改自定义的配置</p>\n<h4 id=\"提交页面\"><a href=\"#提交页面\" class=\"headerlink\" title=\"提交页面\"></a>提交页面</h4><p>假设我们已经上面的参考文章配置好了提交的地址：在博客的根目录的配置文件<code>_config.yml</code>中</p>\n<pre><code># Deployment\ndeploy:\n  type: git\n  repo: \n    github: git@github.com:reGeorge/regeorge.github.io.git,master    //github仓库\n    coding: git@git.coding.net:reGeorge/reGeorge.git,master        //coding仓库\n  branch: master\n</code></pre><p>这里我配置了两个地址，执行<code>hexo d</code>命令时会分别向两个仓库推送本地生成的页面，这样我通过两个域名都可以访问到我的博客（coding国内访问的速度更快）</p>\n<pre><code>https://regeorge.github.io/\nhttp://regeorge.coding.me/\n</code></pre>"},{"title":"git常用命令","date":"2017-01-13T17:21:22.000Z","_content":"\n#### 创建本地仓库\n\n`git init`\n.git所在文件夹便是git对应的一个本地仓库\n\n<!--more-->\n\n#### 创建本地分支\n    git branch master\n\n#### 查看本地分支\n    git branch\n\n#### 设置远程仓库地址\n\tgit remote add github git@github.com:regeorge/blog.git\n\n#### 查看已配置的远程仓库\n    git remote\n\n#### 从远程仓库更新到本地分支\n\tgit pull github master\n\n#### 在未加入缓存区时回滚\n    git checkout -- .\n\n#### 将本文件夹内所有改动加入缓存区\n\tgit add .\n\n#### 在加入缓存区时回滚\n    git reset HEAD\n\n#### 将暂存区的改动提交到本地仓库\n\tgit commit -m \"add all files\"\n\n#### 在提交仓库后回滚\n    git log #查看提交记录（带有唯一标识commitid）\n    git revert %commitid%\n\n#### 将本地分支推送到远程仓库\n\tgit push github master\n\n#### .gitignore文件中写入不需要同步的文件夹路径\n\n#### hexo deploy 命令\n在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的\n\n#### FAQ\n\n- Q1：在github上创建仓库，在本地新建仓库并push产生冲突\n\t\n\n- A1：先pull后push\n\t\tgit push -u origin master -f\n\n参考：http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\n\t  http://blog.csdn.net/shiren1118/article/details/7761203\n\n#### 查看提交历史\n    git log\n\n#### 查看简洁的提交历史\n    git log --oneline\n\n#### 查看文件的修改历史\n    git blame <file>\n\n#### 查看工作目录状态\n    git status\n\n#### 比较工作目录和暂存区的差异\n    git diff\n\n#### 比较暂存区和最后一次提交的差异\n    git diff --cached\n\n#### 创建并切换到新分支\n    git checkout -b <branch_name>\n\n#### 合并分支\n    git merge <branch_name>\n\n#### 删除本地分支\n    git branch -d <branch_name>\n\n#### 删除远程分支\n    git push origin --delete <branch_name>\n\n#### 暂存当前更改以便切换分支\n    git stash\n\n#### 恢复暂存的更改\n    git stash pop\n\n#### 查看所有暂存的更改\n    git stash list\n\n#### 清除所有暂存的更改\n    git stash clear","source":"_posts/02_git常用命令.md","raw":"---\ntitle: git常用命令\ndate: 2017-01-14 01:21:22\ntags: git\n---\n\n#### 创建本地仓库\n\n`git init`\n.git所在文件夹便是git对应的一个本地仓库\n\n<!--more-->\n\n#### 创建本地分支\n    git branch master\n\n#### 查看本地分支\n    git branch\n\n#### 设置远程仓库地址\n\tgit remote add github git@github.com:regeorge/blog.git\n\n#### 查看已配置的远程仓库\n    git remote\n\n#### 从远程仓库更新到本地分支\n\tgit pull github master\n\n#### 在未加入缓存区时回滚\n    git checkout -- .\n\n#### 将本文件夹内所有改动加入缓存区\n\tgit add .\n\n#### 在加入缓存区时回滚\n    git reset HEAD\n\n#### 将暂存区的改动提交到本地仓库\n\tgit commit -m \"add all files\"\n\n#### 在提交仓库后回滚\n    git log #查看提交记录（带有唯一标识commitid）\n    git revert %commitid%\n\n#### 将本地分支推送到远程仓库\n\tgit push github master\n\n#### .gitignore文件中写入不需要同步的文件夹路径\n\n#### hexo deploy 命令\n在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的\n\n#### FAQ\n\n- Q1：在github上创建仓库，在本地新建仓库并push产生冲突\n\t\n\n- A1：先pull后push\n\t\tgit push -u origin master -f\n\n参考：http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\n\t  http://blog.csdn.net/shiren1118/article/details/7761203\n\n#### 查看提交历史\n    git log\n\n#### 查看简洁的提交历史\n    git log --oneline\n\n#### 查看文件的修改历史\n    git blame <file>\n\n#### 查看工作目录状态\n    git status\n\n#### 比较工作目录和暂存区的差异\n    git diff\n\n#### 比较暂存区和最后一次提交的差异\n    git diff --cached\n\n#### 创建并切换到新分支\n    git checkout -b <branch_name>\n\n#### 合并分支\n    git merge <branch_name>\n\n#### 删除本地分支\n    git branch -d <branch_name>\n\n#### 删除远程分支\n    git push origin --delete <branch_name>\n\n#### 暂存当前更改以便切换分支\n    git stash\n\n#### 恢复暂存的更改\n    git stash pop\n\n#### 查看所有暂存的更改\n    git stash list\n\n#### 清除所有暂存的更改\n    git stash clear","slug":"02_git常用命令","published":1,"updated":"2025-01-03T15:07:41.127Z","_id":"clqkrbsxl00017vjkfd8icu4p","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"创建本地仓库\"><a href=\"#创建本地仓库\" class=\"headerlink\" title=\"创建本地仓库\"></a>创建本地仓库</h4><p><code>git init</code><br>.git所在文件夹便是git对应的一个本地仓库</p>\n<a id=\"more\"></a>\n<h4 id=\"创建本地分支\"><a href=\"#创建本地分支\" class=\"headerlink\" title=\"创建本地分支\"></a>创建本地分支</h4><pre><code>git branch master\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"设置远程仓库地址\"><a href=\"#设置远程仓库地址\" class=\"headerlink\" title=\"设置远程仓库地址\"></a>设置远程仓库地址</h4><pre><code>git remote add github git@github.com:regeorge/blog.git\n</code></pre><h4 id=\"查看已配置的远程仓库\"><a href=\"#查看已配置的远程仓库\" class=\"headerlink\" title=\"查看已配置的远程仓库\"></a>查看已配置的远程仓库</h4><pre><code>git remote\n</code></pre><h4 id=\"从远程仓库更新到本地分支\"><a href=\"#从远程仓库更新到本地分支\" class=\"headerlink\" title=\"从远程仓库更新到本地分支\"></a>从远程仓库更新到本地分支</h4><pre><code>git pull github master\n</code></pre><h4 id=\"在未加入缓存区时回滚\"><a href=\"#在未加入缓存区时回滚\" class=\"headerlink\" title=\"在未加入缓存区时回滚\"></a>在未加入缓存区时回滚</h4><pre><code>git checkout -- .\n</code></pre><h4 id=\"将本文件夹内所有改动加入缓存区\"><a href=\"#将本文件夹内所有改动加入缓存区\" class=\"headerlink\" title=\"将本文件夹内所有改动加入缓存区\"></a>将本文件夹内所有改动加入缓存区</h4><pre><code>git add .\n</code></pre><h4 id=\"在加入缓存区时回滚\"><a href=\"#在加入缓存区时回滚\" class=\"headerlink\" title=\"在加入缓存区时回滚\"></a>在加入缓存区时回滚</h4><pre><code>git reset HEAD\n</code></pre><h4 id=\"将暂存区的改动提交到本地仓库\"><a href=\"#将暂存区的改动提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的改动提交到本地仓库\"></a>将暂存区的改动提交到本地仓库</h4><pre><code>git commit -m &quot;add all files&quot;\n</code></pre><h4 id=\"在提交仓库后回滚\"><a href=\"#在提交仓库后回滚\" class=\"headerlink\" title=\"在提交仓库后回滚\"></a>在提交仓库后回滚</h4><pre><code>git log #查看提交记录（带有唯一标识commitid）\ngit revert %commitid%\n</code></pre><h4 id=\"将本地分支推送到远程仓库\"><a href=\"#将本地分支推送到远程仓库\" class=\"headerlink\" title=\"将本地分支推送到远程仓库\"></a>将本地分支推送到远程仓库</h4><pre><code>git push github master\n</code></pre><h4 id=\"gitignore文件中写入不需要同步的文件夹路径\"><a href=\"#gitignore文件中写入不需要同步的文件夹路径\" class=\"headerlink\" title=\".gitignore文件中写入不需要同步的文件夹路径\"></a>.gitignore文件中写入不需要同步的文件夹路径</h4><h4 id=\"hexo-deploy-命令\"><a href=\"#hexo-deploy-命令\" class=\"headerlink\" title=\"hexo deploy 命令\"></a>hexo deploy 命令</h4><p>在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的</p>\n<h4 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h4><ul>\n<li>Q1：在github上创建仓库，在本地新建仓库并push产生冲突</li>\n</ul>\n<ul>\n<li>A1：先pull后push<pre><code>git push -u origin master -f\n</code></pre></li>\n</ul>\n<p>参考：<a href=\"http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\">http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/</a><br>      <a href=\"http://blog.csdn.net/shiren1118/article/details/7761203\">http://blog.csdn.net/shiren1118/article/details/7761203</a></p>\n<h4 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h4><pre><code>git log\n</code></pre><h4 id=\"查看简洁的提交历史\"><a href=\"#查看简洁的提交历史\" class=\"headerlink\" title=\"查看简洁的提交历史\"></a>查看简洁的提交历史</h4><pre><code>git log --oneline\n</code></pre><h4 id=\"查看文件的修改历史\"><a href=\"#查看文件的修改历史\" class=\"headerlink\" title=\"查看文件的修改历史\"></a>查看文件的修改历史</h4><pre><code>git blame &lt;file&gt;\n</code></pre><h4 id=\"查看工作目录状态\"><a href=\"#查看工作目录状态\" class=\"headerlink\" title=\"查看工作目录状态\"></a>查看工作目录状态</h4><pre><code>git status\n</code></pre><h4 id=\"比较工作目录和暂存区的差异\"><a href=\"#比较工作目录和暂存区的差异\" class=\"headerlink\" title=\"比较工作目录和暂存区的差异\"></a>比较工作目录和暂存区的差异</h4><pre><code>git diff\n</code></pre><h4 id=\"比较暂存区和最后一次提交的差异\"><a href=\"#比较暂存区和最后一次提交的差异\" class=\"headerlink\" title=\"比较暂存区和最后一次提交的差异\"></a>比较暂存区和最后一次提交的差异</h4><pre><code>git diff --cached\n</code></pre><h4 id=\"创建并切换到新分支\"><a href=\"#创建并切换到新分支\" class=\"headerlink\" title=\"创建并切换到新分支\"></a>创建并切换到新分支</h4><pre><code>git checkout -b &lt;branch_name&gt;\n</code></pre><h4 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h4><pre><code>git merge &lt;branch_name&gt;\n</code></pre><h4 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h4><pre><code>git branch -d &lt;branch_name&gt;\n</code></pre><h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>git push origin --delete &lt;branch_name&gt;\n</code></pre><h4 id=\"暂存当前更改以便切换分支\"><a href=\"#暂存当前更改以便切换分支\" class=\"headerlink\" title=\"暂存当前更改以便切换分支\"></a>暂存当前更改以便切换分支</h4><pre><code>git stash\n</code></pre><h4 id=\"恢复暂存的更改\"><a href=\"#恢复暂存的更改\" class=\"headerlink\" title=\"恢复暂存的更改\"></a>恢复暂存的更改</h4><pre><code>git stash pop\n</code></pre><h4 id=\"查看所有暂存的更改\"><a href=\"#查看所有暂存的更改\" class=\"headerlink\" title=\"查看所有暂存的更改\"></a>查看所有暂存的更改</h4><pre><code>git stash list\n</code></pre><h4 id=\"清除所有暂存的更改\"><a href=\"#清除所有暂存的更改\" class=\"headerlink\" title=\"清除所有暂存的更改\"></a>清除所有暂存的更改</h4><pre><code>git stash clear\n</code></pre><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"创建本地仓库\"><a href=\"#创建本地仓库\" class=\"headerlink\" title=\"创建本地仓库\"></a>创建本地仓库</h4><p><code>git init</code><br>.git所在文件夹便是git对应的一个本地仓库</p>","more":"<h4 id=\"创建本地分支\"><a href=\"#创建本地分支\" class=\"headerlink\" title=\"创建本地分支\"></a>创建本地分支</h4><pre><code>git branch master\n</code></pre><h4 id=\"查看本地分支\"><a href=\"#查看本地分支\" class=\"headerlink\" title=\"查看本地分支\"></a>查看本地分支</h4><pre><code>git branch\n</code></pre><h4 id=\"设置远程仓库地址\"><a href=\"#设置远程仓库地址\" class=\"headerlink\" title=\"设置远程仓库地址\"></a>设置远程仓库地址</h4><pre><code>git remote add github git@github.com:regeorge/blog.git\n</code></pre><h4 id=\"查看已配置的远程仓库\"><a href=\"#查看已配置的远程仓库\" class=\"headerlink\" title=\"查看已配置的远程仓库\"></a>查看已配置的远程仓库</h4><pre><code>git remote\n</code></pre><h4 id=\"从远程仓库更新到本地分支\"><a href=\"#从远程仓库更新到本地分支\" class=\"headerlink\" title=\"从远程仓库更新到本地分支\"></a>从远程仓库更新到本地分支</h4><pre><code>git pull github master\n</code></pre><h4 id=\"在未加入缓存区时回滚\"><a href=\"#在未加入缓存区时回滚\" class=\"headerlink\" title=\"在未加入缓存区时回滚\"></a>在未加入缓存区时回滚</h4><pre><code>git checkout -- .\n</code></pre><h4 id=\"将本文件夹内所有改动加入缓存区\"><a href=\"#将本文件夹内所有改动加入缓存区\" class=\"headerlink\" title=\"将本文件夹内所有改动加入缓存区\"></a>将本文件夹内所有改动加入缓存区</h4><pre><code>git add .\n</code></pre><h4 id=\"在加入缓存区时回滚\"><a href=\"#在加入缓存区时回滚\" class=\"headerlink\" title=\"在加入缓存区时回滚\"></a>在加入缓存区时回滚</h4><pre><code>git reset HEAD\n</code></pre><h4 id=\"将暂存区的改动提交到本地仓库\"><a href=\"#将暂存区的改动提交到本地仓库\" class=\"headerlink\" title=\"将暂存区的改动提交到本地仓库\"></a>将暂存区的改动提交到本地仓库</h4><pre><code>git commit -m &quot;add all files&quot;\n</code></pre><h4 id=\"在提交仓库后回滚\"><a href=\"#在提交仓库后回滚\" class=\"headerlink\" title=\"在提交仓库后回滚\"></a>在提交仓库后回滚</h4><pre><code>git log #查看提交记录（带有唯一标识commitid）\ngit revert %commitid%\n</code></pre><h4 id=\"将本地分支推送到远程仓库\"><a href=\"#将本地分支推送到远程仓库\" class=\"headerlink\" title=\"将本地分支推送到远程仓库\"></a>将本地分支推送到远程仓库</h4><pre><code>git push github master\n</code></pre><h4 id=\"gitignore文件中写入不需要同步的文件夹路径\"><a href=\"#gitignore文件中写入不需要同步的文件夹路径\" class=\"headerlink\" title=\".gitignore文件中写入不需要同步的文件夹路径\"></a>.gitignore文件中写入不需要同步的文件夹路径</h4><h4 id=\"hexo-deploy-命令\"><a href=\"#hexo-deploy-命令\" class=\"headerlink\" title=\"hexo deploy 命令\"></a>hexo deploy 命令</h4><p>在使用hexo搭建博客时，blog目录下有一个.git文件夹，而.deploy_git文件夹内的.git文件夹又对应了另一个仓库,hexo d命令正是将此目录下的仓库推送到远程仓库从而实现更新博客的</p>\n<h4 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h4><ul>\n<li>Q1：在github上创建仓库，在本地新建仓库并push产生冲突</li>\n</ul>\n<ul>\n<li>A1：先pull后push<pre><code>git push -u origin master -f\n</code></pre></li>\n</ul>\n<p>参考：<a href=\"http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/\">http://wuchong.me/blog/2014/01/17/use-github-to-manage-hexo-source/</a><br>      <a href=\"http://blog.csdn.net/shiren1118/article/details/7761203\">http://blog.csdn.net/shiren1118/article/details/7761203</a></p>\n<h4 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h4><pre><code>git log\n</code></pre><h4 id=\"查看简洁的提交历史\"><a href=\"#查看简洁的提交历史\" class=\"headerlink\" title=\"查看简洁的提交历史\"></a>查看简洁的提交历史</h4><pre><code>git log --oneline\n</code></pre><h4 id=\"查看文件的修改历史\"><a href=\"#查看文件的修改历史\" class=\"headerlink\" title=\"查看文件的修改历史\"></a>查看文件的修改历史</h4><pre><code>git blame &lt;file&gt;\n</code></pre><h4 id=\"查看工作目录状态\"><a href=\"#查看工作目录状态\" class=\"headerlink\" title=\"查看工作目录状态\"></a>查看工作目录状态</h4><pre><code>git status\n</code></pre><h4 id=\"比较工作目录和暂存区的差异\"><a href=\"#比较工作目录和暂存区的差异\" class=\"headerlink\" title=\"比较工作目录和暂存区的差异\"></a>比较工作目录和暂存区的差异</h4><pre><code>git diff\n</code></pre><h4 id=\"比较暂存区和最后一次提交的差异\"><a href=\"#比较暂存区和最后一次提交的差异\" class=\"headerlink\" title=\"比较暂存区和最后一次提交的差异\"></a>比较暂存区和最后一次提交的差异</h4><pre><code>git diff --cached\n</code></pre><h4 id=\"创建并切换到新分支\"><a href=\"#创建并切换到新分支\" class=\"headerlink\" title=\"创建并切换到新分支\"></a>创建并切换到新分支</h4><pre><code>git checkout -b &lt;branch_name&gt;\n</code></pre><h4 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h4><pre><code>git merge &lt;branch_name&gt;\n</code></pre><h4 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h4><pre><code>git branch -d &lt;branch_name&gt;\n</code></pre><h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>git push origin --delete &lt;branch_name&gt;\n</code></pre><h4 id=\"暂存当前更改以便切换分支\"><a href=\"#暂存当前更改以便切换分支\" class=\"headerlink\" title=\"暂存当前更改以便切换分支\"></a>暂存当前更改以便切换分支</h4><pre><code>git stash\n</code></pre><h4 id=\"恢复暂存的更改\"><a href=\"#恢复暂存的更改\" class=\"headerlink\" title=\"恢复暂存的更改\"></a>恢复暂存的更改</h4><pre><code>git stash pop\n</code></pre><h4 id=\"查看所有暂存的更改\"><a href=\"#查看所有暂存的更改\" class=\"headerlink\" title=\"查看所有暂存的更改\"></a>查看所有暂存的更改</h4><pre><code>git stash list\n</code></pre><h4 id=\"清除所有暂存的更改\"><a href=\"#清除所有暂存的更改\" class=\"headerlink\" title=\"清除所有暂存的更改\"></a>清除所有暂存的更改</h4><pre><code>git stash clear\n</code></pre>"},{"title":"冒泡排序算法","date":"2017-03-26T15:56:26.000Z","_content":"(对 n 个数降序)冒泡排序的思路是：\n\n1、最多进行 (n-1) 次排序\n\n2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）\n   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断\n\n<!--more-->\n\n关于复杂度的概念还未与其他排序算法比较\n\n代码如下：\n```\npublic class MyBubbleSort {\n\tpublic static void main(String[] args)\n\t{\n\t\tint[] arr = {2,6,3,9,4,5,1,2,5,8};\n\t\tint len = arr.length;\n\t\tfor (int i=0;i<len-1;i++)\n\t\t{\n\t\t\tfor (int j=0;j<len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的\n\t\t\t{\n\t\t\t\tif(arr[j]<arr[j+1])\n\t\t\t\t{\t\n\t\t\t\t\tint temp = 0;\n\t\t\t\t\ttemp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"第\"+(i+1)+\"次排序结果:\");\t\n\t\t\tfor(int a = 0; a <len;a++)\n\t\t\t{\n\t\t\t\tSystem.out.print(arr[a] + \"\\t\");\n            }\n            System.out.println(\"\");\n\t\t}\n\t\tSystem.out.print(\"最终排序结果为：\");\n\t\tfor(int a = 0; a <len;a++)\n\t\t{\n\t\t\tSystem.out.print(arr[a] + \"\\t\");\n        }\n        System.out.println(\"\");\n\t}\n}\n```","source":"_posts/03_冒泡排序算法.md","raw":"---\ntitle: 冒泡排序算法\ndate: 2017-03-26 23:56:26\ntags: 算法\n---\n(对 n 个数降序)冒泡排序的思路是：\n\n1、最多进行 (n-1) 次排序\n\n2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）\n   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断\n\n<!--more-->\n\n关于复杂度的概念还未与其他排序算法比较\n\n代码如下：\n```\npublic class MyBubbleSort {\n\tpublic static void main(String[] args)\n\t{\n\t\tint[] arr = {2,6,3,9,4,5,1,2,5,8};\n\t\tint len = arr.length;\n\t\tfor (int i=0;i<len-1;i++)\n\t\t{\n\t\t\tfor (int j=0;j<len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的\n\t\t\t{\n\t\t\t\tif(arr[j]<arr[j+1])\n\t\t\t\t{\t\n\t\t\t\t\tint temp = 0;\n\t\t\t\t\ttemp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(\"第\"+(i+1)+\"次排序结果:\");\t\n\t\t\tfor(int a = 0; a <len;a++)\n\t\t\t{\n\t\t\t\tSystem.out.print(arr[a] + \"\\t\");\n            }\n            System.out.println(\"\");\n\t\t}\n\t\tSystem.out.print(\"最终排序结果为：\");\n\t\tfor(int a = 0; a <len;a++)\n\t\t{\n\t\t\tSystem.out.print(arr[a] + \"\\t\");\n        }\n        System.out.println(\"\");\n\t}\n}\n```","slug":"03_冒泡排序算法","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxm00037vjkqammq4q3","content":"<p>(对 n 个数降序)冒泡排序的思路是：</p>\n<p>1、最多进行 (n-1) 次排序</p>\n<p>2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）<br>   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断</p>\n<a id=\"more\"></a>\n<p>关于复杂度的概念还未与其他排序算法比较</p>\n<p>代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class MyBubbleSort &#123;</div><div class=\"line\">\tpublic static void main(String[] args)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tint[] arr = &#123;2,6,3,9,4,5,1,2,5,8&#125;;</div><div class=\"line\">\t\tint len = arr.length;</div><div class=\"line\">\t\tfor (int i=0;i&lt;len-1;i++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tfor (int j=0;j&lt;len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tif(arr[j]&lt;arr[j+1])</div><div class=\"line\">\t\t\t\t&#123;\t</div><div class=\"line\">\t\t\t\t\tint temp = 0;</div><div class=\"line\">\t\t\t\t\ttemp = arr[j];</div><div class=\"line\">\t\t\t\t\tarr[j] = arr[j+1];</div><div class=\"line\">\t\t\t\t\tarr[j+1] = temp;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tSystem.out.print(&quot;第&quot;+(i+1)+&quot;次排序结果:&quot;);\t</div><div class=\"line\">\t\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            System.out.println(&quot;&quot;);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.print(&quot;最终排序结果为：&quot;);</div><div class=\"line\">\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        System.out.println(&quot;&quot;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>(对 n 个数降序)冒泡排序的思路是：</p>\n<p>1、最多进行 (n-1) 次排序</p>\n<p>2、每次排序将从第一个开始遍历和后一个数比较（确定是否执行交换位置）<br>   值得注意的是本次排序后会产生一个最小数，下次排序可以不用和该数进行比较的判断</p>","more":"<p>关于复杂度的概念还未与其他排序算法比较</p>\n<p>代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class MyBubbleSort &#123;</div><div class=\"line\">\tpublic static void main(String[] args)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tint[] arr = &#123;2,6,3,9,4,5,1,2,5,8&#125;;</div><div class=\"line\">\t\tint len = arr.length;</div><div class=\"line\">\t\tfor (int i=0;i&lt;len-1;i++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tfor (int j=0;j&lt;len-1-i;j++)//减i的原因是经过i+1次排序后倒数第i+1个数都是确认最小的</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tif(arr[j]&lt;arr[j+1])</div><div class=\"line\">\t\t\t\t&#123;\t</div><div class=\"line\">\t\t\t\t\tint temp = 0;</div><div class=\"line\">\t\t\t\t\ttemp = arr[j];</div><div class=\"line\">\t\t\t\t\tarr[j] = arr[j+1];</div><div class=\"line\">\t\t\t\t\tarr[j+1] = temp;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tSystem.out.print(&quot;第&quot;+(i+1)+&quot;次排序结果:&quot;);\t</div><div class=\"line\">\t\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t\t&#123;</div><div class=\"line\">\t\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            System.out.println(&quot;&quot;);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.print(&quot;最终排序结果为：&quot;);</div><div class=\"line\">\t\tfor(int a = 0; a &lt;len;a++)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\tSystem.out.print(arr[a] + &quot;\\t&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        System.out.println(&quot;&quot;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"遇到乱码问题的解决方案","date":"2017-03-29T14:25:23.000Z","_content":"\n#### 编码的概念\n\n- GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。\n\n- UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。\n\n<!--more-->\n\n#### GBK和UTF8有什么区别？\n\n- UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。\n\n- GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。\n\n#### 如何在sublime中添加对中文的支持\n\n- 首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n- 然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)\n\nPS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。\n\n- 稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。\n\n#### Tips：\n  \n- 养成将手敲的代码存为 UTF-8 编码格式的习惯\n- 遇到乱码首先尝试转 UTF-8\n- 切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了","source":"_posts/04_GBK和UTF-8的区别.md","raw":"---\ntitle: 遇到乱码问题的解决方案\ndate: 2017-03-29 22:25:23\ntags: java\n---\n\n#### 编码的概念\n\n- GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。\n\n- UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。\n\n<!--more-->\n\n#### GBK和UTF8有什么区别？\n\n- UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。\n\n- GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。\n\n#### 如何在sublime中添加对中文的支持\n\n- 首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n- 然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)\n\nPS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。\n\n- 稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。\n\n#### Tips：\n  \n- 养成将手敲的代码存为 UTF-8 编码格式的习惯\n- 遇到乱码首先尝试转 UTF-8\n- 切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了","slug":"04_GBK和UTF-8的区别","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxn00047vjke1p6kom7","content":"<h4 id=\"编码的概念\"><a href=\"#编码的概念\" class=\"headerlink\" title=\"编码的概念\"></a>编码的概念</h4><ul>\n<li><p>GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。</p>\n</li>\n<li><p>UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h4 id=\"GBK和UTF8有什么区别？\"><a href=\"#GBK和UTF8有什么区别？\" class=\"headerlink\" title=\"GBK和UTF8有什么区别？\"></a>GBK和UTF8有什么区别？</h4><ul>\n<li><p>UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。</p>\n</li>\n<li><p>GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。</p>\n</li>\n</ul>\n<h4 id=\"如何在sublime中添加对中文的支持\"><a href=\"#如何在sublime中添加对中文的支持\" class=\"headerlink\" title=\"如何在sublime中添加对中文的支持\"></a>如何在sublime中添加对中文的支持</h4><ul>\n<li>首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>\n<ul>\n<li>然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)</li>\n</ul>\n<p>PS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。</p>\n<ul>\n<li>稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。</li>\n</ul>\n<h4 id=\"Tips：\"><a href=\"#Tips：\" class=\"headerlink\" title=\"Tips：\"></a>Tips：</h4><ul>\n<li>养成将手敲的代码存为 UTF-8 编码格式的习惯</li>\n<li>遇到乱码首先尝试转 UTF-8</li>\n<li>切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了</li>\n</ul>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"编码的概念\"><a href=\"#编码的概念\" class=\"headerlink\" title=\"编码的概念\"></a>编码的概念</h4><ul>\n<li><p>GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。</p>\n</li>\n<li><p>UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。</p>\n</li>\n</ul>","more":"<h4 id=\"GBK和UTF8有什么区别？\"><a href=\"#GBK和UTF8有什么区别？\" class=\"headerlink\" title=\"GBK和UTF8有什么区别？\"></a>GBK和UTF8有什么区别？</h4><ul>\n<li><p>UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。</p>\n</li>\n<li><p>GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。</p>\n</li>\n</ul>\n<h4 id=\"如何在sublime中添加对中文的支持\"><a href=\"#如何在sublime中添加对中文的支持\" class=\"headerlink\" title=\"如何在sublime中添加对中文的支持\"></a>如何在sublime中添加对中文的支持</h4><ul>\n<li>首先安装Package control工具：在Sublime Text里，按ctrl+`，打开Console，一次性输入如下代码：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>\n<ul>\n<li>然后按ctrl shift p 打开命令行模式：输入Install Package关键字，然后点击自动出现的下拉菜单里的第一项：Package Control: Install Package(回车无效)</li>\n</ul>\n<p>PS：执行上述步骤不要急，左下角会有一个等于号来回动，看着它也许你会安静点。。</p>\n<ul>\n<li>稍等一会，会再次在命令行下弹出一个下拉菜单。输入“ConvertToUTF8”或者“GBK Encoding Support”，选择匹配项。中文字符就可以正常显示了。</li>\n</ul>\n<h4 id=\"Tips：\"><a href=\"#Tips：\" class=\"headerlink\" title=\"Tips：\"></a>Tips：</h4><ul>\n<li>养成将手敲的代码存为 UTF-8 编码格式的习惯</li>\n<li>遇到乱码首先尝试转 UTF-8</li>\n<li>切忌一看到乱码先乱删一通，然后气急败坏地把代码文件全删了</li>\n</ul>"},{"title":"Markdown的使用","date":"2018-02-21T12:32:18.000Z","_content":"\nMarkdown的常用方法如下：\n\n<!--more-->\n\n## 1.标题\n\n`### 三级标题`  \n\n### 三级标题\n\n\n## 2.无序列表\n\n```\n- 列表1\n- 列表2\n- 列表2\n```\n\n- 列表1\n- 列表2\n- 列表2\n\n## 3.有序列表\n```\n1. 列表1\n2. 列表2\n3. 列表3\n```\n\n1. 列表1\n2. 列表2\n3. 列表3\n\n## 4.链接\n\n`[百度](http://www.baidu.com/)`  \n\n[百度](http://www.baidu.com/)\n\n## 5.图片\n\n`![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)`  \n\n![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n```\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n```\n\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n\n## 6.引用\n\n`> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。`  \n\n> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n## 7.代码引用\n```\n\t`hello world`\n```\n\n`hello world`\n\n\n\n    ```\n    for() {\n    i++;\n    }\n    ```\n\n```\nfor() {\n  i++;\n}\n```\n## 8.表格\n\n```\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n```\n\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n\n\n\n## 8. 换行\n1. 直接用空行来代表换行\n\n\n2. 或者在行位连续输入2个空格来代表换行  \n","source":"_posts/07_Markdown的使用.md","raw":"---\ntitle: Markdown的使用\ndate: 2018-02-21 20:32:18\ntags: markdown\n---\n\nMarkdown的常用方法如下：\n\n<!--more-->\n\n## 1.标题\n\n`### 三级标题`  \n\n### 三级标题\n\n\n## 2.无序列表\n\n```\n- 列表1\n- 列表2\n- 列表2\n```\n\n- 列表1\n- 列表2\n- 列表2\n\n## 3.有序列表\n```\n1. 列表1\n2. 列表2\n3. 列表3\n```\n\n1. 列表1\n2. 列表2\n3. 列表3\n\n## 4.链接\n\n`[百度](http://www.baidu.com/)`  \n\n[百度](http://www.baidu.com/)\n\n## 5.图片\n\n`![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)`  \n\n![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)\n\n```\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n```\n\n<img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/>\n\n## 6.引用\n\n`> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。`  \n\n> *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。\n\n## 7.代码引用\n```\n\t`hello world`\n```\n\n`hello world`\n\n\n\n    ```\n    for() {\n    i++;\n    }\n    ```\n\n```\nfor() {\n  i++;\n}\n```\n## 8.表格\n\n```\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n```\n\n|姓名|学号|成绩|\n|----|:----:|----:|\n|张三|35|60|\n|李四|33|59|\n\n\n\n## 8. 换行\n1. 直接用空行来代表换行\n\n\n2. 或者在行位连续输入2个空格来代表换行  \n","slug":"07_Markdown的使用","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxn00057vjkkxae08rd","content":"<p>Markdown的常用方法如下：</p>\n<a id=\"more\"></a>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1.标题\"></a>1.标题</h2><p><code>### 三级标题</code>  </p>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"2-无序列表\"><a href=\"#2-无序列表\" class=\"headerlink\" title=\"2.无序列表\"></a>2.无序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- 列表1</div><div class=\"line\">- 列表2</div><div class=\"line\">- 列表2</div></pre></td></tr></table></figure>\n<ul>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表2</li>\n</ul>\n<h2 id=\"3-有序列表\"><a href=\"#3-有序列表\" class=\"headerlink\" title=\"3.有序列表\"></a>3.有序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 列表1</div><div class=\"line\">2. 列表2</div><div class=\"line\">3. 列表3</div></pre></td></tr></table></figure>\n<ol>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表3</li>\n</ol>\n<h2 id=\"4-链接\"><a href=\"#4-链接\" class=\"headerlink\" title=\"4.链接\"></a>4.链接</h2><p><code>[百度](http://www.baidu.com/)</code>  </p>\n<p><a href=\"http://www.baidu.com/\">百度</a></p>\n<h2 id=\"5-图片\"><a href=\"#5-图片\" class=\"headerlink\" title=\"5.图片\"></a>5.图片</h2><p><code>![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)</code>  </p>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;img src=&quot;http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg&quot; height = &quot;110&quot; div align=&quot;right&quot;/&gt;</div></pre></td></tr></table></figure>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/></p>\n<h2 id=\"6-引用\"><a href=\"#6-引用\" class=\"headerlink\" title=\"6.引用\"></a>6.引用</h2><p><code>&gt; *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。</code>  </p>\n<blockquote>\n<p><em>我挥舞着本子和键盘</em>，<strong>发誓要把这世界写个明明白白</strong>。</p>\n</blockquote>\n<h2 id=\"7-代码引用\"><a href=\"#7-代码引用\" class=\"headerlink\" title=\"7.代码引用\"></a>7.代码引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">`hello world`</div></pre></td></tr></table></figure>\n<p><code>hello world</code></p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">for() &#123;</div><div class=\"line\">i++;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">for() &#123;</div><div class=\"line\">  i++;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"8-表格\"><a href=\"#8-表格\" class=\"headerlink\" title=\"8.表格\"></a>8.表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">|姓名|学号|成绩|</div><div class=\"line\">|----|:----:|----:|</div><div class=\"line\">|张三|35|60|</div><div class=\"line\">|李四|33|59|</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:right\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:right\">60</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"8-换行\"><a href=\"#8-换行\" class=\"headerlink\" title=\"8. 换行\"></a>8. 换行</h2><ol>\n<li>直接用空行来代表换行</li>\n</ol>\n<ol>\n<li>或者在行位连续输入2个空格来代表换行  </li>\n</ol>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>Markdown的常用方法如下：</p>","more":"<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1.标题\"></a>1.标题</h2><p><code>### 三级标题</code>  </p>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"2-无序列表\"><a href=\"#2-无序列表\" class=\"headerlink\" title=\"2.无序列表\"></a>2.无序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- 列表1</div><div class=\"line\">- 列表2</div><div class=\"line\">- 列表2</div></pre></td></tr></table></figure>\n<ul>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表2</li>\n</ul>\n<h2 id=\"3-有序列表\"><a href=\"#3-有序列表\" class=\"headerlink\" title=\"3.有序列表\"></a>3.有序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. 列表1</div><div class=\"line\">2. 列表2</div><div class=\"line\">3. 列表3</div></pre></td></tr></table></figure>\n<ol>\n<li>列表1</li>\n<li>列表2</li>\n<li>列表3</li>\n</ol>\n<h2 id=\"4-链接\"><a href=\"#4-链接\" class=\"headerlink\" title=\"4.链接\"></a>4.链接</h2><p><code>[百度](http://www.baidu.com/)</code>  </p>\n<p><a href=\"http://www.baidu.com/\">百度</a></p>\n<h2 id=\"5-图片\"><a href=\"#5-图片\" class=\"headerlink\" title=\"5.图片\"></a>5.图片</h2><p><code>![](http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg)</code>  </p>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;img src=&quot;http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg&quot; height = &quot;110&quot; div align=&quot;right&quot;/&gt;</div></pre></td></tr></table></figure>\n<p><img src=\"http://img0.ph.126.net/lsmfEETHdhqyL1Yshsk4Ww==/6631563645446087568.jpg\" height = \"110\" div align=\"right\"/></p>\n<h2 id=\"6-引用\"><a href=\"#6-引用\" class=\"headerlink\" title=\"6.引用\"></a>6.引用</h2><p><code>&gt; *我挥舞着本子和键盘*，**发誓要把这世界写个明明白白**。</code>  </p>\n<blockquote>\n<p><em>我挥舞着本子和键盘</em>，<strong>发誓要把这世界写个明明白白</strong>。</p>\n</blockquote>\n<h2 id=\"7-代码引用\"><a href=\"#7-代码引用\" class=\"headerlink\" title=\"7.代码引用\"></a>7.代码引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">`hello world`</div></pre></td></tr></table></figure>\n<p><code>hello world</code></p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">for() &#123;</div><div class=\"line\">i++;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">for() &#123;</div><div class=\"line\">  i++;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"8-表格\"><a href=\"#8-表格\" class=\"headerlink\" title=\"8.表格\"></a>8.表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">|姓名|学号|成绩|</div><div class=\"line\">|----|:----:|----:|</div><div class=\"line\">|张三|35|60|</div><div class=\"line\">|李四|33|59|</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:right\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>张三</td>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:right\">60</td>\n</tr>\n<tr>\n<td>李四</td>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:right\">59</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"8-换行\"><a href=\"#8-换行\" class=\"headerlink\" title=\"8. 换行\"></a>8. 换行</h2><ol>\n<li>直接用空行来代表换行</li>\n</ol>\n<ol>\n<li>或者在行位连续输入2个空格来代表换行  </li>\n</ol>"},{"title":"使用selenium+wget实现自动下载图片","date":"2018-03-05T15:04:42.000Z","_content":"\n#### 操作步骤\n\nunsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。\n\n另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe\n\n<!--more-->\n\n#### 环境安装\n\n1. selenium\n2. wget\n\n\tpip install selenium\n\tpip install wget\n\n#### python脚本\n\n\tfrom selenium import webdriver\n\timport wget\n\timport os\n\timport time\n\timport subprocess\n\n\tdef mkdir(path):\n\t    # 去除首位空格\n\t    path=path.strip()\n\t    # 去除尾部 \\ 符号\n\t    path=path.rstrip(\"\\\\\")\n\n\t    # 判断路径是否存在\n\t    # 存在     True\n\t    # 不存在   False\n\t    isExists=os.path.exists(path)\n\n\t    # 判断结果\n\t    if not isExists:\n\t        # 如果不存在则创建目录\n\t        print ('%s创建成功'%path)\n\t        # 创建目录操作函数\n\t        os.makedirs(path)\n\t        return True\n\t    else:\n\t        # 如果目录存在则不创建，并提示目录已存在\n\t        print ('%s目录已存在'%path)\n\t        return False\n\n\n\tdef download_pic(folderpath='',list=[]):\n\t    i = 1\n\t    for url in list:\n\t        try:\n\t        #     wget.download(url, out='%s\\\\%d.jpg' %(folderpath,i))\n\t            cmd = 'C:\\\\Python36\\\\Scripts\\\\wget -O \"%s\\\\%d.jpg\" \"%s\"' %(folderpath,i,url)\n\t            print(cmd)\n\t            subprocess.Popen(cmd)\n\t            i += 1\n\t        except:\n\t            print('skip')\n\t    print('下载成功...')\n\n\tdef craw_url(scroll='2',web_url=''):\n\t    driver = webdriver.Chrome('C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe')\n\t    driver.get(web_url)\n\t    driver.maximize_window()\n\t    time.sleep(3)\n\t    urls = []\n\t    try:\n\t        for i in range(1,scroll):\n\t            pics = driver.find_elements_by_class_name(name='_2zEKz')\n\t            for pic in pics:\n\t                src = '%s\\n'%pic.get_attribute(name='src')\n\t                src = src.replace('1000','2592')\n\t                # print(src)\n\t                urls.append(src)\n\t            js=\"window.scrollTo(0,document.body.scrollHeight)\"\n\t            driver.execute_script(js)\n\t            time.sleep(3)\n\t            print(\"循环次数：%d\"%i)\n\t        driver.close()\n\t    except:\n\t        driver.close()\n\t    urls = list(set(urls))\n\t    print('获取图片链接成功...')\n\t    return urls\n\n\tif __name__ == \"__main__\":\n\t    download_path = 'G:\\\\02_photo\\\\unsplash'\n\t    url_list=craw_url(scroll=1000,web_url='https://unsplash.com/')\n\t    mkdir(download_path)\n\t    download_pic(folderpath=download_path,list=url_list)\n\n\t    #\tfor url in url_list:\n\t    #\t        print(url)\n\t    #\ttry:\n\t    #    \tf=open('%s\\\\0_urls.txt'%download_path,'w')\n\t    #   \tf.writelines(url_list)\n\t    #   \tf.close()\n\t    #\texcept:\n\t       \t \tpass\n\t    \t\n#### 下载成功\n\n![1.png](http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","source":"_posts/08_使用selenium-wget实现自动下载图片.md","raw":"---\ntitle: 使用selenium+wget实现自动下载图片\ndate: 2018-03-05 23:04:42\ntags: python\n---\n\n#### 操作步骤\n\nunsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。\n\n另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe\n\n<!--more-->\n\n#### 环境安装\n\n1. selenium\n2. wget\n\n\tpip install selenium\n\tpip install wget\n\n#### python脚本\n\n\tfrom selenium import webdriver\n\timport wget\n\timport os\n\timport time\n\timport subprocess\n\n\tdef mkdir(path):\n\t    # 去除首位空格\n\t    path=path.strip()\n\t    # 去除尾部 \\ 符号\n\t    path=path.rstrip(\"\\\\\")\n\n\t    # 判断路径是否存在\n\t    # 存在     True\n\t    # 不存在   False\n\t    isExists=os.path.exists(path)\n\n\t    # 判断结果\n\t    if not isExists:\n\t        # 如果不存在则创建目录\n\t        print ('%s创建成功'%path)\n\t        # 创建目录操作函数\n\t        os.makedirs(path)\n\t        return True\n\t    else:\n\t        # 如果目录存在则不创建，并提示目录已存在\n\t        print ('%s目录已存在'%path)\n\t        return False\n\n\n\tdef download_pic(folderpath='',list=[]):\n\t    i = 1\n\t    for url in list:\n\t        try:\n\t        #     wget.download(url, out='%s\\\\%d.jpg' %(folderpath,i))\n\t            cmd = 'C:\\\\Python36\\\\Scripts\\\\wget -O \"%s\\\\%d.jpg\" \"%s\"' %(folderpath,i,url)\n\t            print(cmd)\n\t            subprocess.Popen(cmd)\n\t            i += 1\n\t        except:\n\t            print('skip')\n\t    print('下载成功...')\n\n\tdef craw_url(scroll='2',web_url=''):\n\t    driver = webdriver.Chrome('C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe')\n\t    driver.get(web_url)\n\t    driver.maximize_window()\n\t    time.sleep(3)\n\t    urls = []\n\t    try:\n\t        for i in range(1,scroll):\n\t            pics = driver.find_elements_by_class_name(name='_2zEKz')\n\t            for pic in pics:\n\t                src = '%s\\n'%pic.get_attribute(name='src')\n\t                src = src.replace('1000','2592')\n\t                # print(src)\n\t                urls.append(src)\n\t            js=\"window.scrollTo(0,document.body.scrollHeight)\"\n\t            driver.execute_script(js)\n\t            time.sleep(3)\n\t            print(\"循环次数：%d\"%i)\n\t        driver.close()\n\t    except:\n\t        driver.close()\n\t    urls = list(set(urls))\n\t    print('获取图片链接成功...')\n\t    return urls\n\n\tif __name__ == \"__main__\":\n\t    download_path = 'G:\\\\02_photo\\\\unsplash'\n\t    url_list=craw_url(scroll=1000,web_url='https://unsplash.com/')\n\t    mkdir(download_path)\n\t    download_pic(folderpath=download_path,list=url_list)\n\n\t    #\tfor url in url_list:\n\t    #\t        print(url)\n\t    #\ttry:\n\t    #    \tf=open('%s\\\\0_urls.txt'%download_path,'w')\n\t    #   \tf.writelines(url_list)\n\t    #   \tf.close()\n\t    #\texcept:\n\t       \t \tpass\n\t    \t\n#### 下载成功\n\n![1.png](http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","slug":"08_使用selenium-wget实现自动下载图片","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxn00087vjkeyh166ah","content":"<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><p>unsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。</p>\n<p>另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe</p>\n<a id=\"more\"></a>\n<h4 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h4><ol>\n<li>selenium</li>\n<li><p>wget</p>\n<p> pip install selenium<br> pip install wget</p>\n</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><pre><code>from selenium import webdriver\nimport wget\nimport os\nimport time\nimport subprocess\n\ndef mkdir(path):\n    # 去除首位空格\n    path=path.strip()\n    # 去除尾部 \\ 符号\n    path=path.rstrip(&quot;\\\\&quot;)\n\n    # 判断路径是否存在\n    # 存在     True\n    # 不存在   False\n    isExists=os.path.exists(path)\n\n    # 判断结果\n    if not isExists:\n        # 如果不存在则创建目录\n        print (&apos;%s创建成功&apos;%path)\n        # 创建目录操作函数\n        os.makedirs(path)\n        return True\n    else:\n        # 如果目录存在则不创建，并提示目录已存在\n        print (&apos;%s目录已存在&apos;%path)\n        return False\n\n\ndef download_pic(folderpath=&apos;&apos;,list=[]):\n    i = 1\n    for url in list:\n        try:\n        #     wget.download(url, out=&apos;%s\\\\%d.jpg&apos; %(folderpath,i))\n            cmd = &apos;C:\\\\Python36\\\\Scripts\\\\wget -O &quot;%s\\\\%d.jpg&quot; &quot;%s&quot;&apos; %(folderpath,i,url)\n            print(cmd)\n            subprocess.Popen(cmd)\n            i += 1\n        except:\n            print(&apos;skip&apos;)\n    print(&apos;下载成功...&apos;)\n\ndef craw_url(scroll=&apos;2&apos;,web_url=&apos;&apos;):\n    driver = webdriver.Chrome(&apos;C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe&apos;)\n    driver.get(web_url)\n    driver.maximize_window()\n    time.sleep(3)\n    urls = []\n    try:\n        for i in range(1,scroll):\n            pics = driver.find_elements_by_class_name(name=&apos;_2zEKz&apos;)\n            for pic in pics:\n                src = &apos;%s\\n&apos;%pic.get_attribute(name=&apos;src&apos;)\n                src = src.replace(&apos;1000&apos;,&apos;2592&apos;)\n                # print(src)\n                urls.append(src)\n            js=&quot;window.scrollTo(0,document.body.scrollHeight)&quot;\n            driver.execute_script(js)\n            time.sleep(3)\n            print(&quot;循环次数：%d&quot;%i)\n        driver.close()\n    except:\n        driver.close()\n    urls = list(set(urls))\n    print(&apos;获取图片链接成功...&apos;)\n    return urls\n\nif __name__ == &quot;__main__&quot;:\n    download_path = &apos;G:\\\\02_photo\\\\unsplash&apos;\n    url_list=craw_url(scroll=1000,web_url=&apos;https://unsplash.com/&apos;)\n    mkdir(download_path)\n    download_pic(folderpath=download_path,list=url_list)\n\n    #    for url in url_list:\n    #            print(url)\n    #    try:\n    #        f=open(&apos;%s\\\\0_urls.txt&apos;%download_path,&apos;w&apos;)\n    #       f.writelines(url_list)\n    #       f.close()\n    #    except:\n                pass\n</code></pre><h4 id=\"下载成功\"><a href=\"#下载成功\" class=\"headerlink\" title=\"下载成功\"></a>下载成功</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><p>unsplash.com是一个免费下载高清图片的网站，我们可以使用web自动化工具selenium来批量获取该网站主页上提供的海量图片下载链接，并使用强大的多线程下载工具wget下载这些图片。</p>\n<p>另外，selenium需要配合chromedriver.exe来操控谷歌浏览器，我们可以通过搜索下载对应浏览器版本的chromedriver.exe</p>","more":"<h4 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h4><ol>\n<li>selenium</li>\n<li><p>wget</p>\n<p> pip install selenium<br> pip install wget</p>\n</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><pre><code>from selenium import webdriver\nimport wget\nimport os\nimport time\nimport subprocess\n\ndef mkdir(path):\n    # 去除首位空格\n    path=path.strip()\n    # 去除尾部 \\ 符号\n    path=path.rstrip(&quot;\\\\&quot;)\n\n    # 判断路径是否存在\n    # 存在     True\n    # 不存在   False\n    isExists=os.path.exists(path)\n\n    # 判断结果\n    if not isExists:\n        # 如果不存在则创建目录\n        print (&apos;%s创建成功&apos;%path)\n        # 创建目录操作函数\n        os.makedirs(path)\n        return True\n    else:\n        # 如果目录存在则不创建，并提示目录已存在\n        print (&apos;%s目录已存在&apos;%path)\n        return False\n\n\ndef download_pic(folderpath=&apos;&apos;,list=[]):\n    i = 1\n    for url in list:\n        try:\n        #     wget.download(url, out=&apos;%s\\\\%d.jpg&apos; %(folderpath,i))\n            cmd = &apos;C:\\\\Python36\\\\Scripts\\\\wget -O &quot;%s\\\\%d.jpg&quot; &quot;%s&quot;&apos; %(folderpath,i,url)\n            print(cmd)\n            subprocess.Popen(cmd)\n            i += 1\n        except:\n            print(&apos;skip&apos;)\n    print(&apos;下载成功...&apos;)\n\ndef craw_url(scroll=&apos;2&apos;,web_url=&apos;&apos;):\n    driver = webdriver.Chrome(&apos;C:\\\\Python36\\\\Lib\\site-packages\\\\chromedriver_binary\\\\chromedriver.exe&apos;)\n    driver.get(web_url)\n    driver.maximize_window()\n    time.sleep(3)\n    urls = []\n    try:\n        for i in range(1,scroll):\n            pics = driver.find_elements_by_class_name(name=&apos;_2zEKz&apos;)\n            for pic in pics:\n                src = &apos;%s\\n&apos;%pic.get_attribute(name=&apos;src&apos;)\n                src = src.replace(&apos;1000&apos;,&apos;2592&apos;)\n                # print(src)\n                urls.append(src)\n            js=&quot;window.scrollTo(0,document.body.scrollHeight)&quot;\n            driver.execute_script(js)\n            time.sleep(3)\n            print(&quot;循环次数：%d&quot;%i)\n        driver.close()\n    except:\n        driver.close()\n    urls = list(set(urls))\n    print(&apos;获取图片链接成功...&apos;)\n    return urls\n\nif __name__ == &quot;__main__&quot;:\n    download_path = &apos;G:\\\\02_photo\\\\unsplash&apos;\n    url_list=craw_url(scroll=1000,web_url=&apos;https://unsplash.com/&apos;)\n    mkdir(download_path)\n    download_pic(folderpath=download_path,list=url_list)\n\n    #    for url in url_list:\n    #            print(url)\n    #    try:\n    #        f=open(&apos;%s\\\\0_urls.txt&apos;%download_path,&apos;w&apos;)\n    #       f.writelines(url_list)\n    #       f.close()\n    #    except:\n                pass\n</code></pre><h4 id=\"下载成功\"><a href=\"#下载成功\" class=\"headerlink\" title=\"下载成功\"></a>下载成功</h4><p><img src=\"http://upload-images.jianshu.io/upload_images/1894726-f5a17a997569edfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>"},{"title":"ADB常用命令","date":"2018-07-01T12:32:18.000Z","_content":"\n|    adb    | 命令                                       | 含义                                 |\n| :-------: | ------------------------------------------ | ------------------------------------ |\n| adb shell | adb shell \"dumpsys window \\| grep mCurrentFocus\"                  | 获取应用包名（打开应用）             |\n|           | adb shell pm path 包名                     | 获取应用安装路径                     |\n|           | adb shell \"pm dump 包名                    | 获取应用版本号                       |\n|           | adb shell \"cat /system/build.prop          | 获取手机系统信息（ CPU，厂商名称等） |\n|           | adb shell getprop ro.build.version.release | 获取手机系统版本                     |\n|           | adb shell getprop ro.build.version.sdk     | 获取手机系统api版本                  |\n|           | adb -d shell getprop ro.product.model      | 获取手机设备型号                     |\n|           | adb -d shell getprop ro.product.brand      | 获取手机厂商名称                     |\n|           | adb shell getprop ro.serialno              | 获取手机的序列号                     |\n|           | adb shell dumpsys iphonesubinfo            | 获取手机的IMEI                       |\n|           | adb shell cat /sys/class/net/wlan/address  | 获取手机mac地址                      |\n|           | adb shell cat /proc/meminfo                | 获取手机内存信息                     |\n|           | adb shell df                               | 获取手机存储信息                     |\n|           | adb shell df /mnt/shell/emulated           | 获取手机内部存储信息：               |\n|           | adb shell df /storage/sdcard               | 获取sdcard存储信息：                 |\n|           | adb shell \"dumpsys window                  | 获取手机分辨率                       |\n|           | adb shell wm density                       | 获取手机物理密度                     |\n|           | adb shell \"dumpsys window                  | 获取当前界面对应的活动和包名         |\n\n  \n\n待刷新","source":"_posts/09_ADB常用命令.md","raw":"---\ntitle: ADB常用命令\ndate: 2018-07-01 20:32:18\ntags: ADB\n---\n\n|    adb    | 命令                                       | 含义                                 |\n| :-------: | ------------------------------------------ | ------------------------------------ |\n| adb shell | adb shell \"dumpsys window \\| grep mCurrentFocus\"                  | 获取应用包名（打开应用）             |\n|           | adb shell pm path 包名                     | 获取应用安装路径                     |\n|           | adb shell \"pm dump 包名                    | 获取应用版本号                       |\n|           | adb shell \"cat /system/build.prop          | 获取手机系统信息（ CPU，厂商名称等） |\n|           | adb shell getprop ro.build.version.release | 获取手机系统版本                     |\n|           | adb shell getprop ro.build.version.sdk     | 获取手机系统api版本                  |\n|           | adb -d shell getprop ro.product.model      | 获取手机设备型号                     |\n|           | adb -d shell getprop ro.product.brand      | 获取手机厂商名称                     |\n|           | adb shell getprop ro.serialno              | 获取手机的序列号                     |\n|           | adb shell dumpsys iphonesubinfo            | 获取手机的IMEI                       |\n|           | adb shell cat /sys/class/net/wlan/address  | 获取手机mac地址                      |\n|           | adb shell cat /proc/meminfo                | 获取手机内存信息                     |\n|           | adb shell df                               | 获取手机存储信息                     |\n|           | adb shell df /mnt/shell/emulated           | 获取手机内部存储信息：               |\n|           | adb shell df /storage/sdcard               | 获取sdcard存储信息：                 |\n|           | adb shell \"dumpsys window                  | 获取手机分辨率                       |\n|           | adb shell wm density                       | 获取手机物理密度                     |\n|           | adb shell \"dumpsys window                  | 获取当前界面对应的活动和包名         |\n\n  \n\n待刷新","slug":"09_ADB常用命令","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxs000i7vjk5d1ipp9f","content":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">adb</th>\n<th>命令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">adb shell</td>\n<td>adb shell “dumpsys window \\</td>\n<td>grep mCurrentFocus”</td>\n<td>获取应用包名（打开应用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell pm path 包名</td>\n<td>获取应用安装路径</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “pm dump 包名</td>\n<td>获取应用版本号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “cat /system/build.prop</td>\n<td>获取手机系统信息（ CPU，厂商名称等）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.release</td>\n<td>获取手机系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.sdk</td>\n<td>获取手机系统api版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.model</td>\n<td>获取手机设备型号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.brand</td>\n<td>获取手机厂商名称</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.serialno</td>\n<td>获取手机的序列号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell dumpsys iphonesubinfo</td>\n<td>获取手机的IMEI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /sys/class/net/wlan/address</td>\n<td>获取手机mac地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /proc/meminfo</td>\n<td>获取手机内存信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df</td>\n<td>获取手机存储信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /mnt/shell/emulated</td>\n<td>获取手机内部存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /storage/sdcard</td>\n<td>获取sdcard存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取手机分辨率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell wm density</td>\n<td>获取手机物理密度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取当前界面对应的活动和包名</td>\n</tr>\n</tbody>\n</table>\n<p>待刷新</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">adb</th>\n<th>命令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">adb shell</td>\n<td>adb shell “dumpsys window \\</td>\n<td>grep mCurrentFocus”</td>\n<td>获取应用包名（打开应用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell pm path 包名</td>\n<td>获取应用安装路径</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “pm dump 包名</td>\n<td>获取应用版本号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “cat /system/build.prop</td>\n<td>获取手机系统信息（ CPU，厂商名称等）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.release</td>\n<td>获取手机系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.build.version.sdk</td>\n<td>获取手机系统api版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.model</td>\n<td>获取手机设备型号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb -d shell getprop ro.product.brand</td>\n<td>获取手机厂商名称</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell getprop ro.serialno</td>\n<td>获取手机的序列号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell dumpsys iphonesubinfo</td>\n<td>获取手机的IMEI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /sys/class/net/wlan/address</td>\n<td>获取手机mac地址</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell cat /proc/meminfo</td>\n<td>获取手机内存信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df</td>\n<td>获取手机存储信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /mnt/shell/emulated</td>\n<td>获取手机内部存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell df /storage/sdcard</td>\n<td>获取sdcard存储信息：</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取手机分辨率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell wm density</td>\n<td>获取手机物理密度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td>adb shell “dumpsys window</td>\n<td>获取当前界面对应的活动和包名</td>\n</tr>\n</tbody>\n</table>\n<p>待刷新</p>\n"},{"title":"安卓客户端取日志脚本","date":"2019-04-01T12:32:18.000Z","_content":"\n安卓客户端取日志脚本：8ii8i i\n<!--more-->\n\n```\n@echo off\n\n::初始化脚本\n:start\ncls\necho ****************************************\necho [请输入：0]        退出\necho [请输入：1]        获取applog\necho [请输入：2]        清理applog\necho [直接输入回车]   执行默认操作\necho ****************************************\n\nset FOLDER=%~dp0\nset TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\nset /p opt=请输入:\n\nif \"%opt%\"==\"0\" goto exit\nif \"%opt%\"==\"1\" goto get_log\nif \"%opt%\"==\"\" goto default\n\n:default\necho 执行默认操作\necho 我啥也没干\npause\ngoto start\n\n:get_log\necho opt=%opt%\necho 获取applog\necho 目标路径为 %FOLDER%%TIMESTAMP%\n::adb pull applog路径 目标路径\npause\ngoto start\n\n:clean_log\necho opt=%opt%\necho 清理applog\nadb remount\n::adb shell rm -r xxx\npause\ngoto start\n```","source":"_posts/10_安卓客户端取日志脚本.md","raw":"---\ntitle: 安卓客户端取日志脚本\ndate: 2019-04-01 20:32:18\ntags: bat\n---\n\n安卓客户端取日志脚本：8ii8i i\n<!--more-->\n\n```\n@echo off\n\n::初始化脚本\n:start\ncls\necho ****************************************\necho [请输入：0]        退出\necho [请输入：1]        获取applog\necho [请输入：2]        清理applog\necho [直接输入回车]   执行默认操作\necho ****************************************\n\nset FOLDER=%~dp0\nset TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\nset /p opt=请输入:\n\nif \"%opt%\"==\"0\" goto exit\nif \"%opt%\"==\"1\" goto get_log\nif \"%opt%\"==\"\" goto default\n\n:default\necho 执行默认操作\necho 我啥也没干\npause\ngoto start\n\n:get_log\necho opt=%opt%\necho 获取applog\necho 目标路径为 %FOLDER%%TIMESTAMP%\n::adb pull applog路径 目标路径\npause\ngoto start\n\n:clean_log\necho opt=%opt%\necho 清理applog\nadb remount\n::adb shell rm -r xxx\npause\ngoto start\n```","slug":"10_安卓客户端取日志脚本","published":1,"updated":"2024-04-14T04:15:16.109Z","_id":"clqkrbsxs000k7vjkzzsnz7pl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>安卓客户端取日志脚本：8ii8i i<br><a id=\"more\"></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo off</div><div class=\"line\"></div><div class=\"line\">::初始化脚本</div><div class=\"line\">:start</div><div class=\"line\">cls</div><div class=\"line\">echo ****************************************</div><div class=\"line\">echo [请输入：0]        退出</div><div class=\"line\">echo [请输入：1]        获取applog</div><div class=\"line\">echo [请输入：2]        清理applog</div><div class=\"line\">echo [直接输入回车]   执行默认操作</div><div class=\"line\">echo ****************************************</div><div class=\"line\"></div><div class=\"line\">set FOLDER=%~dp0</div><div class=\"line\">set TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</div><div class=\"line\">set /p opt=请输入:</div><div class=\"line\"></div><div class=\"line\">if &quot;%opt%&quot;==&quot;0&quot; goto exit</div><div class=\"line\">if &quot;%opt%&quot;==&quot;1&quot; goto get_log</div><div class=\"line\">if &quot;%opt%&quot;==&quot;&quot; goto default</div><div class=\"line\"></div><div class=\"line\">:default</div><div class=\"line\">echo 执行默认操作</div><div class=\"line\">echo 我啥也没干</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:get_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 获取applog</div><div class=\"line\">echo 目标路径为 %FOLDER%%TIMESTAMP%</div><div class=\"line\">::adb pull applog路径 目标路径</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:clean_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 清理applog</div><div class=\"line\">adb remount</div><div class=\"line\">::adb shell rm -r xxx</div><div class=\"line\">pause</div><div class=\"line\">goto start</div></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>安卓客户端取日志脚本：8ii8i i<br>","more":"</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo off</div><div class=\"line\"></div><div class=\"line\">::初始化脚本</div><div class=\"line\">:start</div><div class=\"line\">cls</div><div class=\"line\">echo ****************************************</div><div class=\"line\">echo [请输入：0]        退出</div><div class=\"line\">echo [请输入：1]        获取applog</div><div class=\"line\">echo [请输入：2]        清理applog</div><div class=\"line\">echo [直接输入回车]   执行默认操作</div><div class=\"line\">echo ****************************************</div><div class=\"line\"></div><div class=\"line\">set FOLDER=%~dp0</div><div class=\"line\">set TIMESTAMP=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</div><div class=\"line\">set /p opt=请输入:</div><div class=\"line\"></div><div class=\"line\">if &quot;%opt%&quot;==&quot;0&quot; goto exit</div><div class=\"line\">if &quot;%opt%&quot;==&quot;1&quot; goto get_log</div><div class=\"line\">if &quot;%opt%&quot;==&quot;&quot; goto default</div><div class=\"line\"></div><div class=\"line\">:default</div><div class=\"line\">echo 执行默认操作</div><div class=\"line\">echo 我啥也没干</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:get_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 获取applog</div><div class=\"line\">echo 目标路径为 %FOLDER%%TIMESTAMP%</div><div class=\"line\">::adb pull applog路径 目标路径</div><div class=\"line\">pause</div><div class=\"line\">goto start</div><div class=\"line\"></div><div class=\"line\">:clean_log</div><div class=\"line\">echo opt=%opt%</div><div class=\"line\">echo 清理applog</div><div class=\"line\">adb remount</div><div class=\"line\">::adb shell rm -r xxx</div><div class=\"line\">pause</div><div class=\"line\">goto start</div></pre></td></tr></table></figure>"},{"title":"基于android实现一个简单的备忘录app","date":"2017-05-20T12:13:59.000Z","_content":"\n\n### 增删查改的实现\n\n#### 创建主活动及布局文件\n\n+ 主活动是整个app的入口，还原一下用户的使用场景：\n\n<!--more-->\n\n\t点击新增按钮：进入AddContent活动\n\t点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n\n+ 布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。\n\n+ 在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。\n\n\t- 对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:\n\n\t\t\tnewbtn.setOnClickListener(new View.OnClickListener() {\n\t\t\t        @Override\n\t\t\t        public void onClick(View v) {\n\t\t\t           Intent i = new Intent(MainActivity.this, AddContent.class);\n\t\t\t           startActivity(i);\n\t\t\t        }\n\t\t\t);\n\n\t- 对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：\n\n\t\t\tlv.setOnItemClickListener(this);\n\t\t\t@Override\n\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position,\n\t\t\t\t\t\tlong id) {\n\t\t\t    \tcursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n\t\t\t     \t\t\tnull, null, null);\n\t\t\t\t\tcursor.moveToPosition(position);\n\t\t\t    \tIntent j = new Intent(MainActivity.this,ShowContent.class);\n\t\t\t    \tj.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n\t\t\t    \tj.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n\t\t\t    \tj.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n\t\t\t    \tstartActivity(j);\t\t\n\t\t\t\t}\n\n#### 创建数据库\n\n+ 重写了两个方法，分别是创建数据库和更新数据库。\n  - 其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。\n\n\t\t@Override\n\t\tpublic void onCreate(SQLiteDatabase db) {\n\t\t\t\tdb.execSQL(\"CREATE TABLE \" + TABLE_NAME + \"(\" \n\t\t\t\t\t    + ID +\" INTEGER PRIMARY KEY AUTOINCREMENT,\" \n\t\t\t\t\t\t+ CONTENT + \" TEXT NOT NULL,\"\n\t\t\t\t\t\t+ TIME + \" TEXT NOT NULL)\");//最后的括号不能忘\n\t\t\t}\n\n\t\t@Override\n\t\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\t\n\t\t\t}\n\n#### 创建添加备忘的活动及布局文件 \n+ 用户的使用场景：\n\n\t进入AddContent活动输入文字\n\t点击取消按钮：返回MainActivity界面\n\t点击保存按钮：输入的文字和当前日期时间被存入数据库\n\n+ 布局包括一个输入文字的EditText和两个Button分别用于保存和取消。\n+ 在活动中为两个按钮设置点击监听事件重写点击方法：\n  - 取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加`android:launchMode=\"singleTask\"`的声明。\n  - 保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。\n+ ContentValue和数据库的写入方法如下：\n\n\t\tpublic void addDB() {\n\t\t\t\tContentValues cv = new ContentValues();\n\t\t\t\tcv.put(NotesDB.CONTENT,edtext.getText().toString());\n\t\t\t\tcv.put(NotesDB.TIME, getTime());\n\t\t\t\tdbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n\t\t\t}\n\t\t\n\t\tprivate String getTime() {\n\t\t\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\t\t\t\tDate date = new Date();\n\t\t\t\tString str = format.format(date);\n\t\t\t\treturn str;\n\t\t\t}\n\n#### 创建查看备忘的活动及布局文件\n\n+ 用户的使用场景：\n\n```\n进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步\n```\n\n+ 布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。\n+  活动中两个按钮的点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 删除按钮的`onClick`方法中的删除数据库记录的代码如下：\n\n```\npublic void deleteData() {\n\tdbWriter.delete(NotesDB.TABLE_NAME,\n                       \"_id=\"+getIntent().getIntExtra(NotesDB.ID, 0), null);\n}\n```\n+ 活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。\n\n```\ns_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\ns_edtxt. setCursorVisible ( false ) ; \ns_edtxt.setFocusable(false); \ns_edtxt.clearFocus();\n```\n\n#### 创建修改备忘的活动及布局文件\n\n- 用户的使用场景：\n\n```\n进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录\n```\n\n+ 布局包括EditText和两个Button\n+活动中为两个按钮设置点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 保存按钮同新增按钮中的保存按钮\n+ 活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：\n\n```\nu_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\nu_edtxt. setCursorVisible (true) ;\nu_edtxt.setFocusable(true);\nu_edtxt.setSelection(u_edtxt.getText().toString().length());\n```\n\n#### 在Manifest文件中注册活动：\n\n```\n<application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_note_white\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme.NoActionBar\">\n        <activity\n            android:name=\".activity.MainActivity\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".activity.AddContent\"\n            android:label=\"新增日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n        <activity\n            android:name=\".activity.ShowContent\"\n            android:label=\"查看日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\n        <activity\n            android:name=\".activity.UpdateContent\"\n            android:label=\"修改日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n      \n    </application>\n```\n\n+ 至此，备忘录的增删改查功能已经添加完毕。\n\n### 云端同步功能实现\n\n#### 同步功能概述\n\n备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：\n\n1. 数据存储方案\n2. 用户认证\n3. 同步策略\n4. 冲突处理\n\n#### 推荐的技术方案\n\n##### 1. 后端存储选择\n- LeanCloud (推荐)\n  - 提供开箱即用的数据存储\n  - 内置用户系统\n  - 有完整的Android SDK\n  - 免费额度足够个人开发者使用\n- Firebase (替代方案)\n  - Google官方支持\n  - 实时数据同步\n  - 较完善的离线支持\n\n##### 2. 数据表设计\n```sql\nNote {\n  objectId: String    // 唯一标识\n  content: String     // 备忘内容\n  createTime: Date    // 创建时间\n  updateTime: Date    // 更新时间\n  userId: String      // 用户ID\n  isDeleted: Boolean  // 软删除标记\n  version: Number     // 版本号(用于冲突处理)\n}\n```\n\n#### 实现步骤 (TodoList)\n\n##### 1. 基础配置\n- [ ] 注册LeanCloud账号并创建应用\n- [ ] 添加LeanCloud SDK依赖\n- [ ] 在Application中初始化SDK\n- [ ] 配置AndroidManifest添加所需权限\n\n##### 2. 用户系统\n- [ ] 实现注册界面\n- [ ] 实现登录界面\n- [ ] 实现用户信息存储\n- [ ] 添加登出功能\n\n##### 3. 数据同步\n- [ ] 修改本地数据库结构，增加同步相关字段\n- [ ] 实现数据上传功能\n- [ ] 实现数据下载功能\n- [ ] 添加定时同步服务\n\n##### 4. 冲突处理\n- [ ] 实现版本控制\n- [ ] 添加冲突检测逻辑\n- [ ] 实现冲突解决策略\n\n##### 5. 离线支持\n- [ ] 实现本地缓存\n- [ ] 添加离线操作队列\n- [ ] 网络恢复后自动同步\n\n#### 代码示例\n\n##### LeanCloud初始化\n```java\npublic class MyApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        // 初始化参数依次为 this, AppId, AppKey\n        AVOSCloud.initialize(this,\"your_app_id\",\"your_app_key\");\n    }\n}\n```\n\n##### 数据同步示例\n```java\npublic class SyncService {\n    public void syncNote(Note note) {\n        AVObject avNote = new AVObject(\"Note\");\n        avNote.put(\"content\", note.getContent());\n        avNote.put(\"createTime\", note.getCreateTime());\n        avNote.put(\"updateTime\", new Date());\n        avNote.put(\"userId\", AVUser.getCurrentUser().getObjectId());\n        avNote.put(\"version\", note.getVersion());\n        \n        avNote.saveInBackground().subscribe(new Observer<AVObject>() {\n            @Override\n            public void onSuccess(AVObject avObject) {\n                // 同步成功处理\n            }\n            \n            @Override\n            public void onError(Throwable throwable) {\n                // 错误处理\n            }\n        });\n    }\n}\n```\n\n#### 注意事项\n\n1. 数据安全\n- 设置适当的ACL权限\n- 敏感数据加密存储\n- 使用HTTPS传输\n\n2. 性能优化\n- 批量同步而不是单条同步\n- 合理设置同步频率\n- 压缩数据包大小\n\n3. 用户体验\n- 同步状态提示\n- 网络异常处理\n- 后台静默同步\n\n4. 耗电优化\n- 使用WorkManager调度同步任务\n- 根据网络状态调整同步策略\n- 避免频繁同步\n\n#### 后续优化方向\n\n1. 支持多设备同步\n2. 添加同步历史记录\n3. 实现数据版本回滚\n4. 添加同步设置选项\n5. 支持选择性同步\n\n参考文档：\n- [LeanCloud 文档中心](https://leancloud.cn/docs/)\n- [Android WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager)\n- [Android 数据同步最佳实践](https://developer.android.com/training/sync-adapters)","source":"_posts/05_基于android实现一个简单的备忘录app.md","raw":"---\ntitle: 基于android实现一个简单的备忘录app\ndate: 2017-05-20 20:13:59\ntags: android\n---\n\n\n### 增删查改的实现\n\n#### 创建主活动及布局文件\n\n+ 主活动是整个app的入口，还原一下用户的使用场景：\n\n<!--more-->\n\n\t点击新增按钮：进入AddContent活动\n\t点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n\n+ 布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。\n\n+ 在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。\n\n\t- 对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:\n\n\t\t\tnewbtn.setOnClickListener(new View.OnClickListener() {\n\t\t\t        @Override\n\t\t\t        public void onClick(View v) {\n\t\t\t           Intent i = new Intent(MainActivity.this, AddContent.class);\n\t\t\t           startActivity(i);\n\t\t\t        }\n\t\t\t);\n\n\t- 对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：\n\n\t\t\tlv.setOnItemClickListener(this);\n\t\t\t@Override\n\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position,\n\t\t\t\t\t\tlong id) {\n\t\t\t    \tcursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n\t\t\t     \t\t\tnull, null, null);\n\t\t\t\t\tcursor.moveToPosition(position);\n\t\t\t    \tIntent j = new Intent(MainActivity.this,ShowContent.class);\n\t\t\t    \tj.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n\t\t\t    \tj.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n\t\t\t    \tj.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n\t\t\t    \tstartActivity(j);\t\t\n\t\t\t\t}\n\n#### 创建数据库\n\n+ 重写了两个方法，分别是创建数据库和更新数据库。\n  - 其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。\n\n\t\t@Override\n\t\tpublic void onCreate(SQLiteDatabase db) {\n\t\t\t\tdb.execSQL(\"CREATE TABLE \" + TABLE_NAME + \"(\" \n\t\t\t\t\t    + ID +\" INTEGER PRIMARY KEY AUTOINCREMENT,\" \n\t\t\t\t\t\t+ CONTENT + \" TEXT NOT NULL,\"\n\t\t\t\t\t\t+ TIME + \" TEXT NOT NULL)\");//最后的括号不能忘\n\t\t\t}\n\n\t\t@Override\n\t\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\t\n\t\t\t}\n\n#### 创建添加备忘的活动及布局文件 \n+ 用户的使用场景：\n\n\t进入AddContent活动输入文字\n\t点击取消按钮：返回MainActivity界面\n\t点击保存按钮：输入的文字和当前日期时间被存入数据库\n\n+ 布局包括一个输入文字的EditText和两个Button分别用于保存和取消。\n+ 在活动中为两个按钮设置点击监听事件重写点击方法：\n  - 取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加`android:launchMode=\"singleTask\"`的声明。\n  - 保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。\n+ ContentValue和数据库的写入方法如下：\n\n\t\tpublic void addDB() {\n\t\t\t\tContentValues cv = new ContentValues();\n\t\t\t\tcv.put(NotesDB.CONTENT,edtext.getText().toString());\n\t\t\t\tcv.put(NotesDB.TIME, getTime());\n\t\t\t\tdbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n\t\t\t}\n\t\t\n\t\tprivate String getTime() {\n\t\t\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\t\t\t\tDate date = new Date();\n\t\t\t\tString str = format.format(date);\n\t\t\t\treturn str;\n\t\t\t}\n\n#### 创建查看备忘的活动及布局文件\n\n+ 用户的使用场景：\n\n```\n进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步\n```\n\n+ 布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。\n+  活动中两个按钮的点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 删除按钮的`onClick`方法中的删除数据库记录的代码如下：\n\n```\npublic void deleteData() {\n\tdbWriter.delete(NotesDB.TABLE_NAME,\n                       \"_id=\"+getIntent().getIntExtra(NotesDB.ID, 0), null);\n}\n```\n+ 活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。\n\n```\ns_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\ns_edtxt. setCursorVisible ( false ) ; \ns_edtxt.setFocusable(false); \ns_edtxt.clearFocus();\n```\n\n#### 创建修改备忘的活动及布局文件\n\n- 用户的使用场景：\n\n```\n进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）\n点击返回按钮：返回MainActivity界面；\n点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录\n```\n\n+ 布局包括EditText和两个Button\n+活动中为两个按钮设置点击监听事件：\n  - 返回按钮同新增活动中的取消按钮\n  - 保存按钮同新增按钮中的保存按钮\n+ 活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：\n\n```\nu_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));\nu_edtxt. setCursorVisible (true) ;\nu_edtxt.setFocusable(true);\nu_edtxt.setSelection(u_edtxt.getText().toString().length());\n```\n\n#### 在Manifest文件中注册活动：\n\n```\n<application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_note_white\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme.NoActionBar\">\n        <activity\n            android:name=\".activity.MainActivity\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".activity.AddContent\"\n            android:label=\"新增日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n        <activity\n            android:name=\".activity.ShowContent\"\n            android:label=\"查看日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\n        <activity\n            android:name=\".activity.UpdateContent\"\n            android:label=\"修改日程\"\n            android:screenOrientation=\"portrait\"\n            android:theme=\"@style/AppTheme.NoActionBar\"\n            android:windowSoftInputMode=\"adjustResize\"></activity>\n      \n    </application>\n```\n\n+ 至此，备忘录的增删改查功能已经添加完毕。\n\n### 云端同步功能实现\n\n#### 同步功能概述\n\n备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：\n\n1. 数据存储方案\n2. 用户认证\n3. 同步策略\n4. 冲突处理\n\n#### 推荐的技术方案\n\n##### 1. 后端存储选择\n- LeanCloud (推荐)\n  - 提供开箱即用的数据存储\n  - 内置用户系统\n  - 有完整的Android SDK\n  - 免费额度足够个人开发者使用\n- Firebase (替代方案)\n  - Google官方支持\n  - 实时数据同步\n  - 较完善的离线支持\n\n##### 2. 数据表设计\n```sql\nNote {\n  objectId: String    // 唯一标识\n  content: String     // 备忘内容\n  createTime: Date    // 创建时间\n  updateTime: Date    // 更新时间\n  userId: String      // 用户ID\n  isDeleted: Boolean  // 软删除标记\n  version: Number     // 版本号(用于冲突处理)\n}\n```\n\n#### 实现步骤 (TodoList)\n\n##### 1. 基础配置\n- [ ] 注册LeanCloud账号并创建应用\n- [ ] 添加LeanCloud SDK依赖\n- [ ] 在Application中初始化SDK\n- [ ] 配置AndroidManifest添加所需权限\n\n##### 2. 用户系统\n- [ ] 实现注册界面\n- [ ] 实现登录界面\n- [ ] 实现用户信息存储\n- [ ] 添加登出功能\n\n##### 3. 数据同步\n- [ ] 修改本地数据库结构，增加同步相关字段\n- [ ] 实现数据上传功能\n- [ ] 实现数据下载功能\n- [ ] 添加定时同步服务\n\n##### 4. 冲突处理\n- [ ] 实现版本控制\n- [ ] 添加冲突检测逻辑\n- [ ] 实现冲突解决策略\n\n##### 5. 离线支持\n- [ ] 实现本地缓存\n- [ ] 添加离线操作队列\n- [ ] 网络恢复后自动同步\n\n#### 代码示例\n\n##### LeanCloud初始化\n```java\npublic class MyApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        // 初始化参数依次为 this, AppId, AppKey\n        AVOSCloud.initialize(this,\"your_app_id\",\"your_app_key\");\n    }\n}\n```\n\n##### 数据同步示例\n```java\npublic class SyncService {\n    public void syncNote(Note note) {\n        AVObject avNote = new AVObject(\"Note\");\n        avNote.put(\"content\", note.getContent());\n        avNote.put(\"createTime\", note.getCreateTime());\n        avNote.put(\"updateTime\", new Date());\n        avNote.put(\"userId\", AVUser.getCurrentUser().getObjectId());\n        avNote.put(\"version\", note.getVersion());\n        \n        avNote.saveInBackground().subscribe(new Observer<AVObject>() {\n            @Override\n            public void onSuccess(AVObject avObject) {\n                // 同步成功处理\n            }\n            \n            @Override\n            public void onError(Throwable throwable) {\n                // 错误处理\n            }\n        });\n    }\n}\n```\n\n#### 注意事项\n\n1. 数据安全\n- 设置适当的ACL权限\n- 敏感数据加密存储\n- 使用HTTPS传输\n\n2. 性能优化\n- 批量同步而不是单条同步\n- 合理设置同步频率\n- 压缩数据包大小\n\n3. 用户体验\n- 同步状态提示\n- 网络异常处理\n- 后台静默同步\n\n4. 耗电优化\n- 使用WorkManager调度同步任务\n- 根据网络状态调整同步策略\n- 避免频繁同步\n\n#### 后续优化方向\n\n1. 支持多设备同步\n2. 添加同步历史记录\n3. 实现数据版本回滚\n4. 添加同步设置选项\n5. 支持选择性同步\n\n参考文档：\n- [LeanCloud 文档中心](https://leancloud.cn/docs/)\n- [Android WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager)\n- [Android 数据同步最佳实践](https://developer.android.com/training/sync-adapters)","slug":"05_基于android实现一个简单的备忘录app","published":1,"updated":"2025-01-03T15:13:48.708Z","_id":"clqkrbsxt000n7vjkneuufg09","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"增删查改的实现\"><a href=\"#增删查改的实现\" class=\"headerlink\" title=\"增删查改的实现\"></a>增删查改的实现</h3><h4 id=\"创建主活动及布局文件\"><a href=\"#创建主活动及布局文件\" class=\"headerlink\" title=\"创建主活动及布局文件\"></a>创建主活动及布局文件</h4><ul>\n<li>主活动是整个app的入口，还原一下用户的使用场景：</li>\n</ul>\n<a id=\"more\"></a>\n<pre><code>点击新增按钮：进入AddContent活动\n点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n</code></pre><ul>\n<li><p>布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。</p>\n</li>\n<li><p>在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。</p>\n<ul>\n<li><p>对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:</p>\n<pre><code>newbtn.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n           Intent i = new Intent(MainActivity.this, AddContent.class);\n           startActivity(i);\n        }\n);\n</code></pre></li>\n<li><p>对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：</p>\n<pre><code>lv.setOnItemClickListener(this);\n@Override\n    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,\n            long id) {\n        cursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n                 null, null, null);\n        cursor.moveToPosition(position);\n        Intent j = new Intent(MainActivity.this,ShowContent.class);\n        j.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n        j.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n        j.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n        startActivity(j);        \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><ul>\n<li><p>重写了两个方法，分别是创建数据库和更新数据库。</p>\n<ul>\n<li><p>其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。</p>\n<pre><code>@Override\npublic void onCreate(SQLiteDatabase db) {\n        db.execSQL(&quot;CREATE TABLE &quot; + TABLE_NAME + &quot;(&quot; \n                + ID +&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot; \n                + CONTENT + &quot; TEXT NOT NULL,&quot;\n                + TIME + &quot; TEXT NOT NULL)&quot;);//最后的括号不能忘\n    }\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {    \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建添加备忘的活动及布局文件\"><a href=\"#创建添加备忘的活动及布局文件\" class=\"headerlink\" title=\"创建添加备忘的活动及布局文件\"></a>创建添加备忘的活动及布局文件</h4><ul>\n<li><p>用户的使用场景：</p>\n<p>  进入AddContent活动输入文字<br>  点击取消按钮：返回MainActivity界面<br>  点击保存按钮：输入的文字和当前日期时间被存入数据库</p>\n</li>\n<li><p>布局包括一个输入文字的EditText和两个Button分别用于保存和取消。</p>\n</li>\n<li>在活动中为两个按钮设置点击监听事件重写点击方法：<ul>\n<li>取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加<code>android:launchMode=&quot;singleTask&quot;</code>的声明。</li>\n<li>保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。</li>\n</ul>\n</li>\n<li><p>ContentValue和数据库的写入方法如下：</p>\n<pre><code>public void addDB() {\n        ContentValues cv = new ContentValues();\n        cv.put(NotesDB.CONTENT,edtext.getText().toString());\n        cv.put(NotesDB.TIME, getTime());\n        dbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n    }\n\nprivate String getTime() {\n        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\n        Date date = new Date();\n        String str = format.format(date);\n        return str;\n    }\n</code></pre></li>\n</ul>\n<h4 id=\"创建查看备忘的活动及布局文件\"><a href=\"#创建查看备忘的活动及布局文件\" class=\"headerlink\" title=\"创建查看备忘的活动及布局文件\"></a>创建查看备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。</li>\n<li>活动中两个按钮的点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>删除按钮的<code>onClick</code>方法中的删除数据库记录的代码如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void deleteData() &#123;</div><div class=\"line\">\tdbWriter.delete(NotesDB.TABLE_NAME,</div><div class=\"line\">                       &quot;_id=&quot;+getIntent().getIntExtra(NotesDB.ID, 0), null);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">s_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">s_edtxt. setCursorVisible ( false ) ; </div><div class=\"line\">s_edtxt.setFocusable(false); </div><div class=\"line\">s_edtxt.clearFocus();</div></pre></td></tr></table></figure>\n<h4 id=\"创建修改备忘的活动及布局文件\"><a href=\"#创建修改备忘的活动及布局文件\" class=\"headerlink\" title=\"创建修改备忘的活动及布局文件\"></a>创建修改备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括EditText和两个Button<br>+活动中为两个按钮设置点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>保存按钮同新增按钮中的保存按钮</li>\n</ul>\n</li>\n<li>活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">u_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">u_edtxt. setCursorVisible (true) ;</div><div class=\"line\">u_edtxt.setFocusable(true);</div><div class=\"line\">u_edtxt.setSelection(u_edtxt.getText().toString().length());</div></pre></td></tr></table></figure>\n<h4 id=\"在Manifest文件中注册活动：\"><a href=\"#在Manifest文件中注册活动：\" class=\"headerlink\" title=\"在Manifest文件中注册活动：\"></a>在Manifest文件中注册活动：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;application</div><div class=\"line\">        android:allowBackup=&quot;true&quot;</div><div class=\"line\">        android:icon=&quot;@mipmap/ic_note_white&quot;</div><div class=\"line\">        android:label=&quot;@string/app_name&quot;</div><div class=\"line\">        android:supportsRtl=&quot;true&quot;</div><div class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.MainActivity&quot;</div><div class=\"line\">            android:label=&quot;@string/app_name&quot;</div><div class=\"line\">            android:launchMode=&quot;singleTask&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">            &lt;intent-filter&gt;</div><div class=\"line\">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class=\"line\">            &lt;/intent-filter&gt;</div><div class=\"line\">        &lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.AddContent&quot;</div><div class=\"line\">            android:label=&quot;新增日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.ShowContent&quot;</div><div class=\"line\">            android:label=&quot;查看日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.UpdateContent&quot;</div><div class=\"line\">            android:label=&quot;修改日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">      </div><div class=\"line\">    &lt;/application&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>至此，备忘录的增删改查功能已经添加完毕。</li>\n</ul>\n<h3 id=\"云端同步功能实现\"><a href=\"#云端同步功能实现\" class=\"headerlink\" title=\"云端同步功能实现\"></a>云端同步功能实现</h3><h4 id=\"同步功能概述\"><a href=\"#同步功能概述\" class=\"headerlink\" title=\"同步功能概述\"></a>同步功能概述</h4><p>备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：</p>\n<ol>\n<li>数据存储方案</li>\n<li>用户认证</li>\n<li>同步策略</li>\n<li>冲突处理</li>\n</ol>\n<h4 id=\"推荐的技术方案\"><a href=\"#推荐的技术方案\" class=\"headerlink\" title=\"推荐的技术方案\"></a>推荐的技术方案</h4><h5 id=\"1-后端存储选择\"><a href=\"#1-后端存储选择\" class=\"headerlink\" title=\"1. 后端存储选择\"></a>1. 后端存储选择</h5><ul>\n<li>LeanCloud (推荐)<ul>\n<li>提供开箱即用的数据存储</li>\n<li>内置用户系统</li>\n<li>有完整的Android SDK</li>\n<li>免费额度足够个人开发者使用</li>\n</ul>\n</li>\n<li>Firebase (替代方案)<ul>\n<li>Google官方支持</li>\n<li>实时数据同步</li>\n<li>较完善的离线支持</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-数据表设计\"><a href=\"#2-数据表设计\" class=\"headerlink\" title=\"2. 数据表设计\"></a>2. 数据表设计</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Note &#123;</div><div class=\"line\">  objectId: String    // 唯一标识</div><div class=\"line\">  content: String     // 备忘内容</div><div class=\"line\">  createTime: Date    // 创建时间</div><div class=\"line\">  updateTime: Date    // 更新时间</div><div class=\"line\">  userId: String      // 用户ID</div><div class=\"line\">  isDeleted: Boolean  // 软删除标记</div><div class=\"line\">  version: Number     // 版本号(用于冲突处理)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"实现步骤-TodoList\"><a href=\"#实现步骤-TodoList\" class=\"headerlink\" title=\"实现步骤 (TodoList)\"></a>实现步骤 (TodoList)</h4><h5 id=\"1-基础配置\"><a href=\"#1-基础配置\" class=\"headerlink\" title=\"1. 基础配置\"></a>1. 基础配置</h5><ul>\n<li>[ ] 注册LeanCloud账号并创建应用</li>\n<li>[ ] 添加LeanCloud SDK依赖</li>\n<li>[ ] 在Application中初始化SDK</li>\n<li>[ ] 配置AndroidManifest添加所需权限</li>\n</ul>\n<h5 id=\"2-用户系统\"><a href=\"#2-用户系统\" class=\"headerlink\" title=\"2. 用户系统\"></a>2. 用户系统</h5><ul>\n<li>[ ] 实现注册界面</li>\n<li>[ ] 实现登录界面</li>\n<li>[ ] 实现用户信息存储</li>\n<li>[ ] 添加登出功能</li>\n</ul>\n<h5 id=\"3-数据同步\"><a href=\"#3-数据同步\" class=\"headerlink\" title=\"3. 数据同步\"></a>3. 数据同步</h5><ul>\n<li>[ ] 修改本地数据库结构，增加同步相关字段</li>\n<li>[ ] 实现数据上传功能</li>\n<li>[ ] 实现数据下载功能</li>\n<li>[ ] 添加定时同步服务</li>\n</ul>\n<h5 id=\"4-冲突处理\"><a href=\"#4-冲突处理\" class=\"headerlink\" title=\"4. 冲突处理\"></a>4. 冲突处理</h5><ul>\n<li>[ ] 实现版本控制</li>\n<li>[ ] 添加冲突检测逻辑</li>\n<li>[ ] 实现冲突解决策略</li>\n</ul>\n<h5 id=\"5-离线支持\"><a href=\"#5-离线支持\" class=\"headerlink\" title=\"5. 离线支持\"></a>5. 离线支持</h5><ul>\n<li>[ ] 实现本地缓存</li>\n<li>[ ] 添加离线操作队列</li>\n<li>[ ] 网络恢复后自动同步</li>\n</ul>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><h5 id=\"LeanCloud初始化\"><a href=\"#LeanCloud初始化\" class=\"headerlink\" title=\"LeanCloud初始化\"></a>LeanCloud初始化</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</div><div class=\"line\">        <span class=\"comment\">// 初始化参数依次为 this, AppId, AppKey</span></div><div class=\"line\">        AVOSCloud.initialize(<span class=\"keyword\">this</span>,<span class=\"string\">\"your_app_id\"</span>,<span class=\"string\">\"your_app_key\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"数据同步示例\"><a href=\"#数据同步示例\" class=\"headerlink\" title=\"数据同步示例\"></a>数据同步示例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SyncService</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">syncNote</span><span class=\"params\">(Note note)</span> </span>&#123;</div><div class=\"line\">        AVObject avNote = <span class=\"keyword\">new</span> AVObject(<span class=\"string\">\"Note\"</span>);</div><div class=\"line\">        avNote.put(<span class=\"string\">\"content\"</span>, note.getContent());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"createTime\"</span>, note.getCreateTime());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"updateTime\"</span>, <span class=\"keyword\">new</span> Date());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"userId\"</span>, AVUser.getCurrentUser().getObjectId());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"version\"</span>, note.getVersion());</div><div class=\"line\">        </div><div class=\"line\">        avNote.saveInBackground().subscribe(<span class=\"keyword\">new</span> Observer&lt;AVObject&gt;() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSuccess</span><span class=\"params\">(AVObject avObject)</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// 同步成功处理</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onError</span><span class=\"params\">(Throwable throwable)</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// 错误处理</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>数据安全</li>\n</ol>\n<ul>\n<li>设置适当的ACL权限</li>\n<li>敏感数据加密存储</li>\n<li>使用HTTPS传输</li>\n</ul>\n<ol>\n<li>性能优化</li>\n</ol>\n<ul>\n<li>批量同步而不是单条同步</li>\n<li>合理设置同步频率</li>\n<li>压缩数据包大小</li>\n</ul>\n<ol>\n<li>用户体验</li>\n</ol>\n<ul>\n<li>同步状态提示</li>\n<li>网络异常处理</li>\n<li>后台静默同步</li>\n</ul>\n<ol>\n<li>耗电优化</li>\n</ol>\n<ul>\n<li>使用WorkManager调度同步任务</li>\n<li>根据网络状态调整同步策略</li>\n<li>避免频繁同步</li>\n</ul>\n<h4 id=\"后续优化方向\"><a href=\"#后续优化方向\" class=\"headerlink\" title=\"后续优化方向\"></a>后续优化方向</h4><ol>\n<li>支持多设备同步</li>\n<li>添加同步历史记录</li>\n<li>实现数据版本回滚</li>\n<li>添加同步设置选项</li>\n<li>支持选择性同步</li>\n</ol>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://leancloud.cn/docs/\">LeanCloud 文档中心</a></li>\n<li><a href=\"https://developer.android.com/topic/libraries/architecture/workmanager\">Android WorkManager</a></li>\n<li><a href=\"https://developer.android.com/training/sync-adapters\">Android 数据同步最佳实践</a></li>\n</ul>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h3 id=\"增删查改的实现\"><a href=\"#增删查改的实现\" class=\"headerlink\" title=\"增删查改的实现\"></a>增删查改的实现</h3><h4 id=\"创建主活动及布局文件\"><a href=\"#创建主活动及布局文件\" class=\"headerlink\" title=\"创建主活动及布局文件\"></a>创建主活动及布局文件</h4><ul>\n<li>主活动是整个app的入口，还原一下用户的使用场景：</li>\n</ul>","more":"<pre><code>点击新增按钮：进入AddContent活动\n点击备忘录列表上的某个Item：进入对应的备忘录的查看界面\n</code></pre><ul>\n<li><p>布局文件中应该有一个新建备忘录的Button和一个显示备忘录列表的ListView。</p>\n</li>\n<li><p>在MainActivity中创建对象根据id获取到上述布局实体并添加逻辑。</p>\n<ul>\n<li><p>对Button设置点击监听事件并重写点击方法（跳转到新增备忘录的活动）:</p>\n<pre><code>newbtn.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n           Intent i = new Intent(MainActivity.this, AddContent.class);\n           startActivity(i);\n        }\n);\n</code></pre></li>\n<li><p>对ListView绑定ListViewAdapter用于绘制ListView的每一个Item中的显示内容；另外为ListView的Item设置点击监听事件并重写点击方法（跳转到查看备忘录的活动）：</p>\n<pre><code>lv.setOnItemClickListener(this);\n@Override\n    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,\n            long id) {\n        cursor = dbReader.query(NotesDB.TABLE_NAME, null, null, null, \n                 null, null, null);\n        cursor.moveToPosition(position);\n        Intent j = new Intent(MainActivity.this,ShowContent.class);\n        j.putExtra(NotesDB.ID, cursor.getInt(cursor.getColumnIndex(NotesDB.ID)));\n        j.putExtra(NotesDB.CONTENT, cursor.getString(cursor.getColumnIndex(NotesDB.CONTENT)));\n        j.putExtra(NotesDB.TIME, cursor.getString(cursor.getColumnIndex(NotesDB.TIME)));\n        startActivity(j);        \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4><ul>\n<li><p>重写了两个方法，分别是创建数据库和更新数据库。</p>\n<ul>\n<li><p>其中onUpgrade()方法确保app在覆盖安装时不会覆盖原有的数据库。</p>\n<pre><code>@Override\npublic void onCreate(SQLiteDatabase db) {\n        db.execSQL(&quot;CREATE TABLE &quot; + TABLE_NAME + &quot;(&quot; \n                + ID +&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot; \n                + CONTENT + &quot; TEXT NOT NULL,&quot;\n                + TIME + &quot; TEXT NOT NULL)&quot;);//最后的括号不能忘\n    }\n\n@Override\npublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {    \n    }\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"创建添加备忘的活动及布局文件\"><a href=\"#创建添加备忘的活动及布局文件\" class=\"headerlink\" title=\"创建添加备忘的活动及布局文件\"></a>创建添加备忘的活动及布局文件</h4><ul>\n<li><p>用户的使用场景：</p>\n<p>  进入AddContent活动输入文字<br>  点击取消按钮：返回MainActivity界面<br>  点击保存按钮：输入的文字和当前日期时间被存入数据库</p>\n</li>\n<li><p>布局包括一个输入文字的EditText和两个Button分别用于保存和取消。</p>\n</li>\n<li>在活动中为两个按钮设置点击监听事件重写点击方法：<ul>\n<li>取消按钮：finish()当前活动；需要注意的是，要想返回的活动是主界面必须在Manifest文件中为主活动添加<code>android:launchMode=&quot;singleTask&quot;</code>的声明。</li>\n<li>保存按钮：将EditText中的文字和当前时间用ContentValue对象存入数据库；注意获取当前时间用SimpleDateFormat的format方法来得到Date对象的合适的格式，返回值类型为String。</li>\n</ul>\n</li>\n<li><p>ContentValue和数据库的写入方法如下：</p>\n<pre><code>public void addDB() {\n        ContentValues cv = new ContentValues();\n        cv.put(NotesDB.CONTENT,edtext.getText().toString());\n        cv.put(NotesDB.TIME, getTime());\n        dbWriter.insert(NotesDB.TABLE_NAME, null, cv);\n    }\n\nprivate String getTime() {\n        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\n        Date date = new Date();\n        String str = format.format(date);\n        return str;\n    }\n</code></pre></li>\n</ul>\n<h4 id=\"创建查看备忘的活动及布局文件\"><a href=\"#创建查看备忘的活动及布局文件\" class=\"headerlink\" title=\"创建查看备忘的活动及布局文件\"></a>创建查看备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入ShowContent活动查看备忘录详细内容（包括存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击删除按钮：删除数据库中的对应记录，并保证主活动中的列表也同步</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括一个用来显示文字的EditText和两个Button分别用于返回和删除。</li>\n<li>活动中两个按钮的点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>删除按钮的<code>onClick</code>方法中的删除数据库记录的代码如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public void deleteData() &#123;</div><div class=\"line\">\tdbWriter.delete(NotesDB.TABLE_NAME,</div><div class=\"line\">                       &quot;_id=&quot;+getIntent().getIntExtra(NotesDB.ID, 0), null);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>活动中的EditText是用来显示备忘内容的因此将编辑属性关闭，备忘内容从启动该活动的Intent中获取。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">s_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">s_edtxt. setCursorVisible ( false ) ; </div><div class=\"line\">s_edtxt.setFocusable(false); </div><div class=\"line\">s_edtxt.clearFocus();</div></pre></td></tr></table></figure>\n<h4 id=\"创建修改备忘的活动及布局文件\"><a href=\"#创建修改备忘的活动及布局文件\" class=\"headerlink\" title=\"创建修改备忘的活动及布局文件\"></a>创建修改备忘的活动及布局文件</h4><ul>\n<li>用户的使用场景：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入UpdateContent活动修改备忘录详细内容（同时更新存在数据库中的时间）</div><div class=\"line\">点击返回按钮：返回MainActivity界面；</div><div class=\"line\">点击保存按钮：输入的文字和当前日期时间覆盖数据库中对应的记录</div></pre></td></tr></table></figure>\n<ul>\n<li>布局包括EditText和两个Button<br>+活动中为两个按钮设置点击监听事件：<ul>\n<li>返回按钮同新增活动中的取消按钮</li>\n<li>保存按钮同新增按钮中的保存按钮</li>\n</ul>\n</li>\n<li>活动中的EditText除了要显示原有的备忘内容外，还要有可以编辑的属性：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">u_edtxt.setText(this.getIntent().getStringExtra(NotesDB.CONTENT));</div><div class=\"line\">u_edtxt. setCursorVisible (true) ;</div><div class=\"line\">u_edtxt.setFocusable(true);</div><div class=\"line\">u_edtxt.setSelection(u_edtxt.getText().toString().length());</div></pre></td></tr></table></figure>\n<h4 id=\"在Manifest文件中注册活动：\"><a href=\"#在Manifest文件中注册活动：\" class=\"headerlink\" title=\"在Manifest文件中注册活动：\"></a>在Manifest文件中注册活动：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;application</div><div class=\"line\">        android:allowBackup=&quot;true&quot;</div><div class=\"line\">        android:icon=&quot;@mipmap/ic_note_white&quot;</div><div class=\"line\">        android:label=&quot;@string/app_name&quot;</div><div class=\"line\">        android:supportsRtl=&quot;true&quot;</div><div class=\"line\">        android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.MainActivity&quot;</div><div class=\"line\">            android:label=&quot;@string/app_name&quot;</div><div class=\"line\">            android:launchMode=&quot;singleTask&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;</div><div class=\"line\">            &lt;intent-filter&gt;</div><div class=\"line\">                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class=\"line\">            &lt;/intent-filter&gt;</div><div class=\"line\">        &lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.AddContent&quot;</div><div class=\"line\">            android:label=&quot;新增日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.ShowContent&quot;</div><div class=\"line\">            android:label=&quot;查看日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">        &lt;activity</div><div class=\"line\">            android:name=&quot;.activity.UpdateContent&quot;</div><div class=\"line\">            android:label=&quot;修改日程&quot;</div><div class=\"line\">            android:screenOrientation=&quot;portrait&quot;</div><div class=\"line\">            android:theme=&quot;@style/AppTheme.NoActionBar&quot;</div><div class=\"line\">            android:windowSoftInputMode=&quot;adjustResize&quot;&gt;&lt;/activity&gt;</div><div class=\"line\">      </div><div class=\"line\">    &lt;/application&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>至此，备忘录的增删改查功能已经添加完毕。</li>\n</ul>\n<h3 id=\"云端同步功能实现\"><a href=\"#云端同步功能实现\" class=\"headerlink\" title=\"云端同步功能实现\"></a>云端同步功能实现</h3><h4 id=\"同步功能概述\"><a href=\"#同步功能概述\" class=\"headerlink\" title=\"同步功能概述\"></a>同步功能概述</h4><p>备忘录的云端同步可以让用户在多个设备间同步数据，并提供数据备份功能。实现云同步需要考虑以下几个方面：</p>\n<ol>\n<li>数据存储方案</li>\n<li>用户认证</li>\n<li>同步策略</li>\n<li>冲突处理</li>\n</ol>\n<h4 id=\"推荐的技术方案\"><a href=\"#推荐的技术方案\" class=\"headerlink\" title=\"推荐的技术方案\"></a>推荐的技术方案</h4><h5 id=\"1-后端存储选择\"><a href=\"#1-后端存储选择\" class=\"headerlink\" title=\"1. 后端存储选择\"></a>1. 后端存储选择</h5><ul>\n<li>LeanCloud (推荐)<ul>\n<li>提供开箱即用的数据存储</li>\n<li>内置用户系统</li>\n<li>有完整的Android SDK</li>\n<li>免费额度足够个人开发者使用</li>\n</ul>\n</li>\n<li>Firebase (替代方案)<ul>\n<li>Google官方支持</li>\n<li>实时数据同步</li>\n<li>较完善的离线支持</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-数据表设计\"><a href=\"#2-数据表设计\" class=\"headerlink\" title=\"2. 数据表设计\"></a>2. 数据表设计</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Note &#123;</div><div class=\"line\">  objectId: String    // 唯一标识</div><div class=\"line\">  content: String     // 备忘内容</div><div class=\"line\">  createTime: Date    // 创建时间</div><div class=\"line\">  updateTime: Date    // 更新时间</div><div class=\"line\">  userId: String      // 用户ID</div><div class=\"line\">  isDeleted: Boolean  // 软删除标记</div><div class=\"line\">  version: Number     // 版本号(用于冲突处理)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"实现步骤-TodoList\"><a href=\"#实现步骤-TodoList\" class=\"headerlink\" title=\"实现步骤 (TodoList)\"></a>实现步骤 (TodoList)</h4><h5 id=\"1-基础配置\"><a href=\"#1-基础配置\" class=\"headerlink\" title=\"1. 基础配置\"></a>1. 基础配置</h5><ul>\n<li>[ ] 注册LeanCloud账号并创建应用</li>\n<li>[ ] 添加LeanCloud SDK依赖</li>\n<li>[ ] 在Application中初始化SDK</li>\n<li>[ ] 配置AndroidManifest添加所需权限</li>\n</ul>\n<h5 id=\"2-用户系统\"><a href=\"#2-用户系统\" class=\"headerlink\" title=\"2. 用户系统\"></a>2. 用户系统</h5><ul>\n<li>[ ] 实现注册界面</li>\n<li>[ ] 实现登录界面</li>\n<li>[ ] 实现用户信息存储</li>\n<li>[ ] 添加登出功能</li>\n</ul>\n<h5 id=\"3-数据同步\"><a href=\"#3-数据同步\" class=\"headerlink\" title=\"3. 数据同步\"></a>3. 数据同步</h5><ul>\n<li>[ ] 修改本地数据库结构，增加同步相关字段</li>\n<li>[ ] 实现数据上传功能</li>\n<li>[ ] 实现数据下载功能</li>\n<li>[ ] 添加定时同步服务</li>\n</ul>\n<h5 id=\"4-冲突处理\"><a href=\"#4-冲突处理\" class=\"headerlink\" title=\"4. 冲突处理\"></a>4. 冲突处理</h5><ul>\n<li>[ ] 实现版本控制</li>\n<li>[ ] 添加冲突检测逻辑</li>\n<li>[ ] 实现冲突解决策略</li>\n</ul>\n<h5 id=\"5-离线支持\"><a href=\"#5-离线支持\" class=\"headerlink\" title=\"5. 离线支持\"></a>5. 离线支持</h5><ul>\n<li>[ ] 实现本地缓存</li>\n<li>[ ] 添加离线操作队列</li>\n<li>[ ] 网络恢复后自动同步</li>\n</ul>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><h5 id=\"LeanCloud初始化\"><a href=\"#LeanCloud初始化\" class=\"headerlink\" title=\"LeanCloud初始化\"></a>LeanCloud初始化</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</div><div class=\"line\">        <span class=\"comment\">// 初始化参数依次为 this, AppId, AppKey</span></div><div class=\"line\">        AVOSCloud.initialize(<span class=\"keyword\">this</span>,<span class=\"string\">\"your_app_id\"</span>,<span class=\"string\">\"your_app_key\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"数据同步示例\"><a href=\"#数据同步示例\" class=\"headerlink\" title=\"数据同步示例\"></a>数据同步示例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SyncService</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">syncNote</span><span class=\"params\">(Note note)</span> </span>&#123;</div><div class=\"line\">        AVObject avNote = <span class=\"keyword\">new</span> AVObject(<span class=\"string\">\"Note\"</span>);</div><div class=\"line\">        avNote.put(<span class=\"string\">\"content\"</span>, note.getContent());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"createTime\"</span>, note.getCreateTime());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"updateTime\"</span>, <span class=\"keyword\">new</span> Date());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"userId\"</span>, AVUser.getCurrentUser().getObjectId());</div><div class=\"line\">        avNote.put(<span class=\"string\">\"version\"</span>, note.getVersion());</div><div class=\"line\">        </div><div class=\"line\">        avNote.saveInBackground().subscribe(<span class=\"keyword\">new</span> Observer&lt;AVObject&gt;() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSuccess</span><span class=\"params\">(AVObject avObject)</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// 同步成功处理</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onError</span><span class=\"params\">(Throwable throwable)</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">// 错误处理</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h4><ol>\n<li>数据安全</li>\n</ol>\n<ul>\n<li>设置适当的ACL权限</li>\n<li>敏感数据加密存储</li>\n<li>使用HTTPS传输</li>\n</ul>\n<ol>\n<li>性能优化</li>\n</ol>\n<ul>\n<li>批量同步而不是单条同步</li>\n<li>合理设置同步频率</li>\n<li>压缩数据包大小</li>\n</ul>\n<ol>\n<li>用户体验</li>\n</ol>\n<ul>\n<li>同步状态提示</li>\n<li>网络异常处理</li>\n<li>后台静默同步</li>\n</ul>\n<ol>\n<li>耗电优化</li>\n</ol>\n<ul>\n<li>使用WorkManager调度同步任务</li>\n<li>根据网络状态调整同步策略</li>\n<li>避免频繁同步</li>\n</ul>\n<h4 id=\"后续优化方向\"><a href=\"#后续优化方向\" class=\"headerlink\" title=\"后续优化方向\"></a>后续优化方向</h4><ol>\n<li>支持多设备同步</li>\n<li>添加同步历史记录</li>\n<li>实现数据版本回滚</li>\n<li>添加同步设置选项</li>\n<li>支持选择性同步</li>\n</ol>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://leancloud.cn/docs/\">LeanCloud 文档中心</a></li>\n<li><a href=\"https://developer.android.com/topic/libraries/architecture/workmanager\">Android WorkManager</a></li>\n<li><a href=\"https://developer.android.com/training/sync-adapters\">Android 数据同步最佳实践</a></li>\n</ul>"},{"title":"百日囚徒问题","date":"2017-12-27T15:09:37.000Z","_content":"\n有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。\n\n一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！\n\n囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。\n\n<!--more-->\n\n#### 思路\n\n1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：\n\t\n- 计数人\n\t- 首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)\n\n\n- 已知囚徒\n\t- 设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数\n\n\n- 未知囚徒\n\t- 设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数\n\n这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。\n\n2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：\n\n- 已知囚徒放风\n\t- 不进行任何操作\n\n- 未知囚徒放风\n\t- 若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。\n\t- 若灯为关闭状态，说明此次通信未结束，不进行任何操作\n\n- 计数人放风\n\t- 若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息\n\t- 若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作\n\n当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。\n\n#### 代码\n\n\timport random\n\n\tdays = 1\t# 天数\n\tlight = 0\t# 灯\n\ttimes = [0 for i in range(0,100)]\t# 每个囚徒放风次数的统计数组\n\tcounter = -1\t# 计数人\n\tremainer = 100\t# 剩余未知人\n\t\n\twhile 1==1:\n\t\tprint(\"第%d天: \"%days)\n\t\tprint(\"\t\t剩余未知人: %d\"%remainer)\n\t\t# 随机抽选一人放风\n\t\tP = random.randint(0, 99)\n\t\n\t\t# 前100天确认身份\n\t\tif days <= 100:\n\t\t\tif light == 0:\n\t\t\t\ttimes[P] += 1\t# 灯灭放风有效\n\t\t\t\tif times == 1:\n\t\t\t\t\tpass\n\t\t\t\tif times[P] == 2:\t# 灯灭且第二次放风\n\t\t\t\t\tcounter = P\n\t\t\t\t\tprint(\"\t\t确定计数人: %d\" %counter)\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= (days-1)\t# 开灯计数\n\t\t\telse:\n\t\t\t\tpass\t# 在灯亮放风无效\n\t\n\t\t\tif days == 100 and light == 0:\t# 100天灯仍灭，获救\n\t\t\t\tprint(\"获救\")\n\t\t\t\tbreak\n\t\n\t\telse:\t# 100天后通过灯通信\n\t\t\tif light == 1:\n\t\t\t\ttimes[P] += 1\t# 灯亮放风有效\n\t\t\t\tif times[P] == 1:\t#(未知者)关灯发出信息\n\t\t\t\t\tlight = 0\n\t\n\t\t\telse:\n\t\t\t\tif P == counter:\t# 灯灭计数人开灯计数\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= 1\n\t\t\t\t\tif remainer == 0:\n\t\t\t\t\t\tprint(\"\t\t计数人%d宣布获救\" %counter)\n\t\t\t\t\t\tbreak\n\t\tdays += 1\n\n#### 日志\n\n\t第1天: \n\t\t剩余未知人: 100\n\t第2天: \n\t\t\t剩余未知人: 100\n\t第3天: \n\t\t\t剩余未知人: 100\n\t第4天: \n\t\t\t剩余未知人: 100\n\t第5天: \n\t\t\t剩余未知人: 100\n\t第6天: \n\t\t\t剩余未知人: 100\n\t第7天: \n\t\t\t剩余未知人: 100\n\t\t\t确定计数人: 53\n\t第8天: \n\t\t\t剩余未知人: 94\n\t第9天: \n\t\t\t剩余未知人: 94\n\n\t······\n\n\t第9538天: \n\t\t剩余未知人: 1\n\t第9539天: \n\t\t\t剩余未知人: 1\n\t第9540天: \n\t\t\t剩余未知人: 1\n\t第9541天: \n\t\t\t剩余未知人: 1\n\t\t\t计数人53宣布获救","source":"_posts/06_百日囚徒问题.md","raw":"---\ntitle: 百日囚徒问题\ndate: 2017-12-27 23:09:37\ntags: 算法\n---\n\n有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。\n\n一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！\n\n囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。\n\n<!--more-->\n\n#### 思路\n\n1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：\n\t\n- 计数人\n\t- 首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)\n\n\n- 已知囚徒\n\t- 设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数\n\n\n- 未知囚徒\n\t- 设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数\n\n这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。\n\n2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：\n\n- 已知囚徒放风\n\t- 不进行任何操作\n\n- 未知囚徒放风\n\t- 若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。\n\t- 若灯为关闭状态，说明此次通信未结束，不进行任何操作\n\n- 计数人放风\n\t- 若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息\n\t- 若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作\n\n当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。\n\n#### 代码\n\n\timport random\n\n\tdays = 1\t# 天数\n\tlight = 0\t# 灯\n\ttimes = [0 for i in range(0,100)]\t# 每个囚徒放风次数的统计数组\n\tcounter = -1\t# 计数人\n\tremainer = 100\t# 剩余未知人\n\t\n\twhile 1==1:\n\t\tprint(\"第%d天: \"%days)\n\t\tprint(\"\t\t剩余未知人: %d\"%remainer)\n\t\t# 随机抽选一人放风\n\t\tP = random.randint(0, 99)\n\t\n\t\t# 前100天确认身份\n\t\tif days <= 100:\n\t\t\tif light == 0:\n\t\t\t\ttimes[P] += 1\t# 灯灭放风有效\n\t\t\t\tif times == 1:\n\t\t\t\t\tpass\n\t\t\t\tif times[P] == 2:\t# 灯灭且第二次放风\n\t\t\t\t\tcounter = P\n\t\t\t\t\tprint(\"\t\t确定计数人: %d\" %counter)\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= (days-1)\t# 开灯计数\n\t\t\telse:\n\t\t\t\tpass\t# 在灯亮放风无效\n\t\n\t\t\tif days == 100 and light == 0:\t# 100天灯仍灭，获救\n\t\t\t\tprint(\"获救\")\n\t\t\t\tbreak\n\t\n\t\telse:\t# 100天后通过灯通信\n\t\t\tif light == 1:\n\t\t\t\ttimes[P] += 1\t# 灯亮放风有效\n\t\t\t\tif times[P] == 1:\t#(未知者)关灯发出信息\n\t\t\t\t\tlight = 0\n\t\n\t\t\telse:\n\t\t\t\tif P == counter:\t# 灯灭计数人开灯计数\n\t\t\t\t\tlight = 1\n\t\t\t\t\tremainer -= 1\n\t\t\t\t\tif remainer == 0:\n\t\t\t\t\t\tprint(\"\t\t计数人%d宣布获救\" %counter)\n\t\t\t\t\t\tbreak\n\t\tdays += 1\n\n#### 日志\n\n\t第1天: \n\t\t剩余未知人: 100\n\t第2天: \n\t\t\t剩余未知人: 100\n\t第3天: \n\t\t\t剩余未知人: 100\n\t第4天: \n\t\t\t剩余未知人: 100\n\t第5天: \n\t\t\t剩余未知人: 100\n\t第6天: \n\t\t\t剩余未知人: 100\n\t第7天: \n\t\t\t剩余未知人: 100\n\t\t\t确定计数人: 53\n\t第8天: \n\t\t\t剩余未知人: 94\n\t第9天: \n\t\t\t剩余未知人: 94\n\n\t······\n\n\t第9538天: \n\t\t剩余未知人: 1\n\t第9539天: \n\t\t\t剩余未知人: 1\n\t第9540天: \n\t\t\t剩余未知人: 1\n\t第9541天: \n\t\t\t剩余未知人: 1\n\t\t\t计数人53宣布获救","slug":"06_百日囚徒问题","published":1,"updated":"2023-12-25T09:50:47.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxt000p7vjkgqa1ko2w","content":"<p>有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。</p>\n<p>一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！</p>\n<p>囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。</p>\n<a id=\"more\"></a>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：</p>\n<ul>\n<li>计数人<ul>\n<li>首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>已知囚徒<ul>\n<li>设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>未知囚徒<ul>\n<li>设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数</li>\n</ul>\n</li>\n</ul>\n<p>这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。</p>\n<p>2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：</p>\n<ul>\n<li><p>已知囚徒放风</p>\n<ul>\n<li>不进行任何操作</li>\n</ul>\n</li>\n<li><p>未知囚徒放风</p>\n<ul>\n<li>若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。</li>\n<li>若灯为关闭状态，说明此次通信未结束，不进行任何操作</li>\n</ul>\n</li>\n<li><p>计数人放风</p>\n<ul>\n<li>若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息</li>\n<li>若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作</li>\n</ul>\n</li>\n</ul>\n<p>当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>import random\n\ndays = 1    # 天数\nlight = 0    # 灯\ntimes = [0 for i in range(0,100)]    # 每个囚徒放风次数的统计数组\ncounter = -1    # 计数人\nremainer = 100    # 剩余未知人\n\nwhile 1==1:\n    print(&quot;第%d天: &quot;%days)\n    print(&quot;        剩余未知人: %d&quot;%remainer)\n    # 随机抽选一人放风\n    P = random.randint(0, 99)\n\n    # 前100天确认身份\n    if days &lt;= 100:\n        if light == 0:\n            times[P] += 1    # 灯灭放风有效\n            if times == 1:\n                pass\n            if times[P] == 2:    # 灯灭且第二次放风\n                counter = P\n                print(&quot;        确定计数人: %d&quot; %counter)\n                light = 1\n                remainer -= (days-1)    # 开灯计数\n        else:\n            pass    # 在灯亮放风无效\n\n        if days == 100 and light == 0:    # 100天灯仍灭，获救\n            print(&quot;获救&quot;)\n            break\n\n    else:    # 100天后通过灯通信\n        if light == 1:\n            times[P] += 1    # 灯亮放风有效\n            if times[P] == 1:    #(未知者)关灯发出信息\n                light = 0\n\n        else:\n            if P == counter:    # 灯灭计数人开灯计数\n                light = 1\n                remainer -= 1\n                if remainer == 0:\n                    print(&quot;        计数人%d宣布获救&quot; %counter)\n                    break\n    days += 1\n</code></pre><h4 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h4><pre><code>第1天: \n    剩余未知人: 100\n第2天: \n        剩余未知人: 100\n第3天: \n        剩余未知人: 100\n第4天: \n        剩余未知人: 100\n第5天: \n        剩余未知人: 100\n第6天: \n        剩余未知人: 100\n第7天: \n        剩余未知人: 100\n        确定计数人: 53\n第8天: \n        剩余未知人: 94\n第9天: \n        剩余未知人: 94\n\n······\n\n第9538天: \n    剩余未知人: 1\n第9539天: \n        剩余未知人: 1\n第9540天: \n        剩余未知人: 1\n第9541天: \n        剩余未知人: 1\n        计数人53宣布获救\n</code></pre><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<p>有100个无期徒刑囚徒，被关在100个独立的小房间，互相无法通信。每天会有一个囚徒被随机地抽出来放风，随机就是说可能被抽到多次。放风的地方有一盏灯，囚徒可以打开或者关上，除囚徒外，没有别人会去动这个灯。每个人除非出来防风，是看不到这个灯的。</p>\n<p>一天，全体囚徒大会，国王大赦，给大家一个机会：如果某一天，某个囚徒能够明确表示，所有的囚徒都已经被放过风了，而且的确如此，那么所有囚徒释放；如果仍有囚徒未被放过风，那么所有的囚徒一起处死！</p>\n<p>囚徒大会后给大家20分钟时间讨论，囚徒们能找到方法么？不考虑什么犯人突然死亡的意外因素。是纯粹的理论题。</p>","more":"<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>1、前100天利用灯来互相确认自己的身份（灯初始状态为关闭）：</p>\n<ul>\n<li>计数人<ul>\n<li>首次放风的人不进行任何操作，设第一个二次放风的人为计数人，计数人把灯打开（比如第20天该囚犯第二次去放风，且前面没有人去动过灯，则说明连同他共有19个人是首次放风），则此时生成一个该天数的计数(N-1)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>已知囚徒<ul>\n<li>设剩下的99人中，见到过灯灭状态的人为已知囚徒，因为计数人能通过开灯的日期准确推算出之前的人数</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>未知囚徒<ul>\n<li>设从未见过灯灭状态的人为未知囚徒，因为灯打开后，计数人无法获取放风的准确人数</li>\n</ul>\n</li>\n</ul>\n<p>这里有可能出现最好情况：第100天，某首次放风囚徒发现灯为关闭状态，说明前100天均无人2次放风，即每人都是首次放风，可以宣布获救。</p>\n<p>2、100天过后，未知囚徒和计数人之间通过灯来传递信息（灯初始状态为打开）：</p>\n<ul>\n<li><p>已知囚徒放风</p>\n<ul>\n<li>不进行任何操作</li>\n</ul>\n</li>\n<li><p>未知囚徒放风</p>\n<ul>\n<li>若灯为打开状态，说明通信可用，关灯向计数人传递信息，至此该未知囚徒以后都不再对灯进行操作。</li>\n<li>若灯为关闭状态，说明此次通信未结束，不进行任何操作</li>\n</ul>\n</li>\n<li><p>计数人放风</p>\n<ul>\n<li>若灯为关闭状态，计数N+1，并将灯打开，以便下一个未知囚徒传递信息</li>\n<li>若灯为打开状态，说明暂时没有未知囚徒发起通信，不进行任何操作</li>\n</ul>\n</li>\n</ul>\n<p>当计数人放风时恰好N=100，则他可以宣布确定所有囚徒都放过风了。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre><code>import random\n\ndays = 1    # 天数\nlight = 0    # 灯\ntimes = [0 for i in range(0,100)]    # 每个囚徒放风次数的统计数组\ncounter = -1    # 计数人\nremainer = 100    # 剩余未知人\n\nwhile 1==1:\n    print(&quot;第%d天: &quot;%days)\n    print(&quot;        剩余未知人: %d&quot;%remainer)\n    # 随机抽选一人放风\n    P = random.randint(0, 99)\n\n    # 前100天确认身份\n    if days &lt;= 100:\n        if light == 0:\n            times[P] += 1    # 灯灭放风有效\n            if times == 1:\n                pass\n            if times[P] == 2:    # 灯灭且第二次放风\n                counter = P\n                print(&quot;        确定计数人: %d&quot; %counter)\n                light = 1\n                remainer -= (days-1)    # 开灯计数\n        else:\n            pass    # 在灯亮放风无效\n\n        if days == 100 and light == 0:    # 100天灯仍灭，获救\n            print(&quot;获救&quot;)\n            break\n\n    else:    # 100天后通过灯通信\n        if light == 1:\n            times[P] += 1    # 灯亮放风有效\n            if times[P] == 1:    #(未知者)关灯发出信息\n                light = 0\n\n        else:\n            if P == counter:    # 灯灭计数人开灯计数\n                light = 1\n                remainer -= 1\n                if remainer == 0:\n                    print(&quot;        计数人%d宣布获救&quot; %counter)\n                    break\n    days += 1\n</code></pre><h4 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h4><pre><code>第1天: \n    剩余未知人: 100\n第2天: \n        剩余未知人: 100\n第3天: \n        剩余未知人: 100\n第4天: \n        剩余未知人: 100\n第5天: \n        剩余未知人: 100\n第6天: \n        剩余未知人: 100\n第7天: \n        剩余未知人: 100\n        确定计数人: 53\n第8天: \n        剩余未知人: 94\n第9天: \n        剩余未知人: 94\n\n······\n\n第9538天: \n    剩余未知人: 1\n第9539天: \n        剩余未知人: 1\n第9540天: \n        剩余未知人: 1\n第9541天: \n        剩余未知人: 1\n        计数人53宣布获救\n</code></pre>"},{"title":"让你的hexo支持mermaid","date":"2019-05-26T08:56:24.000Z","_content":"\n#### mermaid配置方法\n\nMermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:\n\n1. npm安装mermaid渲染插件:\n\n```bash\nnpm install hexo-filter-mermaid-diagrams --save\n```\n\n2. 在Hexo博客的根目录下,修改`_config.yml`文件,添加以下配置:\n\n```yaml\nmermaid:\n  enable: true\n  theme: default\n```\n\n3. 在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n<!--more-->\n\n参考文章：\n\n    https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\n    https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n\n####  hexo绘制脑图\n\n参考文章：\n\n    https://qsli.github.io/2017/01/01/markdown-mindmap/\n    https://github.com/HunterXuan/hexo-simple-mindmap\n\n\n#### 配置完成后，使用mermaid语法\n\n##### 流程图\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n##### 时序图\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n##### 甘特图\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```\n\n##### 脑图\n{% pullquote mindmap mindmap-md %}\n- [在 Hexo 中使用思维导图](https://hunterx.xyz/use-mindmap-in-hexo.html)\n  - 前言\n  - 操作指南\n    - 准备需要的文件\n    - 为主题添加 CSS/JS 文件\n  - 使用方法\n{% endpullquote %}","source":"_posts/11_让你的Hexo支持mermaid.md","raw":"---\ntitle: 让你的hexo支持mermaid\ndate: 2019-05-26 16:56:24\ntags: hexo\n---\n\n#### mermaid配置方法\n\nMermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:\n\n1. npm安装mermaid渲染插件:\n\n```bash\nnpm install hexo-filter-mermaid-diagrams --save\n```\n\n2. 在Hexo博客的根目录下,修改`_config.yml`文件,添加以下配置:\n\n```yaml\nmermaid:\n  enable: true\n  theme: default\n```\n\n3. 在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n<!--more-->\n\n参考文章：\n\n    https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\n    https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n\n####  hexo绘制脑图\n\n参考文章：\n\n    https://qsli.github.io/2017/01/01/markdown-mindmap/\n    https://github.com/HunterXuan/hexo-simple-mindmap\n\n\n#### 配置完成后，使用mermaid语法\n\n##### 流程图\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n##### 时序图\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n##### 甘特图\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n```\n\n##### 脑图\n{% pullquote mindmap mindmap-md %}\n- [在 Hexo 中使用思维导图](https://hunterx.xyz/use-mindmap-in-hexo.html)\n  - 前言\n  - 操作指南\n    - 准备需要的文件\n    - 为主题添加 CSS/JS 文件\n  - 使用方法\n{% endpullquote %}","slug":"11_让你的Hexo支持mermaid","published":1,"updated":"2025-01-03T15:17:19.536Z","_id":"clqkrbsxt000r7vjkrw3volrv","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"mermaid配置方法\"><a href=\"#mermaid配置方法\" class=\"headerlink\" title=\"mermaid配置方法\"></a>mermaid配置方法</h4><p>Mermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:</p>\n<ol>\n<li>npm安装mermaid渲染插件:</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-filter-mermaid-diagrams --save</div></pre></td></tr></table></figure>\n<ol>\n<li>在Hexo博客的根目录下,修改<code>_config.yml</code>文件,添加以下配置:</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">mermaid:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  theme:</span> default</div></pre></td></tr></table></figure>\n<ol>\n<li>在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:</li>\n</ol>\n<pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<a id=\"more\"></a>\n<p>参考文章：</p>\n<pre><code>https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\nhttps://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n</code></pre><h4 id=\"hexo绘制脑图\"><a href=\"#hexo绘制脑图\" class=\"headerlink\" title=\"hexo绘制脑图\"></a>hexo绘制脑图</h4><p>参考文章：</p>\n<pre><code>https://qsli.github.io/2017/01/01/markdown-mindmap/\nhttps://github.com/HunterXuan/hexo-simple-mindmap\n</code></pre><h4 id=\"配置完成后，使用mermaid语法\"><a href=\"#配置完成后，使用mermaid语法\" class=\"headerlink\" title=\"配置完成后，使用mermaid语法\"></a>配置完成后，使用mermaid语法</h4><h5 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h5><pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h5 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h5><pre class=\"mermaid\">sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!</pre>\n\n<h5 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h5><pre class=\"mermaid\">gantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d</pre>\n\n<h5 id=\"脑图\"><a href=\"#脑图\" class=\"headerlink\" title=\"脑图\"></a>脑图</h5><blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"https://hunterx.xyz/use-mindmap-in-hexo.html\">在 Hexo 中使用思维导图</a><ul>\n<li>前言</li>\n<li>操作指南<ul>\n<li>准备需要的文件</li>\n<li>为主题添加 CSS/JS 文件</li>\n</ul>\n</li>\n<li>使用方法</li>\n</ul>\n</li>\n</ul>\n</blockquote><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"mermaid配置方法\"><a href=\"#mermaid配置方法\" class=\"headerlink\" title=\"mermaid配置方法\"></a>mermaid配置方法</h4><p>Mermaid是一个用于生成流程图、时序图等图表的JavaScript库。要在Hexo中使用它,需要以下步骤:</p>\n<ol>\n<li>npm安装mermaid渲染插件:</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-filter-mermaid-diagrams --save</div></pre></td></tr></table></figure>\n<ol>\n<li>在Hexo博客的根目录下,修改<code>_config.yml</code>文件,添加以下配置:</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">mermaid:</span></div><div class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">  theme:</span> default</div></pre></td></tr></table></figure>\n<ol>\n<li>在需要插入图表的Markdown文件中,使用Mermaid语法插入图表。例如:</li>\n</ol>\n<pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>","more":"<p>参考文章：</p>\n<pre><code>https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html\nhttps://github.com/webappdevelp/hexo-filter-mermaid-diagrams\n</code></pre><h4 id=\"hexo绘制脑图\"><a href=\"#hexo绘制脑图\" class=\"headerlink\" title=\"hexo绘制脑图\"></a>hexo绘制脑图</h4><p>参考文章：</p>\n<pre><code>https://qsli.github.io/2017/01/01/markdown-mindmap/\nhttps://github.com/HunterXuan/hexo-simple-mindmap\n</code></pre><h4 id=\"配置完成后，使用mermaid语法\"><a href=\"#配置完成后，使用mermaid语法\" class=\"headerlink\" title=\"配置完成后，使用mermaid语法\"></a>配置完成后，使用mermaid语法</h4><h5 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h5><pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h5 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h5><pre class=\"mermaid\">sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!</pre>\n\n<h5 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h5><pre class=\"mermaid\">gantt\n        dateFormat  YYYY-MM-DD\n        title Adding GANTT diagram functionality to mermaid\n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2               :         des4, after des3, 5d\n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d</pre>\n\n<h5 id=\"脑图\"><a href=\"#脑图\" class=\"headerlink\" title=\"脑图\"></a>脑图</h5><blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"https://hunterx.xyz/use-mindmap-in-hexo.html\">在 Hexo 中使用思维导图</a><ul>\n<li>前言</li>\n<li>操作指南<ul>\n<li>准备需要的文件</li>\n<li>为主题添加 CSS/JS 文件</li>\n</ul>\n</li>\n<li>使用方法</li>\n</ul>\n</li>\n</ul>\n</blockquote>"},{"title":"客户端测试方案的设计思路","date":"2020-08-31T12:32:18.000Z","_content":"\n#### 5W1H原则\n\n在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。\n\nhow：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。\n\nwhy：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。\n\nwhat：我需要做什么？任务的目的是什么？\n\nwhen：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？\n\nwho：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？\n\nwhere：相关资源的位置和路径，版本、文档。\n\n测试方案对应的需要呈现以上6个方面的问题：\n1. why-需求背景、需求内容\n2. where-资源文件归档路径\n3. what-测试的范围\n4. when-测试的周期\n5. who-参与的人员\n6. how-测试的策略\n\n<!--more-->\n\n#### 测试设计需要考虑的角度\n\n{% pullquote mindmap mindmap-lg %}\n- 测试设计需要考虑的角度\n\t- 功能测试\n\t- 页面校验\n\t- 性能指标\n\t- 异常\n\t- 功能交互\n\t- 容限测试\n\t- 极限\n\t- 可靠性\n\t- 国际化\n\t- 可维护\n{% endpullquote %}\n\n\n#### 测试设计需要考虑的影响因素\n\n{% pullquote mindmap mindmap-lg %}\n- 影响因子\n\t- 空间状态\n\t\t- 云储存空间\n\t\t- 本地存储空间\n\t- 账号状态\n\t\t- AT/ST失效\n\t\t- 退出账号\n\t\t- 销户\n\t- 网络状态\n\t\t- 网络类型\n\t\t- 网络切换\n\t\t- 网络质量\n\t- 服务器状态\n\t\t- 密钥服务\n\t\t- 域名解析服务\n\t\t- 数据库服务\n\t\t- 鉴权服务\n\t\t- 存储平台\n\t\t- 负载平衡\n\t- 用户操作\n\t\t- 重试\n\t\t\t- 连续操作\n\t\t\t- 反复取消/重试\n\t\t\t- 反复暂停/重试\n\t\t\t- 失败/重试\n\t\t- 缓存\n\t\t- 进程\n\t\t- 本地数据库清理\n\t\t- 权限修改\n\t\t- 时间修改\n{% endpullquote %}","source":"_posts/12_测试方案的设计思路.md","raw":"---\ntitle: 客户端测试方案的设计思路\ndate: 2020-08-31 20:32:18\ntags: 总结\n---\n\n#### 5W1H原则\n\n在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。\n\nhow：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。\n\nwhy：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。\n\nwhat：我需要做什么？任务的目的是什么？\n\nwhen：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？\n\nwho：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？\n\nwhere：相关资源的位置和路径，版本、文档。\n\n测试方案对应的需要呈现以上6个方面的问题：\n1. why-需求背景、需求内容\n2. where-资源文件归档路径\n3. what-测试的范围\n4. when-测试的周期\n5. who-参与的人员\n6. how-测试的策略\n\n<!--more-->\n\n#### 测试设计需要考虑的角度\n\n{% pullquote mindmap mindmap-lg %}\n- 测试设计需要考虑的角度\n\t- 功能测试\n\t- 页面校验\n\t- 性能指标\n\t- 异常\n\t- 功能交互\n\t- 容限测试\n\t- 极限\n\t- 可靠性\n\t- 国际化\n\t- 可维护\n{% endpullquote %}\n\n\n#### 测试设计需要考虑的影响因素\n\n{% pullquote mindmap mindmap-lg %}\n- 影响因子\n\t- 空间状态\n\t\t- 云储存空间\n\t\t- 本地存储空间\n\t- 账号状态\n\t\t- AT/ST失效\n\t\t- 退出账号\n\t\t- 销户\n\t- 网络状态\n\t\t- 网络类型\n\t\t- 网络切换\n\t\t- 网络质量\n\t- 服务器状态\n\t\t- 密钥服务\n\t\t- 域名解析服务\n\t\t- 数据库服务\n\t\t- 鉴权服务\n\t\t- 存储平台\n\t\t- 负载平衡\n\t- 用户操作\n\t\t- 重试\n\t\t\t- 连续操作\n\t\t\t- 反复取消/重试\n\t\t\t- 反复暂停/重试\n\t\t\t- 失败/重试\n\t\t- 缓存\n\t\t- 进程\n\t\t- 本地数据库清理\n\t\t- 权限修改\n\t\t- 时间修改\n{% endpullquote %}","slug":"12_测试方案的设计思路","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxu000v7vjkb439oi0a","content":"<h4 id=\"5W1H原则\"><a href=\"#5W1H原则\" class=\"headerlink\" title=\"5W1H原则\"></a>5W1H原则</h4><p>在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。</p>\n<p>how：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。</p>\n<p>why：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。</p>\n<p>what：我需要做什么？任务的目的是什么？</p>\n<p>when：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？</p>\n<p>who：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？</p>\n<p>where：相关资源的位置和路径，版本、文档。</p>\n<p>测试方案对应的需要呈现以上6个方面的问题：</p>\n<ol>\n<li>why-需求背景、需求内容</li>\n<li>where-资源文件归档路径</li>\n<li>what-测试的范围</li>\n<li>when-测试的周期</li>\n<li>who-参与的人员</li>\n<li>how-测试的策略</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"测试设计需要考虑的角度\"><a href=\"#测试设计需要考虑的角度\" class=\"headerlink\" title=\"测试设计需要考虑的角度\"></a>测试设计需要考虑的角度</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>测试设计需要考虑的角度<ul>\n<li>功能测试</li>\n<li>页面校验</li>\n<li>性能指标</li>\n<li>异常</li>\n<li>功能交互</li>\n<li>容限测试</li>\n<li>极限</li>\n<li>可靠性</li>\n<li>国际化</li>\n<li>可维护</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"测试设计需要考虑的影响因素\"><a href=\"#测试设计需要考虑的影响因素\" class=\"headerlink\" title=\"测试设计需要考虑的影响因素\"></a>测试设计需要考虑的影响因素</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>影响因子<ul>\n<li>空间状态<ul>\n<li>云储存空间</li>\n<li>本地存储空间</li>\n</ul>\n</li>\n<li>账号状态<ul>\n<li>AT/ST失效</li>\n<li>退出账号</li>\n<li>销户</li>\n</ul>\n</li>\n<li>网络状态<ul>\n<li>网络类型</li>\n<li>网络切换</li>\n<li>网络质量</li>\n</ul>\n</li>\n<li>服务器状态<ul>\n<li>密钥服务</li>\n<li>域名解析服务</li>\n<li>数据库服务</li>\n<li>鉴权服务</li>\n<li>存储平台</li>\n<li>负载平衡</li>\n</ul>\n</li>\n<li>用户操作<ul>\n<li>重试<ul>\n<li>连续操作</li>\n<li>反复取消/重试</li>\n<li>反复暂停/重试</li>\n<li>失败/重试</li>\n</ul>\n</li>\n<li>缓存</li>\n<li>进程</li>\n<li>本地数据库清理</li>\n<li>权限修改</li>\n<li>时间修改</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"5W1H原则\"><a href=\"#5W1H原则\" class=\"headerlink\" title=\"5W1H原则\"></a>5W1H原则</h4><p>在任何场景下，组织一场活动也好，制定一个商业计划书也好，5W1H原则都是需要适用的，自然在测试方案的制定上也能够适用。</p>\n<p>how：如何去测？用什么资源？依据什么？工具如何选型、案例要执行到什么粒度。</p>\n<p>why：为什么要实现这个功能，背景和目的是什么，能给用户或公司带来多大的价值。</p>\n<p>what：我需要做什么？任务的目的是什么？</p>\n<p>when：项目周期多长，开发时间和提交测试时间是什么时候？什么时候需要给用户？测试周期需多长？</p>\n<p>who：项目各个环节的直接责任人、干系人是谁？谁来主导负责？需要多少人力来参与？</p>\n<p>where：相关资源的位置和路径，版本、文档。</p>\n<p>测试方案对应的需要呈现以上6个方面的问题：</p>\n<ol>\n<li>why-需求背景、需求内容</li>\n<li>where-资源文件归档路径</li>\n<li>what-测试的范围</li>\n<li>when-测试的周期</li>\n<li>who-参与的人员</li>\n<li>how-测试的策略</li>\n</ol>","more":"<h4 id=\"测试设计需要考虑的角度\"><a href=\"#测试设计需要考虑的角度\" class=\"headerlink\" title=\"测试设计需要考虑的角度\"></a>测试设计需要考虑的角度</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>测试设计需要考虑的角度<ul>\n<li>功能测试</li>\n<li>页面校验</li>\n<li>性能指标</li>\n<li>异常</li>\n<li>功能交互</li>\n<li>容限测试</li>\n<li>极限</li>\n<li>可靠性</li>\n<li>国际化</li>\n<li>可维护</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"测试设计需要考虑的影响因素\"><a href=\"#测试设计需要考虑的影响因素\" class=\"headerlink\" title=\"测试设计需要考虑的影响因素\"></a>测试设计需要考虑的影响因素</h4><blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>影响因子<ul>\n<li>空间状态<ul>\n<li>云储存空间</li>\n<li>本地存储空间</li>\n</ul>\n</li>\n<li>账号状态<ul>\n<li>AT/ST失效</li>\n<li>退出账号</li>\n<li>销户</li>\n</ul>\n</li>\n<li>网络状态<ul>\n<li>网络类型</li>\n<li>网络切换</li>\n<li>网络质量</li>\n</ul>\n</li>\n<li>服务器状态<ul>\n<li>密钥服务</li>\n<li>域名解析服务</li>\n<li>数据库服务</li>\n<li>鉴权服务</li>\n<li>存储平台</li>\n<li>负载平衡</li>\n</ul>\n</li>\n<li>用户操作<ul>\n<li>重试<ul>\n<li>连续操作</li>\n<li>反复取消/重试</li>\n<li>反复暂停/重试</li>\n<li>失败/重试</li>\n</ul>\n</li>\n<li>缓存</li>\n<li>进程</li>\n<li>本地数据库清理</li>\n<li>权限修改</li>\n<li>时间修改</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>"},{"title":"sublime插件安装","date":"2020-10-07T16:18:18.000Z","_content":"\n#### 如何安装插件详见：https://packagecontrol.io/installation\n\n#### OmniMarkupPreviwer\n实时在浏览器中预览markdown。快捷键如下：\nCtrl+Alt+O: Preview Markup in Browser.\nCtrl+Alt+X: Export Markup as HTML.\nCtrl+Alt+C: Copy Markup as HTML\n\n<!--more-->\n#### TableEditor\n\n|         操作         |      快捷键      |                         备注                         |\n|----------------------|------------------|------------------------------------------------------|\n| 启用                 | ctrl + shift + p | Table Editor: Enable for current syntax <br>or view  |\n| 禁用                 | ctrl + shift + p | Table Editor: Disable for current syntax <br>or view |\n| 快速建表             | ctrl + k, Enter  | 要先输入表的第一行                                   |\n| 跳转到下一列的单元格 | Tab              | shift + Tab跳转到上一个单元格                        |\n| 跳转到下一行的单元格 | Enter            |                                                      |\n| 添加一列             | alt + shift + 右 | 在光标所在列左侧插入一列                             |\n| 删除一列             | alt + shift + 左 | 删除光标所在列                                       |\n| 交换列位置           | alt + 左或右     | 将光标所在列和左或右侧列交换位置                     |\n| 添加一行             | alt + shift + 下 | 在光标所在行上方插入一行                             |\n| 删除一行             | alt + shift + 上 | 删除光标所在行                                       |\n| 交换行位置           | alt + 左或右     | 将光标所在行和上或下侧行交换位置                     |\n\t\n参考：\nhttps://www.jianshu.com/p/aa30cc25c91b\nhttps://segmentfault.com/a/1190000007935021","source":"_posts/13_sublimetext插件安装.md","raw":"---\ntitle: sublime插件安装\ndate: 2020-10-08 00:18:18\ntags: 工具\n---\n\n#### 如何安装插件详见：https://packagecontrol.io/installation\n\n#### OmniMarkupPreviwer\n实时在浏览器中预览markdown。快捷键如下：\nCtrl+Alt+O: Preview Markup in Browser.\nCtrl+Alt+X: Export Markup as HTML.\nCtrl+Alt+C: Copy Markup as HTML\n\n<!--more-->\n#### TableEditor\n\n|         操作         |      快捷键      |                         备注                         |\n|----------------------|------------------|------------------------------------------------------|\n| 启用                 | ctrl + shift + p | Table Editor: Enable for current syntax <br>or view  |\n| 禁用                 | ctrl + shift + p | Table Editor: Disable for current syntax <br>or view |\n| 快速建表             | ctrl + k, Enter  | 要先输入表的第一行                                   |\n| 跳转到下一列的单元格 | Tab              | shift + Tab跳转到上一个单元格                        |\n| 跳转到下一行的单元格 | Enter            |                                                      |\n| 添加一列             | alt + shift + 右 | 在光标所在列左侧插入一列                             |\n| 删除一列             | alt + shift + 左 | 删除光标所在列                                       |\n| 交换列位置           | alt + 左或右     | 将光标所在列和左或右侧列交换位置                     |\n| 添加一行             | alt + shift + 下 | 在光标所在行上方插入一行                             |\n| 删除一行             | alt + shift + 上 | 删除光标所在行                                       |\n| 交换行位置           | alt + 左或右     | 将光标所在行和上或下侧行交换位置                     |\n\t\n参考：\nhttps://www.jianshu.com/p/aa30cc25c91b\nhttps://segmentfault.com/a/1190000007935021","slug":"13_sublimetext插件安装","published":1,"updated":"2023-12-25T09:50:47.877Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqkrbsxu00127vjkwr7473hi","content":"<h4 id=\"如何安装插件详见：https-packagecontrol-io-installation\"><a href=\"#如何安装插件详见：https-packagecontrol-io-installation\" class=\"headerlink\" title=\"如何安装插件详见：https://packagecontrol.io/installation\"></a>如何安装插件详见：<a href=\"https://packagecontrol.io/installation\">https://packagecontrol.io/installation</a></h4><h4 id=\"OmniMarkupPreviwer\"><a href=\"#OmniMarkupPreviwer\" class=\"headerlink\" title=\"OmniMarkupPreviwer\"></a>OmniMarkupPreviwer</h4><p>实时在浏览器中预览markdown。快捷键如下：<br>Ctrl+Alt+O: Preview Markup in Browser.<br>Ctrl+Alt+X: Export Markup as HTML.<br>Ctrl+Alt+C: Copy Markup as HTML</p>\n<a id=\"more\"></a>\n<h4 id=\"TableEditor\"><a href=\"#TableEditor\" class=\"headerlink\" title=\"TableEditor\"></a>TableEditor</h4><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>快捷键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Enable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>禁用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Disable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>快速建表</td>\n<td>ctrl + k, Enter</td>\n<td>要先输入表的第一行</td>\n</tr>\n<tr>\n<td>跳转到下一列的单元格</td>\n<td>Tab</td>\n<td>shift + Tab跳转到上一个单元格</td>\n</tr>\n<tr>\n<td>跳转到下一行的单元格</td>\n<td>Enter</td>\n<td></td>\n</tr>\n<tr>\n<td>添加一列</td>\n<td>alt + shift + 右</td>\n<td>在光标所在列左侧插入一列</td>\n</tr>\n<tr>\n<td>删除一列</td>\n<td>alt + shift + 左</td>\n<td>删除光标所在列</td>\n</tr>\n<tr>\n<td>交换列位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在列和左或右侧列交换位置</td>\n</tr>\n<tr>\n<td>添加一行</td>\n<td>alt + shift + 下</td>\n<td>在光标所在行上方插入一行</td>\n</tr>\n<tr>\n<td>删除一行</td>\n<td>alt + shift + 上</td>\n<td>删除光标所在行</td>\n</tr>\n<tr>\n<td>交换行位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在行和上或下侧行交换位置</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<br><a href=\"https://www.jianshu.com/p/aa30cc25c91b\">https://www.jianshu.com/p/aa30cc25c91b</a><br><a href=\"https://segmentfault.com/a/1190000007935021\">https://segmentfault.com/a/1190000007935021</a></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"如何安装插件详见：https-packagecontrol-io-installation\"><a href=\"#如何安装插件详见：https-packagecontrol-io-installation\" class=\"headerlink\" title=\"如何安装插件详见：https://packagecontrol.io/installation\"></a>如何安装插件详见：<a href=\"https://packagecontrol.io/installation\">https://packagecontrol.io/installation</a></h4><h4 id=\"OmniMarkupPreviwer\"><a href=\"#OmniMarkupPreviwer\" class=\"headerlink\" title=\"OmniMarkupPreviwer\"></a>OmniMarkupPreviwer</h4><p>实时在浏览器中预览markdown。快捷键如下：<br>Ctrl+Alt+O: Preview Markup in Browser.<br>Ctrl+Alt+X: Export Markup as HTML.<br>Ctrl+Alt+C: Copy Markup as HTML</p>","more":"<h4 id=\"TableEditor\"><a href=\"#TableEditor\" class=\"headerlink\" title=\"TableEditor\"></a>TableEditor</h4><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>快捷键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Enable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>禁用</td>\n<td>ctrl + shift + p</td>\n<td>Table Editor: Disable for current syntax <br>or view</td>\n</tr>\n<tr>\n<td>快速建表</td>\n<td>ctrl + k, Enter</td>\n<td>要先输入表的第一行</td>\n</tr>\n<tr>\n<td>跳转到下一列的单元格</td>\n<td>Tab</td>\n<td>shift + Tab跳转到上一个单元格</td>\n</tr>\n<tr>\n<td>跳转到下一行的单元格</td>\n<td>Enter</td>\n<td></td>\n</tr>\n<tr>\n<td>添加一列</td>\n<td>alt + shift + 右</td>\n<td>在光标所在列左侧插入一列</td>\n</tr>\n<tr>\n<td>删除一列</td>\n<td>alt + shift + 左</td>\n<td>删除光标所在列</td>\n</tr>\n<tr>\n<td>交换列位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在列和左或右侧列交换位置</td>\n</tr>\n<tr>\n<td>添加一行</td>\n<td>alt + shift + 下</td>\n<td>在光标所在行上方插入一行</td>\n</tr>\n<tr>\n<td>删除一行</td>\n<td>alt + shift + 上</td>\n<td>删除光标所在行</td>\n</tr>\n<tr>\n<td>交换行位置</td>\n<td>alt + 左或右</td>\n<td>将光标所在行和上或下侧行交换位置</td>\n</tr>\n</tbody>\n</table>\n<p>参考：<br><a href=\"https://www.jianshu.com/p/aa30cc25c91b\">https://www.jianshu.com/p/aa30cc25c91b</a><br><a href=\"https://segmentfault.com/a/1190000007935021\">https://segmentfault.com/a/1190000007935021</a></p>"},{"title":"测试工作的一些总结","date":"2019-07-07T12:32:18.000Z","_content":"\n#### 手工测试\n\n##### 测试流程规范\n1. 产品从立项到发布要经历的流程\n\n    1. 立项流程：收集需求（用户、销售、领导等）->立项（产品经理）->决策（领导）\n    2. 设计阶段：需求澄清（产品经理）->产品设计（UI、架构）->开发story->测试方案\n    3. 开发&转测：进度把控-风险评估\n    4. 客户验收：结项\n\n2. 测试的职责\n\n    1. 输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）\n    2. 执行测试用例\n    3. 缺陷跟踪\n    4. 输出测试报告、测试总结等\n\n##### 测试人员需要掌握的技能\n1. 产品从立项到发布的各个流程中，测试需要关注的地方\n\n   1. 立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理\n   2. 设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）\n   3. 测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责\n      1. 测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）\n      2. 测试用例要按照功能测试设计将操作步骤、检查点逐一细化\n      2. 测试执行要覆盖到测试用例的每一个测试步骤和检查点\n      3. 缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例\n\n参考：[怎样制定一个合格的测试方案](https://blog.csdn.net/alice_tl/article/details/80218342)\n\n<!--more-->\n\n#### 自动化测试\n1. 常见的自动化测试框架\n\n    1. Appium和Selenium了解\n    2. 开源的自动化框架上手\n\n2. 自动化脚本编写语言\n\n    java和python\n\n3. 自动化构建的思路\n    \n    1. 从脚本到aw，再到框架\n    2. 自动构建任务，远程执行\n    3. 测试报告的生成\n\n4. 从手工用例到自动化用例转化的注意点\n\n    1. 自动化用例覆盖范围的评审\n    2. 自动化用例执行失败用例的定位\n\n#### 服务端压测怎么做\nhttps://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\n\n#### 关于兼容性测试\n兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。\n\n\n#### 关于测试的一些想法\n我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？\n\n看到一个个很好的建议：\n\n1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力\n\n2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿\n\n3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中\n\n4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试\n\n\n","source":"_posts/14_测试工作的一些总结.md","raw":"---\ntitle: 测试工作的一些总结\ndate: 2019-07-07 20:32:18\ntags: 总结,android\n---\n\n#### 手工测试\n\n##### 测试流程规范\n1. 产品从立项到发布要经历的流程\n\n    1. 立项流程：收集需求（用户、销售、领导等）->立项（产品经理）->决策（领导）\n    2. 设计阶段：需求澄清（产品经理）->产品设计（UI、架构）->开发story->测试方案\n    3. 开发&转测：进度把控-风险评估\n    4. 客户验收：结项\n\n2. 测试的职责\n\n    1. 输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）\n    2. 执行测试用例\n    3. 缺陷跟踪\n    4. 输出测试报告、测试总结等\n\n##### 测试人员需要掌握的技能\n1. 产品从立项到发布的各个流程中，测试需要关注的地方\n\n   1. 立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理\n   2. 设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）\n   3. 测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责\n      1. 测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）\n      2. 测试用例要按照功能测试设计将操作步骤、检查点逐一细化\n      2. 测试执行要覆盖到测试用例的每一个测试步骤和检查点\n      3. 缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例\n\n参考：[怎样制定一个合格的测试方案](https://blog.csdn.net/alice_tl/article/details/80218342)\n\n<!--more-->\n\n#### 自动化测试\n1. 常见的自动化测试框架\n\n    1. Appium和Selenium了解\n    2. 开源的自动化框架上手\n\n2. 自动化脚本编写语言\n\n    java和python\n\n3. 自动化构建的思路\n    \n    1. 从脚本到aw，再到框架\n    2. 自动构建任务，远程执行\n    3. 测试报告的生成\n\n4. 从手工用例到自动化用例转化的注意点\n\n    1. 自动化用例覆盖范围的评审\n    2. 自动化用例执行失败用例的定位\n\n#### 服务端压测怎么做\nhttps://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\n\n#### 关于兼容性测试\n兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。\n\n\n#### 关于测试的一些想法\n我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？\n\n看到一个个很好的建议：\n\n1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力\n\n2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿\n\n3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中\n\n4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试\n\n\n","slug":"14_测试工作的一些总结","published":1,"updated":"2024-01-01T10:01:57.323Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm5gvo7hy0000h22zd5xkoxky","content":"<h4 id=\"手工测试\"><a href=\"#手工测试\" class=\"headerlink\" title=\"手工测试\"></a>手工测试</h4><h5 id=\"测试流程规范\"><a href=\"#测试流程规范\" class=\"headerlink\" title=\"测试流程规范\"></a>测试流程规范</h5><ol>\n<li><p>产品从立项到发布要经历的流程</p>\n<ol>\n<li>立项流程：收集需求（用户、销售、领导等）-&gt;立项（产品经理）-&gt;决策（领导）</li>\n<li>设计阶段：需求澄清（产品经理）-&gt;产品设计（UI、架构）-&gt;开发story-&gt;测试方案</li>\n<li>开发&amp;转测：进度把控-风险评估</li>\n<li>客户验收：结项</li>\n</ol>\n</li>\n<li><p>测试的职责</p>\n<ol>\n<li>输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）</li>\n<li>执行测试用例</li>\n<li>缺陷跟踪</li>\n<li>输出测试报告、测试总结等</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"测试人员需要掌握的技能\"><a href=\"#测试人员需要掌握的技能\" class=\"headerlink\" title=\"测试人员需要掌握的技能\"></a>测试人员需要掌握的技能</h5><ol>\n<li><p>产品从立项到发布的各个流程中，测试需要关注的地方</p>\n<ol>\n<li>立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理</li>\n<li>设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）</li>\n<li>测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责<ol>\n<li>测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）</li>\n<li>测试用例要按照功能测试设计将操作步骤、检查点逐一细化</li>\n<li>测试执行要覆盖到测试用例的每一个测试步骤和检查点</li>\n<li>缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>参考：<a href=\"https://blog.csdn.net/alice_tl/article/details/80218342\">怎样制定一个合格的测试方案</a></p>\n<a id=\"more\"></a>\n<h4 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h4><ol>\n<li><p>常见的自动化测试框架</p>\n<ol>\n<li>Appium和Selenium了解</li>\n<li>开源的自动化框架上手</li>\n</ol>\n</li>\n<li><p>自动化脚本编写语言</p>\n<p> java和python</p>\n</li>\n<li><p>自动化构建的思路</p>\n<ol>\n<li>从脚本到aw，再到框架</li>\n<li>自动构建任务，远程执行</li>\n<li>测试报告的生成</li>\n</ol>\n</li>\n<li><p>从手工用例到自动化用例转化的注意点</p>\n<ol>\n<li>自动化用例覆盖范围的评审</li>\n<li>自动化用例执行失败用例的定位</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"服务端压测怎么做\"><a href=\"#服务端压测怎么做\" class=\"headerlink\" title=\"服务端压测怎么做\"></a>服务端压测怎么做</h4><p><a href=\"https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\">https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/</a></p>\n<h4 id=\"关于兼容性测试\"><a href=\"#关于兼容性测试\" class=\"headerlink\" title=\"关于兼容性测试\"></a>关于兼容性测试</h4><p>兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。</p>\n<h4 id=\"关于测试的一些想法\"><a href=\"#关于测试的一些想法\" class=\"headerlink\" title=\"关于测试的一些想法\"></a>关于测试的一些想法</h4><p>我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？</p>\n<p>看到一个个很好的建议：</p>\n<p>1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力</p>\n<p>2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿</p>\n<p>3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中</p>\n<p>4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"<h4 id=\"手工测试\"><a href=\"#手工测试\" class=\"headerlink\" title=\"手工测试\"></a>手工测试</h4><h5 id=\"测试流程规范\"><a href=\"#测试流程规范\" class=\"headerlink\" title=\"测试流程规范\"></a>测试流程规范</h5><ol>\n<li><p>产品从立项到发布要经历的流程</p>\n<ol>\n<li>立项流程：收集需求（用户、销售、领导等）-&gt;立项（产品经理）-&gt;决策（领导）</li>\n<li>设计阶段：需求澄清（产品经理）-&gt;产品设计（UI、架构）-&gt;开发story-&gt;测试方案</li>\n<li>开发&amp;转测：进度把控-风险评估</li>\n<li>客户验收：结项</li>\n</ol>\n</li>\n<li><p>测试的职责</p>\n<ol>\n<li>输出测试设计和测试用例并由相关人员一起评审（BA，开发，项目经理，测试）</li>\n<li>执行测试用例</li>\n<li>缺陷跟踪</li>\n<li>输出测试报告、测试总结等</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"测试人员需要掌握的技能\"><a href=\"#测试人员需要掌握的技能\" class=\"headerlink\" title=\"测试人员需要掌握的技能\"></a>测试人员需要掌握的技能</h5><ol>\n<li><p>产品从立项到发布的各个流程中，测试需要关注的地方</p>\n<ol>\n<li>立项流程中，收集需求这个环节，测试在执行用例期间遇到非bug类的体验问题要本地记录，并汇总反馈给产品经理</li>\n<li>设计阶段的评审环节，测试要多从用户体验的角度提出自己的观点和疑问（测试比开发更接近用户，比销售更熟悉产品的实现）</li>\n<li>测试方案、测试用例、测试执行、缺陷跟踪是测试的核心职责<ol>\n<li>测试方案要覆盖全面（测试目的、测试准备、测试分工、测试范围、测试风险）</li>\n<li>测试用例要按照功能测试设计将操作步骤、检查点逐一细化</li>\n<li>测试执行要覆盖到测试用例的每一个测试步骤和检查点</li>\n<li>缺陷跟踪要在回归问题场景的基础上，弄清bug的根因和修改方案，回归测试要考虑到是否需要补充测试方案和测试用例</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>参考：<a href=\"https://blog.csdn.net/alice_tl/article/details/80218342\">怎样制定一个合格的测试方案</a></p>","more":"<h4 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h4><ol>\n<li><p>常见的自动化测试框架</p>\n<ol>\n<li>Appium和Selenium了解</li>\n<li>开源的自动化框架上手</li>\n</ol>\n</li>\n<li><p>自动化脚本编写语言</p>\n<p> java和python</p>\n</li>\n<li><p>自动化构建的思路</p>\n<ol>\n<li>从脚本到aw，再到框架</li>\n<li>自动构建任务，远程执行</li>\n<li>测试报告的生成</li>\n</ol>\n</li>\n<li><p>从手工用例到自动化用例转化的注意点</p>\n<ol>\n<li>自动化用例覆盖范围的评审</li>\n<li>自动化用例执行失败用例的定位</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"服务端压测怎么做\"><a href=\"#服务端压测怎么做\" class=\"headerlink\" title=\"服务端压测怎么做\"></a>服务端压测怎么做</h4><p><a href=\"https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/\">https://zingphoy.github.io/2020/04/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8E%8B%E6%B5%8B%E6%80%8E%E4%B9%88%E5%81%9A/</a></p>\n<h4 id=\"关于兼容性测试\"><a href=\"#关于兼容性测试\" class=\"headerlink\" title=\"关于兼容性测试\"></a>关于兼容性测试</h4><p>兼容性测试做筛选时，基于的不是整体市场份额，而是线上埋点分析得来的用户机型分布。</p>\n<h4 id=\"关于测试的一些想法\"><a href=\"#关于测试的一些想法\" class=\"headerlink\" title=\"关于测试的一些想法\"></a>关于测试的一些想法</h4><p>我们要回归到测试的本质上面来，测试是干什么的？这个职业存在是为了解决什么的？其实，你停下来仔细想想，无外乎在做的就是两个方面，提升质量和增加效率，对吧？那你有没有仔细想过，这两个方面怎么来提升？</p>\n<p>看到一个个很好的建议：</p>\n<p>1、要学会数据分析，通过数据分析来发现问题，比方说缺陷分布吧，这些缺陷覆盖了哪些功能模块？覆盖了哪些业务？发生在什么时间段？是哪些测试用例发现的？这些测试用例有没有什么共通点？是偶然发生的？等等，当你数据分析的越完备的时候，你就能发现问题的本质是什么，你就能提高你自己的个人能力</p>\n<p>2、要经常停下来对自己进行复盘，对你自己的能力进行总结，写出来、画出来、讲出来，你能清晰的知道你强在哪儿、差在哪儿</p>\n<p>3、增加效率的方式有很多很多，哪怕一个命令行、一个小脚本，都可以增加效率，不要深陷其中</p>\n<p>4、测试不仅仅是点点点、或者会用某个工具、或者写几行代码，更多的是，你要能分析问题、发现问题、定位问题，如果你测试一个系统，对他的业务架构、技术架构、部署架构、数据架构等等都不了解，那我不认为你是一个合格的测试</p>"},{"title":"读书笔记收集","date":"2023-01-01T12:32:18.000Z","_content":"","source":"_posts/16_读书笔记收集.md","raw":"---\ntitle: 读书笔记收集\ndate: 2023-01-01 20:32:18\ntags: 总结\n---","slug":"16_读书笔记收集","published":1,"updated":"2025-01-03T15:06:12.949Z","_id":"cm5gvo7i00001h22zljbugem5","comments":1,"layout":"post","photos":[],"link":"","content":"<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":""},{"title":"开发相关内容记录","date":"2023-01-01T12:32:18.000Z","_content":"\nsql 优化\nhttps://www.51cto.com/article/623584.html\n\n\nMySQL索引学习\nhttps://juejin.cn/post/7047433474264793095\n\nredis 详解  \nhttps://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\n","source":"_posts/15_开发相关内容记录.md","raw":"---\ntitle: 开发相关内容记录\ndate: 2023-01-01 20:32:18\ntags: 总结\n---\n\nsql 优化\nhttps://www.51cto.com/article/623584.html\n\n\nMySQL索引学习\nhttps://juejin.cn/post/7047433474264793095\n\nredis 详解  \nhttps://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\n","slug":"15_开发相关内容记录","published":1,"updated":"2024-01-01T10:02:05.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm5gvo7i00003h22znzodgxft","content":"<p>sql 优化<br><a href=\"https://www.51cto.com/article/623584.html\">https://www.51cto.com/article/623584.html</a></p>\n<p>MySQL索引学习<br><a href=\"https://juejin.cn/post/7047433474264793095\">https://juejin.cn/post/7047433474264793095</a></p>\n<p>redis 详解<br><a href=\"https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\">https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ</a></p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<p>sql 优化<br><a href=\"https://www.51cto.com/article/623584.html\">https://www.51cto.com/article/623584.html</a></p>\n<p>MySQL索引学习<br><a href=\"https://juejin.cn/post/7047433474264793095\">https://juejin.cn/post/7047433474264793095</a></p>\n<p>redis 详解<br><a href=\"https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ\">https://mp.weixin.qq.com/s/kILz0SBtOpGTS8fZgsUfcQ</a></p>\n"},{"title":"工具类项目需求文档","date":"2023-01-01T12:32:18.000Z","_content":"\n# 工具类项目需求文档\n\n## 一、项目概述\n\n开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。\n\n## 二、功能需求\n\n### 1. 基础CRUD功能\n- 用户管理模块\n  - 用户信息的增删改查\n  - 用户登录注册\n  - 角色权限管理\n  - 部门组织管理\n  \n### 2. 文件处理功能\n- 文件上传下载\n  - 大文件断点续传\n  - 文件秒传功能\n  - 文件存储管理\n- Excel处理\n  - Excel模板导入\n  - 数据导出Excel\n  - 大数据量Excel处理\n- PDF处理\n  - PDF生成\n  - PDF模板管理\n  - PDF水印添加\n\n### 3. 定时任务模块\n- 定时任务管理\n  - 定时数据清理\n  - 定时报表生成\n  - 任务执行状态监控\n- 任务配置\n  - CRON表达式配置\n  - 任务参数设置\n  - 任务执行日志\n\n### 4. 消息处理模块\n- 消息管理\n  - 消息发送与消费\n  - 消息重试机制\n  - 死信队列处理\n- 消息监控\n  - 消息积压监控\n  - 消息处理统计\n  - 异常消息处理\n\n### 5. 异步任务处理\n- 任务执行\n  - 异步任务执行\n  - 并发任务控制\n  - 任务进度跟踪\n- 任务管理\n  - 任务优先级\n  - 任务超时处理\n  - 任务结果回调\n\n### 6. 系统监控\n- 日志管理\n  - 操作日志记录\n  - 异常日志记录\n  - 日志查询分析\n- 性能监控\n  - 系统资源监控\n  - 接口响应时间\n  - JVM监控\n- 统计分析\n  - API调用统计\n  - 用户行为分析\n  - 业务指标统计\n\n## 三、技术栈选型\n\n### 1. 基础框架\n- Spring Boot (应用框架)\n- Spring Cloud (微服务框架)\n- Maven (项目管理)\n\n### 2. 数据存储\n- MySQL (关系型数据库)\n- MongoDB (文档存储)\n- Redis (缓存)\n\n### 3. 消息队列\n- RabbitMQ (消息中间件)\n- Kafka (日志收集)\n\n### 4. 任务调度\n- XXL-Job (分布式任务调度)\n- Quartz (定时任务)\n\n### 5. 其他工具\n- EasyExcel (Excel处理)\n- iText (PDF处理)\n- MinIO (对象存储)\n\n## 四、项目结构\n\n```\nproject-root/\n├── common/                 # 公共模块\n│   ├── common-core/       # 核心工具\n│   ├── common-redis/      # Redis工具\n│   └── common-log/        # 日志工具\n├── system/                # 系统模块\n│   ├── sys-api/          # 接口定义\n│   └── sys-service/      # 服务实现\n├── message/              # 消息模块\n├── task/                 # 任务模块\n└── monitor/             # 监控模块\n```\n\n## 五、技术实现要点\n\n### 1. 数据库设计示例\n\n```sql\n-- 用户表\nCREATE TABLE sys_user (\n    id BIGINT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100),\n    status TINYINT,\n    create_time DATETIME,\n    update_time DATETIME\n);\n```\n\n### 2. 核心配置示例\n\n```yaml\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/demo\n    username: root\n    password: root\n  redis:\n    host: localhost\n    port: 6379\n```\n\n### 3. 关键代码实现示例\n\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n    @Autowired\n    private UserMapper userMapper;\n    \n    @Override\n    public UserDTO createUser(UserCreateReq req) {\n        // 参数校验\n        // 业务处理\n        // 返回结果\n    }\n}\n```\n\n## 六、项目实施计划\n\n### 第一阶段：基础框架搭建 (2周)\n- [ ] 项目结构创建\n- [ ] 基础配置完成\n- [ ] 数据库设计\n\n### 第二阶段：核心功能开发 (4周)\n- [ ] 用户管理模块\n- [ ] 文件处理功能\n- [ ] 基础CRUD实现\n\n### 第三阶段：高级特性实现 (3周)\n- [ ] 消息队列集成\n- [ ] 定时任务开发\n- [ ] 异步处理实现\n\n### 第四阶段：系统优化 (3周)\n- [ ] 性能优化\n- [ ] 单元测试\n- [ ] 文档完善\n\n## 七、注意事项\n\n### 1. 代码规范\n- 遵循阿里巴巴Java开发规范\n- 统一的命名规范\n- 完善的注释文档\n\n### 2. 性能考虑\n- 合理使用缓存\n- 数据库索引优化\n- 并发控制\n- 连接池管理\n- 大数据量处理\n\n### 3. 安全考虑\n- 数据加密传输\n- 敏感信息加密\n- 权限精细控制\n- SQL注入防护\n- XSS防护\n- CSRF防护\n\n### 4. 可维护性\n- 模块化设计\n- 接口版本控制\n- 统一异常处理\n- 统一响应格式\n- 完善的日志记录\n\n## 八、项目验收标准\n\n1. 功能完整性\n- 所有功能模块测试通过\n- 接口文档完善\n- 测试用例覆盖率>80%\n\n2. 性能指标\n- 接口响应时间<500ms\n- 并发用户数>1000\n- CPU使用率<70%\n\n3. 代码质量\n- 代码规范遵循度>90%\n- 代码重复率<5%\n- 测试覆盖率>80%\n\n","source":"_posts/17_工具类项目需求文档.md","raw":"---\ntitle: 工具类项目需求文档\ndate: 2023-01-01 20:32:18\ntags: 总结\n---\n\n# 工具类项目需求文档\n\n## 一、项目概述\n\n开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。\n\n## 二、功能需求\n\n### 1. 基础CRUD功能\n- 用户管理模块\n  - 用户信息的增删改查\n  - 用户登录注册\n  - 角色权限管理\n  - 部门组织管理\n  \n### 2. 文件处理功能\n- 文件上传下载\n  - 大文件断点续传\n  - 文件秒传功能\n  - 文件存储管理\n- Excel处理\n  - Excel模板导入\n  - 数据导出Excel\n  - 大数据量Excel处理\n- PDF处理\n  - PDF生成\n  - PDF模板管理\n  - PDF水印添加\n\n### 3. 定时任务模块\n- 定时任务管理\n  - 定时数据清理\n  - 定时报表生成\n  - 任务执行状态监控\n- 任务配置\n  - CRON表达式配置\n  - 任务参数设置\n  - 任务执行日志\n\n### 4. 消息处理模块\n- 消息管理\n  - 消息发送与消费\n  - 消息重试机制\n  - 死信队列处理\n- 消息监控\n  - 消息积压监控\n  - 消息处理统计\n  - 异常消息处理\n\n### 5. 异步任务处理\n- 任务执行\n  - 异步任务执行\n  - 并发任务控制\n  - 任务进度跟踪\n- 任务管理\n  - 任务优先级\n  - 任务超时处理\n  - 任务结果回调\n\n### 6. 系统监控\n- 日志管理\n  - 操作日志记录\n  - 异常日志记录\n  - 日志查询分析\n- 性能监控\n  - 系统资源监控\n  - 接口响应时间\n  - JVM监控\n- 统计分析\n  - API调用统计\n  - 用户行为分析\n  - 业务指标统计\n\n## 三、技术栈选型\n\n### 1. 基础框架\n- Spring Boot (应用框架)\n- Spring Cloud (微服务框架)\n- Maven (项目管理)\n\n### 2. 数据存储\n- MySQL (关系型数据库)\n- MongoDB (文档存储)\n- Redis (缓存)\n\n### 3. 消息队列\n- RabbitMQ (消息中间件)\n- Kafka (日志收集)\n\n### 4. 任务调度\n- XXL-Job (分布式任务调度)\n- Quartz (定时任务)\n\n### 5. 其他工具\n- EasyExcel (Excel处理)\n- iText (PDF处理)\n- MinIO (对象存储)\n\n## 四、项目结构\n\n```\nproject-root/\n├── common/                 # 公共模块\n│   ├── common-core/       # 核心工具\n│   ├── common-redis/      # Redis工具\n│   └── common-log/        # 日志工具\n├── system/                # 系统模块\n│   ├── sys-api/          # 接口定义\n│   └── sys-service/      # 服务实现\n├── message/              # 消息模块\n├── task/                 # 任务模块\n└── monitor/             # 监控模块\n```\n\n## 五、技术实现要点\n\n### 1. 数据库设计示例\n\n```sql\n-- 用户表\nCREATE TABLE sys_user (\n    id BIGINT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100),\n    status TINYINT,\n    create_time DATETIME,\n    update_time DATETIME\n);\n```\n\n### 2. 核心配置示例\n\n```yaml\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/demo\n    username: root\n    password: root\n  redis:\n    host: localhost\n    port: 6379\n```\n\n### 3. 关键代码实现示例\n\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n    @Autowired\n    private UserMapper userMapper;\n    \n    @Override\n    public UserDTO createUser(UserCreateReq req) {\n        // 参数校验\n        // 业务处理\n        // 返回结果\n    }\n}\n```\n\n## 六、项目实施计划\n\n### 第一阶段：基础框架搭建 (2周)\n- [ ] 项目结构创建\n- [ ] 基础配置完成\n- [ ] 数据库设计\n\n### 第二阶段：核心功能开发 (4周)\n- [ ] 用户管理模块\n- [ ] 文件处理功能\n- [ ] 基础CRUD实现\n\n### 第三阶段：高级特性实现 (3周)\n- [ ] 消息队列集成\n- [ ] 定时任务开发\n- [ ] 异步处理实现\n\n### 第四阶段：系统优化 (3周)\n- [ ] 性能优化\n- [ ] 单元测试\n- [ ] 文档完善\n\n## 七、注意事项\n\n### 1. 代码规范\n- 遵循阿里巴巴Java开发规范\n- 统一的命名规范\n- 完善的注释文档\n\n### 2. 性能考虑\n- 合理使用缓存\n- 数据库索引优化\n- 并发控制\n- 连接池管理\n- 大数据量处理\n\n### 3. 安全考虑\n- 数据加密传输\n- 敏感信息加密\n- 权限精细控制\n- SQL注入防护\n- XSS防护\n- CSRF防护\n\n### 4. 可维护性\n- 模块化设计\n- 接口版本控制\n- 统一异常处理\n- 统一响应格式\n- 完善的日志记录\n\n## 八、项目验收标准\n\n1. 功能完整性\n- 所有功能模块测试通过\n- 接口文档完善\n- 测试用例覆盖率>80%\n\n2. 性能指标\n- 接口响应时间<500ms\n- 并发用户数>1000\n- CPU使用率<70%\n\n3. 代码质量\n- 代码规范遵循度>90%\n- 代码重复率<5%\n- 测试覆盖率>80%\n\n","slug":"17_工具类项目需求文档","published":1,"updated":"2025-01-03T15:38:17.440Z","_id":"cm5gws8r80006h22zj8jsvuut","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"工具类项目需求文档\"><a href=\"#工具类项目需求文档\" class=\"headerlink\" title=\"工具类项目需求文档\"></a>工具类项目需求文档</h1><h2 id=\"一、项目概述\"><a href=\"#一、项目概述\" class=\"headerlink\" title=\"一、项目概述\"></a>一、项目概述</h2><p>开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。</p>\n<h2 id=\"二、功能需求\"><a href=\"#二、功能需求\" class=\"headerlink\" title=\"二、功能需求\"></a>二、功能需求</h2><h3 id=\"1-基础CRUD功能\"><a href=\"#1-基础CRUD功能\" class=\"headerlink\" title=\"1. 基础CRUD功能\"></a>1. 基础CRUD功能</h3><ul>\n<li>用户管理模块<ul>\n<li>用户信息的增删改查</li>\n<li>用户登录注册</li>\n<li>角色权限管理</li>\n<li>部门组织管理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-文件处理功能\"><a href=\"#2-文件处理功能\" class=\"headerlink\" title=\"2. 文件处理功能\"></a>2. 文件处理功能</h3><ul>\n<li>文件上传下载<ul>\n<li>大文件断点续传</li>\n<li>文件秒传功能</li>\n<li>文件存储管理</li>\n</ul>\n</li>\n<li>Excel处理<ul>\n<li>Excel模板导入</li>\n<li>数据导出Excel</li>\n<li>大数据量Excel处理</li>\n</ul>\n</li>\n<li>PDF处理<ul>\n<li>PDF生成</li>\n<li>PDF模板管理</li>\n<li>PDF水印添加</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-定时任务模块\"><a href=\"#3-定时任务模块\" class=\"headerlink\" title=\"3. 定时任务模块\"></a>3. 定时任务模块</h3><ul>\n<li>定时任务管理<ul>\n<li>定时数据清理</li>\n<li>定时报表生成</li>\n<li>任务执行状态监控</li>\n</ul>\n</li>\n<li>任务配置<ul>\n<li>CRON表达式配置</li>\n<li>任务参数设置</li>\n<li>任务执行日志</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-消息处理模块\"><a href=\"#4-消息处理模块\" class=\"headerlink\" title=\"4. 消息处理模块\"></a>4. 消息处理模块</h3><ul>\n<li>消息管理<ul>\n<li>消息发送与消费</li>\n<li>消息重试机制</li>\n<li>死信队列处理</li>\n</ul>\n</li>\n<li>消息监控<ul>\n<li>消息积压监控</li>\n<li>消息处理统计</li>\n<li>异常消息处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-异步任务处理\"><a href=\"#5-异步任务处理\" class=\"headerlink\" title=\"5. 异步任务处理\"></a>5. 异步任务处理</h3><ul>\n<li>任务执行<ul>\n<li>异步任务执行</li>\n<li>并发任务控制</li>\n<li>任务进度跟踪</li>\n</ul>\n</li>\n<li>任务管理<ul>\n<li>任务优先级</li>\n<li>任务超时处理</li>\n<li>任务结果回调</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-系统监控\"><a href=\"#6-系统监控\" class=\"headerlink\" title=\"6. 系统监控\"></a>6. 系统监控</h3><ul>\n<li>日志管理<ul>\n<li>操作日志记录</li>\n<li>异常日志记录</li>\n<li>日志查询分析</li>\n</ul>\n</li>\n<li>性能监控<ul>\n<li>系统资源监控</li>\n<li>接口响应时间</li>\n<li>JVM监控</li>\n</ul>\n</li>\n<li>统计分析<ul>\n<li>API调用统计</li>\n<li>用户行为分析</li>\n<li>业务指标统计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三、技术栈选型\"><a href=\"#三、技术栈选型\" class=\"headerlink\" title=\"三、技术栈选型\"></a>三、技术栈选型</h2><h3 id=\"1-基础框架\"><a href=\"#1-基础框架\" class=\"headerlink\" title=\"1. 基础框架\"></a>1. 基础框架</h3><ul>\n<li>Spring Boot (应用框架)</li>\n<li>Spring Cloud (微服务框架)</li>\n<li>Maven (项目管理)</li>\n</ul>\n<h3 id=\"2-数据存储\"><a href=\"#2-数据存储\" class=\"headerlink\" title=\"2. 数据存储\"></a>2. 数据存储</h3><ul>\n<li>MySQL (关系型数据库)</li>\n<li>MongoDB (文档存储)</li>\n<li>Redis (缓存)</li>\n</ul>\n<h3 id=\"3-消息队列\"><a href=\"#3-消息队列\" class=\"headerlink\" title=\"3. 消息队列\"></a>3. 消息队列</h3><ul>\n<li>RabbitMQ (消息中间件)</li>\n<li>Kafka (日志收集)</li>\n</ul>\n<h3 id=\"4-任务调度\"><a href=\"#4-任务调度\" class=\"headerlink\" title=\"4. 任务调度\"></a>4. 任务调度</h3><ul>\n<li>XXL-Job (分布式任务调度)</li>\n<li>Quartz (定时任务)</li>\n</ul>\n<h3 id=\"5-其他工具\"><a href=\"#5-其他工具\" class=\"headerlink\" title=\"5. 其他工具\"></a>5. 其他工具</h3><ul>\n<li>EasyExcel (Excel处理)</li>\n<li>iText (PDF处理)</li>\n<li>MinIO (对象存储)</li>\n</ul>\n<h2 id=\"四、项目结构\"><a href=\"#四、项目结构\" class=\"headerlink\" title=\"四、项目结构\"></a>四、项目结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">project-root/</div><div class=\"line\">├── common/                 # 公共模块</div><div class=\"line\">│   ├── common-core/       # 核心工具</div><div class=\"line\">│   ├── common-redis/      # Redis工具</div><div class=\"line\">│   └── common-log/        # 日志工具</div><div class=\"line\">├── system/                # 系统模块</div><div class=\"line\">│   ├── sys-api/          # 接口定义</div><div class=\"line\">│   └── sys-service/      # 服务实现</div><div class=\"line\">├── message/              # 消息模块</div><div class=\"line\">├── task/                 # 任务模块</div><div class=\"line\">└── monitor/             # 监控模块</div></pre></td></tr></table></figure>\n<h2 id=\"五、技术实现要点\"><a href=\"#五、技术实现要点\" class=\"headerlink\" title=\"五、技术实现要点\"></a>五、技术实现要点</h2><h3 id=\"1-数据库设计示例\"><a href=\"#1-数据库设计示例\" class=\"headerlink\" title=\"1. 数据库设计示例\"></a>1. 数据库设计示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">-- 用户表</span></div><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> sys_user (</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">BIGINT</span> PRIMARY <span class=\"keyword\">KEY</span>,</div><div class=\"line\">    username <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">    <span class=\"keyword\">password</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">    email <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>),</div><div class=\"line\">    <span class=\"keyword\">status</span> TINYINT,</div><div class=\"line\">    create_time DATETIME,</div><div class=\"line\">    update_time DATETIME</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h3 id=\"2-核心配置示例\"><a href=\"#2-核心配置示例\" class=\"headerlink\" title=\"2. 核心配置示例\"></a>2. 核心配置示例</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">spring:</span></div><div class=\"line\"><span class=\"attr\">  datasource:</span></div><div class=\"line\"><span class=\"attr\">    url:</span> jdbc:mysql://localhost:<span class=\"number\">3306</span>/demo</div><div class=\"line\"><span class=\"attr\">    username:</span> root</div><div class=\"line\"><span class=\"attr\">    password:</span> root</div><div class=\"line\"><span class=\"attr\">  redis:</span></div><div class=\"line\"><span class=\"attr\">    host:</span> localhost</div><div class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">6379</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-关键代码实现示例\"><a href=\"#3-关键代码实现示例\" class=\"headerlink\" title=\"3. 关键代码实现示例\"></a>3. 关键代码实现示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserDTO <span class=\"title\">createUser</span><span class=\"params\">(UserCreateReq req)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 参数校验</span></div><div class=\"line\">        <span class=\"comment\">// 业务处理</span></div><div class=\"line\">        <span class=\"comment\">// 返回结果</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"六、项目实施计划\"><a href=\"#六、项目实施计划\" class=\"headerlink\" title=\"六、项目实施计划\"></a>六、项目实施计划</h2><h3 id=\"第一阶段：基础框架搭建-2周\"><a href=\"#第一阶段：基础框架搭建-2周\" class=\"headerlink\" title=\"第一阶段：基础框架搭建 (2周)\"></a>第一阶段：基础框架搭建 (2周)</h3><ul>\n<li>[ ] 项目结构创建</li>\n<li>[ ] 基础配置完成</li>\n<li>[ ] 数据库设计</li>\n</ul>\n<h3 id=\"第二阶段：核心功能开发-4周\"><a href=\"#第二阶段：核心功能开发-4周\" class=\"headerlink\" title=\"第二阶段：核心功能开发 (4周)\"></a>第二阶段：核心功能开发 (4周)</h3><ul>\n<li>[ ] 用户管理模块</li>\n<li>[ ] 文件处理功能</li>\n<li>[ ] 基础CRUD实现</li>\n</ul>\n<h3 id=\"第三阶段：高级特性实现-3周\"><a href=\"#第三阶段：高级特性实现-3周\" class=\"headerlink\" title=\"第三阶段：高级特性实现 (3周)\"></a>第三阶段：高级特性实现 (3周)</h3><ul>\n<li>[ ] 消息队列集成</li>\n<li>[ ] 定时任务开发</li>\n<li>[ ] 异步处理实现</li>\n</ul>\n<h3 id=\"第四阶段：系统优化-3周\"><a href=\"#第四阶段：系统优化-3周\" class=\"headerlink\" title=\"第四阶段：系统优化 (3周)\"></a>第四阶段：系统优化 (3周)</h3><ul>\n<li>[ ] 性能优化</li>\n<li>[ ] 单元测试</li>\n<li>[ ] 文档完善</li>\n</ul>\n<h2 id=\"七、注意事项\"><a href=\"#七、注意事项\" class=\"headerlink\" title=\"七、注意事项\"></a>七、注意事项</h2><h3 id=\"1-代码规范\"><a href=\"#1-代码规范\" class=\"headerlink\" title=\"1. 代码规范\"></a>1. 代码规范</h3><ul>\n<li>遵循阿里巴巴Java开发规范</li>\n<li>统一的命名规范</li>\n<li>完善的注释文档</li>\n</ul>\n<h3 id=\"2-性能考虑\"><a href=\"#2-性能考虑\" class=\"headerlink\" title=\"2. 性能考虑\"></a>2. 性能考虑</h3><ul>\n<li>合理使用缓存</li>\n<li>数据库索引优化</li>\n<li>并发控制</li>\n<li>连接池管理</li>\n<li>大数据量处理</li>\n</ul>\n<h3 id=\"3-安全考虑\"><a href=\"#3-安全考虑\" class=\"headerlink\" title=\"3. 安全考虑\"></a>3. 安全考虑</h3><ul>\n<li>数据加密传输</li>\n<li>敏感信息加密</li>\n<li>权限精细控制</li>\n<li>SQL注入防护</li>\n<li>XSS防护</li>\n<li>CSRF防护</li>\n</ul>\n<h3 id=\"4-可维护性\"><a href=\"#4-可维护性\" class=\"headerlink\" title=\"4. 可维护性\"></a>4. 可维护性</h3><ul>\n<li>模块化设计</li>\n<li>接口版本控制</li>\n<li>统一异常处理</li>\n<li>统一响应格式</li>\n<li>完善的日志记录</li>\n</ul>\n<h2 id=\"八、项目验收标准\"><a href=\"#八、项目验收标准\" class=\"headerlink\" title=\"八、项目验收标准\"></a>八、项目验收标准</h2><ol>\n<li>功能完整性</li>\n</ol>\n<ul>\n<li>所有功能模块测试通过</li>\n<li>接口文档完善</li>\n<li>测试用例覆盖率&gt;80%</li>\n</ul>\n<ol>\n<li>性能指标</li>\n</ol>\n<ul>\n<li>接口响应时间&lt;500ms</li>\n<li>并发用户数&gt;1000</li>\n<li>CPU使用率&lt;70%</li>\n</ul>\n<ol>\n<li>代码质量</li>\n</ol>\n<ul>\n<li>代码规范遵循度&gt;90%</li>\n<li>代码重复率&lt;5%</li>\n<li>测试覆盖率&gt;80%</li>\n</ul>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","excerpt":"","more":"<h1 id=\"工具类项目需求文档\"><a href=\"#工具类项目需求文档\" class=\"headerlink\" title=\"工具类项目需求文档\"></a>工具类项目需求文档</h1><h2 id=\"一、项目概述\"><a href=\"#一、项目概述\" class=\"headerlink\" title=\"一、项目概述\"></a>一、项目概述</h2><p>开发一个集成常用功能的工具类项目，展示各种技术栈的最佳实践。该项目旨在提供一个完整的企业级应用开发框架，包含常用功能模块的标准实现。</p>\n<h2 id=\"二、功能需求\"><a href=\"#二、功能需求\" class=\"headerlink\" title=\"二、功能需求\"></a>二、功能需求</h2><h3 id=\"1-基础CRUD功能\"><a href=\"#1-基础CRUD功能\" class=\"headerlink\" title=\"1. 基础CRUD功能\"></a>1. 基础CRUD功能</h3><ul>\n<li>用户管理模块<ul>\n<li>用户信息的增删改查</li>\n<li>用户登录注册</li>\n<li>角色权限管理</li>\n<li>部门组织管理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-文件处理功能\"><a href=\"#2-文件处理功能\" class=\"headerlink\" title=\"2. 文件处理功能\"></a>2. 文件处理功能</h3><ul>\n<li>文件上传下载<ul>\n<li>大文件断点续传</li>\n<li>文件秒传功能</li>\n<li>文件存储管理</li>\n</ul>\n</li>\n<li>Excel处理<ul>\n<li>Excel模板导入</li>\n<li>数据导出Excel</li>\n<li>大数据量Excel处理</li>\n</ul>\n</li>\n<li>PDF处理<ul>\n<li>PDF生成</li>\n<li>PDF模板管理</li>\n<li>PDF水印添加</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-定时任务模块\"><a href=\"#3-定时任务模块\" class=\"headerlink\" title=\"3. 定时任务模块\"></a>3. 定时任务模块</h3><ul>\n<li>定时任务管理<ul>\n<li>定时数据清理</li>\n<li>定时报表生成</li>\n<li>任务执行状态监控</li>\n</ul>\n</li>\n<li>任务配置<ul>\n<li>CRON表达式配置</li>\n<li>任务参数设置</li>\n<li>任务执行日志</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-消息处理模块\"><a href=\"#4-消息处理模块\" class=\"headerlink\" title=\"4. 消息处理模块\"></a>4. 消息处理模块</h3><ul>\n<li>消息管理<ul>\n<li>消息发送与消费</li>\n<li>消息重试机制</li>\n<li>死信队列处理</li>\n</ul>\n</li>\n<li>消息监控<ul>\n<li>消息积压监控</li>\n<li>消息处理统计</li>\n<li>异常消息处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-异步任务处理\"><a href=\"#5-异步任务处理\" class=\"headerlink\" title=\"5. 异步任务处理\"></a>5. 异步任务处理</h3><ul>\n<li>任务执行<ul>\n<li>异步任务执行</li>\n<li>并发任务控制</li>\n<li>任务进度跟踪</li>\n</ul>\n</li>\n<li>任务管理<ul>\n<li>任务优先级</li>\n<li>任务超时处理</li>\n<li>任务结果回调</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-系统监控\"><a href=\"#6-系统监控\" class=\"headerlink\" title=\"6. 系统监控\"></a>6. 系统监控</h3><ul>\n<li>日志管理<ul>\n<li>操作日志记录</li>\n<li>异常日志记录</li>\n<li>日志查询分析</li>\n</ul>\n</li>\n<li>性能监控<ul>\n<li>系统资源监控</li>\n<li>接口响应时间</li>\n<li>JVM监控</li>\n</ul>\n</li>\n<li>统计分析<ul>\n<li>API调用统计</li>\n<li>用户行为分析</li>\n<li>业务指标统计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三、技术栈选型\"><a href=\"#三、技术栈选型\" class=\"headerlink\" title=\"三、技术栈选型\"></a>三、技术栈选型</h2><h3 id=\"1-基础框架\"><a href=\"#1-基础框架\" class=\"headerlink\" title=\"1. 基础框架\"></a>1. 基础框架</h3><ul>\n<li>Spring Boot (应用框架)</li>\n<li>Spring Cloud (微服务框架)</li>\n<li>Maven (项目管理)</li>\n</ul>\n<h3 id=\"2-数据存储\"><a href=\"#2-数据存储\" class=\"headerlink\" title=\"2. 数据存储\"></a>2. 数据存储</h3><ul>\n<li>MySQL (关系型数据库)</li>\n<li>MongoDB (文档存储)</li>\n<li>Redis (缓存)</li>\n</ul>\n<h3 id=\"3-消息队列\"><a href=\"#3-消息队列\" class=\"headerlink\" title=\"3. 消息队列\"></a>3. 消息队列</h3><ul>\n<li>RabbitMQ (消息中间件)</li>\n<li>Kafka (日志收集)</li>\n</ul>\n<h3 id=\"4-任务调度\"><a href=\"#4-任务调度\" class=\"headerlink\" title=\"4. 任务调度\"></a>4. 任务调度</h3><ul>\n<li>XXL-Job (分布式任务调度)</li>\n<li>Quartz (定时任务)</li>\n</ul>\n<h3 id=\"5-其他工具\"><a href=\"#5-其他工具\" class=\"headerlink\" title=\"5. 其他工具\"></a>5. 其他工具</h3><ul>\n<li>EasyExcel (Excel处理)</li>\n<li>iText (PDF处理)</li>\n<li>MinIO (对象存储)</li>\n</ul>\n<h2 id=\"四、项目结构\"><a href=\"#四、项目结构\" class=\"headerlink\" title=\"四、项目结构\"></a>四、项目结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">project-root/</div><div class=\"line\">├── common/                 # 公共模块</div><div class=\"line\">│   ├── common-core/       # 核心工具</div><div class=\"line\">│   ├── common-redis/      # Redis工具</div><div class=\"line\">│   └── common-log/        # 日志工具</div><div class=\"line\">├── system/                # 系统模块</div><div class=\"line\">│   ├── sys-api/          # 接口定义</div><div class=\"line\">│   └── sys-service/      # 服务实现</div><div class=\"line\">├── message/              # 消息模块</div><div class=\"line\">├── task/                 # 任务模块</div><div class=\"line\">└── monitor/             # 监控模块</div></pre></td></tr></table></figure>\n<h2 id=\"五、技术实现要点\"><a href=\"#五、技术实现要点\" class=\"headerlink\" title=\"五、技术实现要点\"></a>五、技术实现要点</h2><h3 id=\"1-数据库设计示例\"><a href=\"#1-数据库设计示例\" class=\"headerlink\" title=\"1. 数据库设计示例\"></a>1. 数据库设计示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">-- 用户表</span></div><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> sys_user (</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">BIGINT</span> PRIMARY <span class=\"keyword\">KEY</span>,</div><div class=\"line\">    username <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">    <span class=\"keyword\">password</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">    email <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>),</div><div class=\"line\">    <span class=\"keyword\">status</span> TINYINT,</div><div class=\"line\">    create_time DATETIME,</div><div class=\"line\">    update_time DATETIME</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h3 id=\"2-核心配置示例\"><a href=\"#2-核心配置示例\" class=\"headerlink\" title=\"2. 核心配置示例\"></a>2. 核心配置示例</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">spring:</span></div><div class=\"line\"><span class=\"attr\">  datasource:</span></div><div class=\"line\"><span class=\"attr\">    url:</span> jdbc:mysql://localhost:<span class=\"number\">3306</span>/demo</div><div class=\"line\"><span class=\"attr\">    username:</span> root</div><div class=\"line\"><span class=\"attr\">    password:</span> root</div><div class=\"line\"><span class=\"attr\">  redis:</span></div><div class=\"line\"><span class=\"attr\">    host:</span> localhost</div><div class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">6379</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-关键代码实现示例\"><a href=\"#3-关键代码实现示例\" class=\"headerlink\" title=\"3. 关键代码实现示例\"></a>3. 关键代码实现示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserDTO <span class=\"title\">createUser</span><span class=\"params\">(UserCreateReq req)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 参数校验</span></div><div class=\"line\">        <span class=\"comment\">// 业务处理</span></div><div class=\"line\">        <span class=\"comment\">// 返回结果</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"六、项目实施计划\"><a href=\"#六、项目实施计划\" class=\"headerlink\" title=\"六、项目实施计划\"></a>六、项目实施计划</h2><h3 id=\"第一阶段：基础框架搭建-2周\"><a href=\"#第一阶段：基础框架搭建-2周\" class=\"headerlink\" title=\"第一阶段：基础框架搭建 (2周)\"></a>第一阶段：基础框架搭建 (2周)</h3><ul>\n<li>[ ] 项目结构创建</li>\n<li>[ ] 基础配置完成</li>\n<li>[ ] 数据库设计</li>\n</ul>\n<h3 id=\"第二阶段：核心功能开发-4周\"><a href=\"#第二阶段：核心功能开发-4周\" class=\"headerlink\" title=\"第二阶段：核心功能开发 (4周)\"></a>第二阶段：核心功能开发 (4周)</h3><ul>\n<li>[ ] 用户管理模块</li>\n<li>[ ] 文件处理功能</li>\n<li>[ ] 基础CRUD实现</li>\n</ul>\n<h3 id=\"第三阶段：高级特性实现-3周\"><a href=\"#第三阶段：高级特性实现-3周\" class=\"headerlink\" title=\"第三阶段：高级特性实现 (3周)\"></a>第三阶段：高级特性实现 (3周)</h3><ul>\n<li>[ ] 消息队列集成</li>\n<li>[ ] 定时任务开发</li>\n<li>[ ] 异步处理实现</li>\n</ul>\n<h3 id=\"第四阶段：系统优化-3周\"><a href=\"#第四阶段：系统优化-3周\" class=\"headerlink\" title=\"第四阶段：系统优化 (3周)\"></a>第四阶段：系统优化 (3周)</h3><ul>\n<li>[ ] 性能优化</li>\n<li>[ ] 单元测试</li>\n<li>[ ] 文档完善</li>\n</ul>\n<h2 id=\"七、注意事项\"><a href=\"#七、注意事项\" class=\"headerlink\" title=\"七、注意事项\"></a>七、注意事项</h2><h3 id=\"1-代码规范\"><a href=\"#1-代码规范\" class=\"headerlink\" title=\"1. 代码规范\"></a>1. 代码规范</h3><ul>\n<li>遵循阿里巴巴Java开发规范</li>\n<li>统一的命名规范</li>\n<li>完善的注释文档</li>\n</ul>\n<h3 id=\"2-性能考虑\"><a href=\"#2-性能考虑\" class=\"headerlink\" title=\"2. 性能考虑\"></a>2. 性能考虑</h3><ul>\n<li>合理使用缓存</li>\n<li>数据库索引优化</li>\n<li>并发控制</li>\n<li>连接池管理</li>\n<li>大数据量处理</li>\n</ul>\n<h3 id=\"3-安全考虑\"><a href=\"#3-安全考虑\" class=\"headerlink\" title=\"3. 安全考虑\"></a>3. 安全考虑</h3><ul>\n<li>数据加密传输</li>\n<li>敏感信息加密</li>\n<li>权限精细控制</li>\n<li>SQL注入防护</li>\n<li>XSS防护</li>\n<li>CSRF防护</li>\n</ul>\n<h3 id=\"4-可维护性\"><a href=\"#4-可维护性\" class=\"headerlink\" title=\"4. 可维护性\"></a>4. 可维护性</h3><ul>\n<li>模块化设计</li>\n<li>接口版本控制</li>\n<li>统一异常处理</li>\n<li>统一响应格式</li>\n<li>完善的日志记录</li>\n</ul>\n<h2 id=\"八、项目验收标准\"><a href=\"#八、项目验收标准\" class=\"headerlink\" title=\"八、项目验收标准\"></a>八、项目验收标准</h2><ol>\n<li>功能完整性</li>\n</ol>\n<ul>\n<li>所有功能模块测试通过</li>\n<li>接口文档完善</li>\n<li>测试用例覆盖率&gt;80%</li>\n</ul>\n<ol>\n<li>性能指标</li>\n</ol>\n<ul>\n<li>接口响应时间&lt;500ms</li>\n<li>并发用户数&gt;1000</li>\n<li>CPU使用率&lt;70%</li>\n</ul>\n<ol>\n<li>代码质量</li>\n</ol>\n<ul>\n<li>代码规范遵循度&gt;90%</li>\n<li>代码重复率&lt;5%</li>\n<li>测试覆盖率&gt;80%</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clqkrbsxk00007vjkp4jq9y5z","tag_id":"clqkrbsxm00027vjkxelggj8t","_id":"clqkrbsxn00077vjkaco01kjw"},{"post_id":"clqkrbsxl00017vjkfd8icu4p","tag_id":"clqkrbsxn00067vjkbpi5ifd0","_id":"clqkrbsxo000a7vjk9a24g5mc"},{"post_id":"clqkrbsxm00037vjkqammq4q3","tag_id":"clqkrbsxn00097vjkc3hu14wd","_id":"clqkrbsxo000c7vjkksu1gfl4"},{"post_id":"clqkrbsxn00047vjke1p6kom7","tag_id":"clqkrbsxo000b7vjkg33i2qui","_id":"clqkrbsxo000e7vjkrxxl6oop"},{"post_id":"clqkrbsxn00057vjkkxae08rd","tag_id":"clqkrbsxo000d7vjk238ccgty","_id":"clqkrbsxo000g7vjktokl9h3o"},{"post_id":"clqkrbsxn00087vjkeyh166ah","tag_id":"clqkrbsxo000f7vjkq6nrq4fg","_id":"clqkrbsxo000h7vjkucmhlywe"},{"post_id":"clqkrbsxt000p7vjkgqa1ko2w","tag_id":"clqkrbsxn00097vjkc3hu14wd","_id":"clqkrbsxu000u7vjk46vtp2cy"},{"post_id":"clqkrbsxs000i7vjk5d1ipp9f","tag_id":"clqkrbsxt000m7vjk0dvvocin","_id":"clqkrbsxu000x7vjks40ub1k5"},{"post_id":"clqkrbsxt000r7vjkrw3volrv","tag_id":"clqkrbsxm00027vjkxelggj8t","_id":"clqkrbsxu00117vjkekkzzbpf"},{"post_id":"clqkrbsxs000k7vjkzzsnz7pl","tag_id":"clqkrbsxu000s7vjkkjds3dnl","_id":"clqkrbsxv00147vjkts9rf3fh"},{"post_id":"clqkrbsxt000n7vjkneuufg09","tag_id":"clqkrbsxu00107vjkrkdlmzu9","_id":"clqkrbsxv00187vjk15c2o8od"},{"post_id":"clqkrbsxu000v7vjkb439oi0a","tag_id":"clqkrbsxv00167vjk2ubqg9nt","_id":"clqkrbsxv001a7vjkungt1qg7"},{"post_id":"clqkrbsxu00127vjkwr7473hi","tag_id":"clqkrbsxv001b7vjk2nwn9hob","_id":"clqkrbsxv001d7vjk1lll4ic7"},{"post_id":"cm5gvo7hy0000h22zd5xkoxky","tag_id":"clqkrbsxv00197vjk6s97i5e0","_id":"cm5gvo7i00002h22ze0qwtk60"},{"post_id":"cm5gvo7i00001h22zljbugem5","tag_id":"clqkrbsxv00167vjk2ubqg9nt","_id":"cm5gvo7i10004h22z9v4ctflo"},{"post_id":"cm5gvo7i00003h22znzodgxft","tag_id":"clqkrbsxv00167vjk2ubqg9nt","_id":"cm5gvo7i10005h22zxvi4b126"},{"post_id":"cm5gws8r80006h22zj8jsvuut","tag_id":"clqkrbsxv00167vjk2ubqg9nt","_id":"cm5gx5bn60007h22zi7nbsvlf"}],"Tag":[{"name":"hexo","_id":"clqkrbsxm00027vjkxelggj8t"},{"name":"git","_id":"clqkrbsxn00067vjkbpi5ifd0"},{"name":"算法","_id":"clqkrbsxn00097vjkc3hu14wd"},{"name":"java","_id":"clqkrbsxo000b7vjkg33i2qui"},{"name":"markdown","_id":"clqkrbsxo000d7vjk238ccgty"},{"name":"python","_id":"clqkrbsxo000f7vjkq6nrq4fg"},{"name":"ADB","_id":"clqkrbsxt000m7vjk0dvvocin"},{"name":"bat","_id":"clqkrbsxu000s7vjkkjds3dnl"},{"name":"android","_id":"clqkrbsxu00107vjkrkdlmzu9"},{"name":"总结","_id":"clqkrbsxv00167vjk2ubqg9nt"},{"name":"总结,android","_id":"clqkrbsxv00197vjk6s97i5e0"},{"name":"工具","_id":"clqkrbsxv001b7vjk2nwn9hob"}]}}